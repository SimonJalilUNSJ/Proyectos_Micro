
fault_gen.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000013fc  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000001d0  080015cc  080015cc  000115cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800179c  0800179c  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  0800179c  0800179c  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800179c  0800179c  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800179c  0800179c  0001179c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080017a0  080017a0  000117a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080017a4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000038  20000064  08001808  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000009c  08001808  0002009c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002409  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000679  00000000  00000000  0002249d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000140  00000000  00000000  00022b18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000108  00000000  00000000  00022c58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002bf0  00000000  00000000  00022d60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001340  00000000  00000000  00025950  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000973c  00000000  00000000  00026c90  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000303cc  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c04  00000000  00000000  00030420  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000064 	.word	0x20000064
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080015b4 	.word	0x080015b4

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000068 	.word	0x20000068
 800020c:	080015b4 	.word	0x080015b4

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <fun_divide>:

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

void fun_divide(int x, int y){
 80002b0:	b480      	push	{r7}
 80002b2:	b083      	sub	sp, #12
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	6078      	str	r0, [r7, #4]
 80002b8:	6039      	str	r1, [r7, #0]
	return x/y;
 80002ba:	bf00      	nop
}
 80002bc:	370c      	adds	r7, #12
 80002be:	46bd      	mov	sp, r7
 80002c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c4:	4770      	bx	lr
	...

080002c8 <main>:

int main(void)
{
 80002c8:	b580      	push	{r7, lr}
 80002ca:	b082      	sub	sp, #8
 80002cc:	af00      	add	r7, sp, #0
	//1. Habilitar todas las excepciones configurables como error de uso,
	//error de manjeo de memoria y error de bus
	uint32_t *pSHCSR = (uint32_t*)0xE000ED24;
 80002ce:	4b10      	ldr	r3, [pc, #64]	; (8000310 <main+0x48>)
 80002d0:	607b      	str	r3, [r7, #4]

	*pSHCSR |= (1 << 16);	//manejo de memoria
 80002d2:	687b      	ldr	r3, [r7, #4]
 80002d4:	681b      	ldr	r3, [r3, #0]
 80002d6:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	601a      	str	r2, [r3, #0]
	*pSHCSR |= (1 << 17);	//error de bus
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	f443 3200 	orr.w	r2, r3, #131072	; 0x20000
 80002e6:	687b      	ldr	r3, [r7, #4]
 80002e8:	601a      	str	r2, [r3, #0]
	*pSHCSR |= (1 << 18);	//error de uso
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	681b      	ldr	r3, [r3, #0]
 80002ee:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	601a      	str	r2, [r3, #0]

	//2. Habilitar la trampa de division por cero.
	uint32_t *pCCR = (uint32_t*) 0xE000ED14;
 80002f6:	4b07      	ldr	r3, [pc, #28]	; (8000314 <main+0x4c>)
 80002f8:	603b      	str	r3, [r7, #0]
	*pCCR |= (1 << 4);
 80002fa:	683b      	ldr	r3, [r7, #0]
 80002fc:	681b      	ldr	r3, [r3, #0]
 80002fe:	f043 0210 	orr.w	r2, r3, #16
 8000302:	683b      	ldr	r3, [r7, #0]
 8000304:	601a      	str	r2, [r3, #0]

	//3. Intento de division por cero
	fun_divide(0, 0);
 8000306:	2100      	movs	r1, #0
 8000308:	2000      	movs	r0, #0
 800030a:	f7ff ffd1 	bl	80002b0 <fun_divide>

	/* Loop forever */
	for(;;);
 800030e:	e7fe      	b.n	800030e <main+0x46>
 8000310:	e000ed24 	.word	0xe000ed24
 8000314:	e000ed14 	.word	0xe000ed14

08000318 <HardFault_Handler>:
}

//2.Implementar los manipuladores de errores.
void HardFault_Handler(void){
 8000318:	b580      	push	{r7, lr}
 800031a:	af00      	add	r7, sp, #0
	printf("Excepción : Hardfault\n");
 800031c:	4801      	ldr	r0, [pc, #4]	; (8000324 <HardFault_Handler+0xc>)
 800031e:	f000 fa03 	bl	8000728 <puts>
	while(1);
 8000322:	e7fe      	b.n	8000322 <HardFault_Handler+0xa>
 8000324:	080015cc 	.word	0x080015cc

08000328 <MemManage_Handler>:
}

void MemManage_Handler(void){
 8000328:	b580      	push	{r7, lr}
 800032a:	af00      	add	r7, sp, #0
	printf("Excepción : Manejo de memoria\n");
 800032c:	4801      	ldr	r0, [pc, #4]	; (8000334 <MemManage_Handler+0xc>)
 800032e:	f000 f9fb 	bl	8000728 <puts>
	while(1);
 8000332:	e7fe      	b.n	8000332 <MemManage_Handler+0xa>
 8000334:	080015e4 	.word	0x080015e4

08000338 <BusFault_Handler>:
}

void BusFault_Handler(void){
 8000338:	b580      	push	{r7, lr}
 800033a:	af00      	add	r7, sp, #0
	printf("Excepción : Error de bus\n");
 800033c:	4801      	ldr	r0, [pc, #4]	; (8000344 <BusFault_Handler+0xc>)
 800033e:	f000 f9f3 	bl	8000728 <puts>
	while(1);
 8000342:	e7fe      	b.n	8000342 <BusFault_Handler+0xa>
 8000344:	08001604 	.word	0x08001604

08000348 <UsageFault_Handler>:

__attribute__((naked)) void UsageFault_Handler(void){
	//Aqui pudimos extraer el valor del MSP cuando fue
	//la direccion base del stack frame(thread mode) que tuvo guardado durante
	//la entrada de excepcion desde thread mode a handler mode
	__asm ("MRS r0,MSP");
 8000348:	f3ef 8008 	mrs	r0, MSP
	__asm ("B UsageFault_Handler_c");
 800034c:	f000 b802 	b.w	8000354 <UsageFault_Handler_c>
}
 8000350:	bf00      	nop
	...

08000354 <UsageFault_Handler_c>:

void UsageFault_Handler_c(uint32_t *pBaseStackFrame){
 8000354:	b580      	push	{r7, lr}
 8000356:	b084      	sub	sp, #16
 8000358:	af00      	add	r7, sp, #0
 800035a:	6078      	str	r0, [r7, #4]
	//El termino "register" sirve para indicarle al compilador
	//que la variable no se guarde en el stack sino en un registro
	//register uint32_t msp_value __asm("r0");
	//uint32_t *pMSP = (uint32_t*)msp_value;

	uint32_t *pUFSR = (uint32_t*)0xE000ED2A;
 800035c:	4b23      	ldr	r3, [pc, #140]	; (80003ec <UsageFault_Handler_c+0x98>)
 800035e:	60fb      	str	r3, [r7, #12]
	printf("Excepción : Error de uso\n");
 8000360:	4823      	ldr	r0, [pc, #140]	; (80003f0 <UsageFault_Handler_c+0x9c>)
 8000362:	f000 f9e1 	bl	8000728 <puts>
	printf("UFSR = %lx\n",(*pUFSR) & 0xFFFF);
 8000366:	68fb      	ldr	r3, [r7, #12]
 8000368:	681b      	ldr	r3, [r3, #0]
 800036a:	b29b      	uxth	r3, r3
 800036c:	4619      	mov	r1, r3
 800036e:	4821      	ldr	r0, [pc, #132]	; (80003f4 <UsageFault_Handler_c+0xa0>)
 8000370:	f000 f954 	bl	800061c <iprintf>
	printf("pBaseStackFrame = %p\n",pBaseStackFrame);
 8000374:	6879      	ldr	r1, [r7, #4]
 8000376:	4820      	ldr	r0, [pc, #128]	; (80003f8 <UsageFault_Handler_c+0xa4>)
 8000378:	f000 f950 	bl	800061c <iprintf>
	printf("Valor de R0 = %lx\n",pBaseStackFrame[0]);
 800037c:	687b      	ldr	r3, [r7, #4]
 800037e:	681b      	ldr	r3, [r3, #0]
 8000380:	4619      	mov	r1, r3
 8000382:	481e      	ldr	r0, [pc, #120]	; (80003fc <UsageFault_Handler_c+0xa8>)
 8000384:	f000 f94a 	bl	800061c <iprintf>
	printf("Valor de R1 = %lx\n",pBaseStackFrame[1]);
 8000388:	687b      	ldr	r3, [r7, #4]
 800038a:	3304      	adds	r3, #4
 800038c:	681b      	ldr	r3, [r3, #0]
 800038e:	4619      	mov	r1, r3
 8000390:	481b      	ldr	r0, [pc, #108]	; (8000400 <UsageFault_Handler_c+0xac>)
 8000392:	f000 f943 	bl	800061c <iprintf>
	printf("Valor de R2 = %lx\n",pBaseStackFrame[2]);
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	3308      	adds	r3, #8
 800039a:	681b      	ldr	r3, [r3, #0]
 800039c:	4619      	mov	r1, r3
 800039e:	4819      	ldr	r0, [pc, #100]	; (8000404 <UsageFault_Handler_c+0xb0>)
 80003a0:	f000 f93c 	bl	800061c <iprintf>
	printf("Valor de R3 = %lx\n",pBaseStackFrame[3]);
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	330c      	adds	r3, #12
 80003a8:	681b      	ldr	r3, [r3, #0]
 80003aa:	4619      	mov	r1, r3
 80003ac:	4816      	ldr	r0, [pc, #88]	; (8000408 <UsageFault_Handler_c+0xb4>)
 80003ae:	f000 f935 	bl	800061c <iprintf>
	printf("Valor de R12 = %lx\n",pBaseStackFrame[4]);
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	3310      	adds	r3, #16
 80003b6:	681b      	ldr	r3, [r3, #0]
 80003b8:	4619      	mov	r1, r3
 80003ba:	4814      	ldr	r0, [pc, #80]	; (800040c <UsageFault_Handler_c+0xb8>)
 80003bc:	f000 f92e 	bl	800061c <iprintf>
	printf("Valor de LR = %lx\n",pBaseStackFrame[5]);
 80003c0:	687b      	ldr	r3, [r7, #4]
 80003c2:	3314      	adds	r3, #20
 80003c4:	681b      	ldr	r3, [r3, #0]
 80003c6:	4619      	mov	r1, r3
 80003c8:	4811      	ldr	r0, [pc, #68]	; (8000410 <UsageFault_Handler_c+0xbc>)
 80003ca:	f000 f927 	bl	800061c <iprintf>
	printf("Valor de PC = %lx\n",pBaseStackFrame[6]);
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	3318      	adds	r3, #24
 80003d2:	681b      	ldr	r3, [r3, #0]
 80003d4:	4619      	mov	r1, r3
 80003d6:	480f      	ldr	r0, [pc, #60]	; (8000414 <UsageFault_Handler_c+0xc0>)
 80003d8:	f000 f920 	bl	800061c <iprintf>
	printf("Valor de XPSR = %lx\n",pBaseStackFrame[7]);
 80003dc:	687b      	ldr	r3, [r7, #4]
 80003de:	331c      	adds	r3, #28
 80003e0:	681b      	ldr	r3, [r3, #0]
 80003e2:	4619      	mov	r1, r3
 80003e4:	480c      	ldr	r0, [pc, #48]	; (8000418 <UsageFault_Handler_c+0xc4>)
 80003e6:	f000 f919 	bl	800061c <iprintf>

	while(1);
 80003ea:	e7fe      	b.n	80003ea <UsageFault_Handler_c+0x96>
 80003ec:	e000ed2a 	.word	0xe000ed2a
 80003f0:	08001620 	.word	0x08001620
 80003f4:	0800163c 	.word	0x0800163c
 80003f8:	08001648 	.word	0x08001648
 80003fc:	08001660 	.word	0x08001660
 8000400:	08001674 	.word	0x08001674
 8000404:	08001688 	.word	0x08001688
 8000408:	0800169c 	.word	0x0800169c
 800040c:	080016b0 	.word	0x080016b0
 8000410:	080016c4 	.word	0x080016c4
 8000414:	080016d8 	.word	0x080016d8
 8000418:	080016ec 	.word	0x080016ec

0800041c <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800041c:	b580      	push	{r7, lr}
 800041e:	b086      	sub	sp, #24
 8000420:	af00      	add	r7, sp, #0
 8000422:	60f8      	str	r0, [r7, #12]
 8000424:	60b9      	str	r1, [r7, #8]
 8000426:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000428:	2300      	movs	r3, #0
 800042a:	617b      	str	r3, [r7, #20]
 800042c:	e00a      	b.n	8000444 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800042e:	f3af 8000 	nop.w
 8000432:	4601      	mov	r1, r0
 8000434:	68bb      	ldr	r3, [r7, #8]
 8000436:	1c5a      	adds	r2, r3, #1
 8000438:	60ba      	str	r2, [r7, #8]
 800043a:	b2ca      	uxtb	r2, r1
 800043c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800043e:	697b      	ldr	r3, [r7, #20]
 8000440:	3301      	adds	r3, #1
 8000442:	617b      	str	r3, [r7, #20]
 8000444:	697a      	ldr	r2, [r7, #20]
 8000446:	687b      	ldr	r3, [r7, #4]
 8000448:	429a      	cmp	r2, r3
 800044a:	dbf0      	blt.n	800042e <_read+0x12>
	}

return len;
 800044c:	687b      	ldr	r3, [r7, #4]
}
 800044e:	4618      	mov	r0, r3
 8000450:	3718      	adds	r7, #24
 8000452:	46bd      	mov	sp, r7
 8000454:	bd80      	pop	{r7, pc}

08000456 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000456:	b580      	push	{r7, lr}
 8000458:	b086      	sub	sp, #24
 800045a:	af00      	add	r7, sp, #0
 800045c:	60f8      	str	r0, [r7, #12]
 800045e:	60b9      	str	r1, [r7, #8]
 8000460:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000462:	2300      	movs	r3, #0
 8000464:	617b      	str	r3, [r7, #20]
 8000466:	e009      	b.n	800047c <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000468:	68bb      	ldr	r3, [r7, #8]
 800046a:	1c5a      	adds	r2, r3, #1
 800046c:	60ba      	str	r2, [r7, #8]
 800046e:	781b      	ldrb	r3, [r3, #0]
 8000470:	4618      	mov	r0, r3
 8000472:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000476:	697b      	ldr	r3, [r7, #20]
 8000478:	3301      	adds	r3, #1
 800047a:	617b      	str	r3, [r7, #20]
 800047c:	697a      	ldr	r2, [r7, #20]
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	429a      	cmp	r2, r3
 8000482:	dbf1      	blt.n	8000468 <_write+0x12>
	}
	return len;
 8000484:	687b      	ldr	r3, [r7, #4]
}
 8000486:	4618      	mov	r0, r3
 8000488:	3718      	adds	r7, #24
 800048a:	46bd      	mov	sp, r7
 800048c:	bd80      	pop	{r7, pc}

0800048e <_close>:

int _close(int file)
{
 800048e:	b480      	push	{r7}
 8000490:	b083      	sub	sp, #12
 8000492:	af00      	add	r7, sp, #0
 8000494:	6078      	str	r0, [r7, #4]
	return -1;
 8000496:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 800049a:	4618      	mov	r0, r3
 800049c:	370c      	adds	r7, #12
 800049e:	46bd      	mov	sp, r7
 80004a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004a4:	4770      	bx	lr

080004a6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80004a6:	b480      	push	{r7}
 80004a8:	b083      	sub	sp, #12
 80004aa:	af00      	add	r7, sp, #0
 80004ac:	6078      	str	r0, [r7, #4]
 80004ae:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80004b0:	683b      	ldr	r3, [r7, #0]
 80004b2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80004b6:	605a      	str	r2, [r3, #4]
	return 0;
 80004b8:	2300      	movs	r3, #0
}
 80004ba:	4618      	mov	r0, r3
 80004bc:	370c      	adds	r7, #12
 80004be:	46bd      	mov	sp, r7
 80004c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004c4:	4770      	bx	lr

080004c6 <_isatty>:

int _isatty(int file)
{
 80004c6:	b480      	push	{r7}
 80004c8:	b083      	sub	sp, #12
 80004ca:	af00      	add	r7, sp, #0
 80004cc:	6078      	str	r0, [r7, #4]
	return 1;
 80004ce:	2301      	movs	r3, #1
}
 80004d0:	4618      	mov	r0, r3
 80004d2:	370c      	adds	r7, #12
 80004d4:	46bd      	mov	sp, r7
 80004d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004da:	4770      	bx	lr

080004dc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004dc:	b480      	push	{r7}
 80004de:	b085      	sub	sp, #20
 80004e0:	af00      	add	r7, sp, #0
 80004e2:	60f8      	str	r0, [r7, #12]
 80004e4:	60b9      	str	r1, [r7, #8]
 80004e6:	607a      	str	r2, [r7, #4]
	return 0;
 80004e8:	2300      	movs	r3, #0
}
 80004ea:	4618      	mov	r0, r3
 80004ec:	3714      	adds	r7, #20
 80004ee:	46bd      	mov	sp, r7
 80004f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004f4:	4770      	bx	lr
	...

080004f8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004f8:	b580      	push	{r7, lr}
 80004fa:	b086      	sub	sp, #24
 80004fc:	af00      	add	r7, sp, #0
 80004fe:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000500:	4a14      	ldr	r2, [pc, #80]	; (8000554 <_sbrk+0x5c>)
 8000502:	4b15      	ldr	r3, [pc, #84]	; (8000558 <_sbrk+0x60>)
 8000504:	1ad3      	subs	r3, r2, r3
 8000506:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000508:	697b      	ldr	r3, [r7, #20]
 800050a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800050c:	4b13      	ldr	r3, [pc, #76]	; (800055c <_sbrk+0x64>)
 800050e:	681b      	ldr	r3, [r3, #0]
 8000510:	2b00      	cmp	r3, #0
 8000512:	d102      	bne.n	800051a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000514:	4b11      	ldr	r3, [pc, #68]	; (800055c <_sbrk+0x64>)
 8000516:	4a12      	ldr	r2, [pc, #72]	; (8000560 <_sbrk+0x68>)
 8000518:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800051a:	4b10      	ldr	r3, [pc, #64]	; (800055c <_sbrk+0x64>)
 800051c:	681a      	ldr	r2, [r3, #0]
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	4413      	add	r3, r2
 8000522:	693a      	ldr	r2, [r7, #16]
 8000524:	429a      	cmp	r2, r3
 8000526:	d207      	bcs.n	8000538 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000528:	f000 f846 	bl	80005b8 <__errno>
 800052c:	4603      	mov	r3, r0
 800052e:	220c      	movs	r2, #12
 8000530:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000532:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000536:	e009      	b.n	800054c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000538:	4b08      	ldr	r3, [pc, #32]	; (800055c <_sbrk+0x64>)
 800053a:	681b      	ldr	r3, [r3, #0]
 800053c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800053e:	4b07      	ldr	r3, [pc, #28]	; (800055c <_sbrk+0x64>)
 8000540:	681a      	ldr	r2, [r3, #0]
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	4413      	add	r3, r2
 8000546:	4a05      	ldr	r2, [pc, #20]	; (800055c <_sbrk+0x64>)
 8000548:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800054a:	68fb      	ldr	r3, [r7, #12]
}
 800054c:	4618      	mov	r0, r3
 800054e:	3718      	adds	r7, #24
 8000550:	46bd      	mov	sp, r7
 8000552:	bd80      	pop	{r7, pc}
 8000554:	20008000 	.word	0x20008000
 8000558:	00000400 	.word	0x00000400
 800055c:	20000080 	.word	0x20000080
 8000560:	200000a0 	.word	0x200000a0

08000564 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000564:	480d      	ldr	r0, [pc, #52]	; (800059c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000566:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000568:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800056c:	480c      	ldr	r0, [pc, #48]	; (80005a0 <LoopForever+0x6>)
  ldr r1, =_edata
 800056e:	490d      	ldr	r1, [pc, #52]	; (80005a4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000570:	4a0d      	ldr	r2, [pc, #52]	; (80005a8 <LoopForever+0xe>)
  movs r3, #0
 8000572:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000574:	e002      	b.n	800057c <LoopCopyDataInit>

08000576 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000576:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000578:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800057a:	3304      	adds	r3, #4

0800057c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800057c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800057e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000580:	d3f9      	bcc.n	8000576 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000582:	4a0a      	ldr	r2, [pc, #40]	; (80005ac <LoopForever+0x12>)
  ldr r4, =_ebss
 8000584:	4c0a      	ldr	r4, [pc, #40]	; (80005b0 <LoopForever+0x16>)
  movs r3, #0
 8000586:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000588:	e001      	b.n	800058e <LoopFillZerobss>

0800058a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800058a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800058c:	3204      	adds	r2, #4

0800058e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800058e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000590:	d3fb      	bcc.n	800058a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000592:	f000 f817 	bl	80005c4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000596:	f7ff fe97 	bl	80002c8 <main>

0800059a <LoopForever>:

LoopForever:
    b LoopForever
 800059a:	e7fe      	b.n	800059a <LoopForever>
  ldr   r0, =_estack
 800059c:	20008000 	.word	0x20008000
  ldr r0, =_sdata
 80005a0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005a4:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80005a8:	080017a4 	.word	0x080017a4
  ldr r2, =_sbss
 80005ac:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80005b0:	2000009c 	.word	0x2000009c

080005b4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005b4:	e7fe      	b.n	80005b4 <ADC_IRQHandler>
	...

080005b8 <__errno>:
 80005b8:	4b01      	ldr	r3, [pc, #4]	; (80005c0 <__errno+0x8>)
 80005ba:	6818      	ldr	r0, [r3, #0]
 80005bc:	4770      	bx	lr
 80005be:	bf00      	nop
 80005c0:	20000000 	.word	0x20000000

080005c4 <__libc_init_array>:
 80005c4:	b570      	push	{r4, r5, r6, lr}
 80005c6:	4d0d      	ldr	r5, [pc, #52]	; (80005fc <__libc_init_array+0x38>)
 80005c8:	4c0d      	ldr	r4, [pc, #52]	; (8000600 <__libc_init_array+0x3c>)
 80005ca:	1b64      	subs	r4, r4, r5
 80005cc:	10a4      	asrs	r4, r4, #2
 80005ce:	2600      	movs	r6, #0
 80005d0:	42a6      	cmp	r6, r4
 80005d2:	d109      	bne.n	80005e8 <__libc_init_array+0x24>
 80005d4:	4d0b      	ldr	r5, [pc, #44]	; (8000604 <__libc_init_array+0x40>)
 80005d6:	4c0c      	ldr	r4, [pc, #48]	; (8000608 <__libc_init_array+0x44>)
 80005d8:	f000 ffec 	bl	80015b4 <_init>
 80005dc:	1b64      	subs	r4, r4, r5
 80005de:	10a4      	asrs	r4, r4, #2
 80005e0:	2600      	movs	r6, #0
 80005e2:	42a6      	cmp	r6, r4
 80005e4:	d105      	bne.n	80005f2 <__libc_init_array+0x2e>
 80005e6:	bd70      	pop	{r4, r5, r6, pc}
 80005e8:	f855 3b04 	ldr.w	r3, [r5], #4
 80005ec:	4798      	blx	r3
 80005ee:	3601      	adds	r6, #1
 80005f0:	e7ee      	b.n	80005d0 <__libc_init_array+0xc>
 80005f2:	f855 3b04 	ldr.w	r3, [r5], #4
 80005f6:	4798      	blx	r3
 80005f8:	3601      	adds	r6, #1
 80005fa:	e7f2      	b.n	80005e2 <__libc_init_array+0x1e>
 80005fc:	0800179c 	.word	0x0800179c
 8000600:	0800179c 	.word	0x0800179c
 8000604:	0800179c 	.word	0x0800179c
 8000608:	080017a0 	.word	0x080017a0

0800060c <memset>:
 800060c:	4402      	add	r2, r0
 800060e:	4603      	mov	r3, r0
 8000610:	4293      	cmp	r3, r2
 8000612:	d100      	bne.n	8000616 <memset+0xa>
 8000614:	4770      	bx	lr
 8000616:	f803 1b01 	strb.w	r1, [r3], #1
 800061a:	e7f9      	b.n	8000610 <memset+0x4>

0800061c <iprintf>:
 800061c:	b40f      	push	{r0, r1, r2, r3}
 800061e:	4b0a      	ldr	r3, [pc, #40]	; (8000648 <iprintf+0x2c>)
 8000620:	b513      	push	{r0, r1, r4, lr}
 8000622:	681c      	ldr	r4, [r3, #0]
 8000624:	b124      	cbz	r4, 8000630 <iprintf+0x14>
 8000626:	69a3      	ldr	r3, [r4, #24]
 8000628:	b913      	cbnz	r3, 8000630 <iprintf+0x14>
 800062a:	4620      	mov	r0, r4
 800062c:	f000 fa5e 	bl	8000aec <__sinit>
 8000630:	ab05      	add	r3, sp, #20
 8000632:	9a04      	ldr	r2, [sp, #16]
 8000634:	68a1      	ldr	r1, [r4, #8]
 8000636:	9301      	str	r3, [sp, #4]
 8000638:	4620      	mov	r0, r4
 800063a:	f000 fc2f 	bl	8000e9c <_vfiprintf_r>
 800063e:	b002      	add	sp, #8
 8000640:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000644:	b004      	add	sp, #16
 8000646:	4770      	bx	lr
 8000648:	20000000 	.word	0x20000000

0800064c <_puts_r>:
 800064c:	b570      	push	{r4, r5, r6, lr}
 800064e:	460e      	mov	r6, r1
 8000650:	4605      	mov	r5, r0
 8000652:	b118      	cbz	r0, 800065c <_puts_r+0x10>
 8000654:	6983      	ldr	r3, [r0, #24]
 8000656:	b90b      	cbnz	r3, 800065c <_puts_r+0x10>
 8000658:	f000 fa48 	bl	8000aec <__sinit>
 800065c:	69ab      	ldr	r3, [r5, #24]
 800065e:	68ac      	ldr	r4, [r5, #8]
 8000660:	b913      	cbnz	r3, 8000668 <_puts_r+0x1c>
 8000662:	4628      	mov	r0, r5
 8000664:	f000 fa42 	bl	8000aec <__sinit>
 8000668:	4b2c      	ldr	r3, [pc, #176]	; (800071c <_puts_r+0xd0>)
 800066a:	429c      	cmp	r4, r3
 800066c:	d120      	bne.n	80006b0 <_puts_r+0x64>
 800066e:	686c      	ldr	r4, [r5, #4]
 8000670:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000672:	07db      	lsls	r3, r3, #31
 8000674:	d405      	bmi.n	8000682 <_puts_r+0x36>
 8000676:	89a3      	ldrh	r3, [r4, #12]
 8000678:	0598      	lsls	r0, r3, #22
 800067a:	d402      	bmi.n	8000682 <_puts_r+0x36>
 800067c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800067e:	f000 fad3 	bl	8000c28 <__retarget_lock_acquire_recursive>
 8000682:	89a3      	ldrh	r3, [r4, #12]
 8000684:	0719      	lsls	r1, r3, #28
 8000686:	d51d      	bpl.n	80006c4 <_puts_r+0x78>
 8000688:	6923      	ldr	r3, [r4, #16]
 800068a:	b1db      	cbz	r3, 80006c4 <_puts_r+0x78>
 800068c:	3e01      	subs	r6, #1
 800068e:	68a3      	ldr	r3, [r4, #8]
 8000690:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000694:	3b01      	subs	r3, #1
 8000696:	60a3      	str	r3, [r4, #8]
 8000698:	bb39      	cbnz	r1, 80006ea <_puts_r+0x9e>
 800069a:	2b00      	cmp	r3, #0
 800069c:	da38      	bge.n	8000710 <_puts_r+0xc4>
 800069e:	4622      	mov	r2, r4
 80006a0:	210a      	movs	r1, #10
 80006a2:	4628      	mov	r0, r5
 80006a4:	f000 f848 	bl	8000738 <__swbuf_r>
 80006a8:	3001      	adds	r0, #1
 80006aa:	d011      	beq.n	80006d0 <_puts_r+0x84>
 80006ac:	250a      	movs	r5, #10
 80006ae:	e011      	b.n	80006d4 <_puts_r+0x88>
 80006b0:	4b1b      	ldr	r3, [pc, #108]	; (8000720 <_puts_r+0xd4>)
 80006b2:	429c      	cmp	r4, r3
 80006b4:	d101      	bne.n	80006ba <_puts_r+0x6e>
 80006b6:	68ac      	ldr	r4, [r5, #8]
 80006b8:	e7da      	b.n	8000670 <_puts_r+0x24>
 80006ba:	4b1a      	ldr	r3, [pc, #104]	; (8000724 <_puts_r+0xd8>)
 80006bc:	429c      	cmp	r4, r3
 80006be:	bf08      	it	eq
 80006c0:	68ec      	ldreq	r4, [r5, #12]
 80006c2:	e7d5      	b.n	8000670 <_puts_r+0x24>
 80006c4:	4621      	mov	r1, r4
 80006c6:	4628      	mov	r0, r5
 80006c8:	f000 f888 	bl	80007dc <__swsetup_r>
 80006cc:	2800      	cmp	r0, #0
 80006ce:	d0dd      	beq.n	800068c <_puts_r+0x40>
 80006d0:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 80006d4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80006d6:	07da      	lsls	r2, r3, #31
 80006d8:	d405      	bmi.n	80006e6 <_puts_r+0x9a>
 80006da:	89a3      	ldrh	r3, [r4, #12]
 80006dc:	059b      	lsls	r3, r3, #22
 80006de:	d402      	bmi.n	80006e6 <_puts_r+0x9a>
 80006e0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80006e2:	f000 faa2 	bl	8000c2a <__retarget_lock_release_recursive>
 80006e6:	4628      	mov	r0, r5
 80006e8:	bd70      	pop	{r4, r5, r6, pc}
 80006ea:	2b00      	cmp	r3, #0
 80006ec:	da04      	bge.n	80006f8 <_puts_r+0xac>
 80006ee:	69a2      	ldr	r2, [r4, #24]
 80006f0:	429a      	cmp	r2, r3
 80006f2:	dc06      	bgt.n	8000702 <_puts_r+0xb6>
 80006f4:	290a      	cmp	r1, #10
 80006f6:	d004      	beq.n	8000702 <_puts_r+0xb6>
 80006f8:	6823      	ldr	r3, [r4, #0]
 80006fa:	1c5a      	adds	r2, r3, #1
 80006fc:	6022      	str	r2, [r4, #0]
 80006fe:	7019      	strb	r1, [r3, #0]
 8000700:	e7c5      	b.n	800068e <_puts_r+0x42>
 8000702:	4622      	mov	r2, r4
 8000704:	4628      	mov	r0, r5
 8000706:	f000 f817 	bl	8000738 <__swbuf_r>
 800070a:	3001      	adds	r0, #1
 800070c:	d1bf      	bne.n	800068e <_puts_r+0x42>
 800070e:	e7df      	b.n	80006d0 <_puts_r+0x84>
 8000710:	6823      	ldr	r3, [r4, #0]
 8000712:	250a      	movs	r5, #10
 8000714:	1c5a      	adds	r2, r3, #1
 8000716:	6022      	str	r2, [r4, #0]
 8000718:	701d      	strb	r5, [r3, #0]
 800071a:	e7db      	b.n	80006d4 <_puts_r+0x88>
 800071c:	08001728 	.word	0x08001728
 8000720:	08001748 	.word	0x08001748
 8000724:	08001708 	.word	0x08001708

08000728 <puts>:
 8000728:	4b02      	ldr	r3, [pc, #8]	; (8000734 <puts+0xc>)
 800072a:	4601      	mov	r1, r0
 800072c:	6818      	ldr	r0, [r3, #0]
 800072e:	f7ff bf8d 	b.w	800064c <_puts_r>
 8000732:	bf00      	nop
 8000734:	20000000 	.word	0x20000000

08000738 <__swbuf_r>:
 8000738:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800073a:	460e      	mov	r6, r1
 800073c:	4614      	mov	r4, r2
 800073e:	4605      	mov	r5, r0
 8000740:	b118      	cbz	r0, 800074a <__swbuf_r+0x12>
 8000742:	6983      	ldr	r3, [r0, #24]
 8000744:	b90b      	cbnz	r3, 800074a <__swbuf_r+0x12>
 8000746:	f000 f9d1 	bl	8000aec <__sinit>
 800074a:	4b21      	ldr	r3, [pc, #132]	; (80007d0 <__swbuf_r+0x98>)
 800074c:	429c      	cmp	r4, r3
 800074e:	d12b      	bne.n	80007a8 <__swbuf_r+0x70>
 8000750:	686c      	ldr	r4, [r5, #4]
 8000752:	69a3      	ldr	r3, [r4, #24]
 8000754:	60a3      	str	r3, [r4, #8]
 8000756:	89a3      	ldrh	r3, [r4, #12]
 8000758:	071a      	lsls	r2, r3, #28
 800075a:	d52f      	bpl.n	80007bc <__swbuf_r+0x84>
 800075c:	6923      	ldr	r3, [r4, #16]
 800075e:	b36b      	cbz	r3, 80007bc <__swbuf_r+0x84>
 8000760:	6923      	ldr	r3, [r4, #16]
 8000762:	6820      	ldr	r0, [r4, #0]
 8000764:	1ac0      	subs	r0, r0, r3
 8000766:	6963      	ldr	r3, [r4, #20]
 8000768:	b2f6      	uxtb	r6, r6
 800076a:	4283      	cmp	r3, r0
 800076c:	4637      	mov	r7, r6
 800076e:	dc04      	bgt.n	800077a <__swbuf_r+0x42>
 8000770:	4621      	mov	r1, r4
 8000772:	4628      	mov	r0, r5
 8000774:	f000 f926 	bl	80009c4 <_fflush_r>
 8000778:	bb30      	cbnz	r0, 80007c8 <__swbuf_r+0x90>
 800077a:	68a3      	ldr	r3, [r4, #8]
 800077c:	3b01      	subs	r3, #1
 800077e:	60a3      	str	r3, [r4, #8]
 8000780:	6823      	ldr	r3, [r4, #0]
 8000782:	1c5a      	adds	r2, r3, #1
 8000784:	6022      	str	r2, [r4, #0]
 8000786:	701e      	strb	r6, [r3, #0]
 8000788:	6963      	ldr	r3, [r4, #20]
 800078a:	3001      	adds	r0, #1
 800078c:	4283      	cmp	r3, r0
 800078e:	d004      	beq.n	800079a <__swbuf_r+0x62>
 8000790:	89a3      	ldrh	r3, [r4, #12]
 8000792:	07db      	lsls	r3, r3, #31
 8000794:	d506      	bpl.n	80007a4 <__swbuf_r+0x6c>
 8000796:	2e0a      	cmp	r6, #10
 8000798:	d104      	bne.n	80007a4 <__swbuf_r+0x6c>
 800079a:	4621      	mov	r1, r4
 800079c:	4628      	mov	r0, r5
 800079e:	f000 f911 	bl	80009c4 <_fflush_r>
 80007a2:	b988      	cbnz	r0, 80007c8 <__swbuf_r+0x90>
 80007a4:	4638      	mov	r0, r7
 80007a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007a8:	4b0a      	ldr	r3, [pc, #40]	; (80007d4 <__swbuf_r+0x9c>)
 80007aa:	429c      	cmp	r4, r3
 80007ac:	d101      	bne.n	80007b2 <__swbuf_r+0x7a>
 80007ae:	68ac      	ldr	r4, [r5, #8]
 80007b0:	e7cf      	b.n	8000752 <__swbuf_r+0x1a>
 80007b2:	4b09      	ldr	r3, [pc, #36]	; (80007d8 <__swbuf_r+0xa0>)
 80007b4:	429c      	cmp	r4, r3
 80007b6:	bf08      	it	eq
 80007b8:	68ec      	ldreq	r4, [r5, #12]
 80007ba:	e7ca      	b.n	8000752 <__swbuf_r+0x1a>
 80007bc:	4621      	mov	r1, r4
 80007be:	4628      	mov	r0, r5
 80007c0:	f000 f80c 	bl	80007dc <__swsetup_r>
 80007c4:	2800      	cmp	r0, #0
 80007c6:	d0cb      	beq.n	8000760 <__swbuf_r+0x28>
 80007c8:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 80007cc:	e7ea      	b.n	80007a4 <__swbuf_r+0x6c>
 80007ce:	bf00      	nop
 80007d0:	08001728 	.word	0x08001728
 80007d4:	08001748 	.word	0x08001748
 80007d8:	08001708 	.word	0x08001708

080007dc <__swsetup_r>:
 80007dc:	4b32      	ldr	r3, [pc, #200]	; (80008a8 <__swsetup_r+0xcc>)
 80007de:	b570      	push	{r4, r5, r6, lr}
 80007e0:	681d      	ldr	r5, [r3, #0]
 80007e2:	4606      	mov	r6, r0
 80007e4:	460c      	mov	r4, r1
 80007e6:	b125      	cbz	r5, 80007f2 <__swsetup_r+0x16>
 80007e8:	69ab      	ldr	r3, [r5, #24]
 80007ea:	b913      	cbnz	r3, 80007f2 <__swsetup_r+0x16>
 80007ec:	4628      	mov	r0, r5
 80007ee:	f000 f97d 	bl	8000aec <__sinit>
 80007f2:	4b2e      	ldr	r3, [pc, #184]	; (80008ac <__swsetup_r+0xd0>)
 80007f4:	429c      	cmp	r4, r3
 80007f6:	d10f      	bne.n	8000818 <__swsetup_r+0x3c>
 80007f8:	686c      	ldr	r4, [r5, #4]
 80007fa:	89a3      	ldrh	r3, [r4, #12]
 80007fc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000800:	0719      	lsls	r1, r3, #28
 8000802:	d42c      	bmi.n	800085e <__swsetup_r+0x82>
 8000804:	06dd      	lsls	r5, r3, #27
 8000806:	d411      	bmi.n	800082c <__swsetup_r+0x50>
 8000808:	2309      	movs	r3, #9
 800080a:	6033      	str	r3, [r6, #0]
 800080c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000810:	81a3      	strh	r3, [r4, #12]
 8000812:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000816:	e03e      	b.n	8000896 <__swsetup_r+0xba>
 8000818:	4b25      	ldr	r3, [pc, #148]	; (80008b0 <__swsetup_r+0xd4>)
 800081a:	429c      	cmp	r4, r3
 800081c:	d101      	bne.n	8000822 <__swsetup_r+0x46>
 800081e:	68ac      	ldr	r4, [r5, #8]
 8000820:	e7eb      	b.n	80007fa <__swsetup_r+0x1e>
 8000822:	4b24      	ldr	r3, [pc, #144]	; (80008b4 <__swsetup_r+0xd8>)
 8000824:	429c      	cmp	r4, r3
 8000826:	bf08      	it	eq
 8000828:	68ec      	ldreq	r4, [r5, #12]
 800082a:	e7e6      	b.n	80007fa <__swsetup_r+0x1e>
 800082c:	0758      	lsls	r0, r3, #29
 800082e:	d512      	bpl.n	8000856 <__swsetup_r+0x7a>
 8000830:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000832:	b141      	cbz	r1, 8000846 <__swsetup_r+0x6a>
 8000834:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000838:	4299      	cmp	r1, r3
 800083a:	d002      	beq.n	8000842 <__swsetup_r+0x66>
 800083c:	4630      	mov	r0, r6
 800083e:	f000 fa59 	bl	8000cf4 <_free_r>
 8000842:	2300      	movs	r3, #0
 8000844:	6363      	str	r3, [r4, #52]	; 0x34
 8000846:	89a3      	ldrh	r3, [r4, #12]
 8000848:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800084c:	81a3      	strh	r3, [r4, #12]
 800084e:	2300      	movs	r3, #0
 8000850:	6063      	str	r3, [r4, #4]
 8000852:	6923      	ldr	r3, [r4, #16]
 8000854:	6023      	str	r3, [r4, #0]
 8000856:	89a3      	ldrh	r3, [r4, #12]
 8000858:	f043 0308 	orr.w	r3, r3, #8
 800085c:	81a3      	strh	r3, [r4, #12]
 800085e:	6923      	ldr	r3, [r4, #16]
 8000860:	b94b      	cbnz	r3, 8000876 <__swsetup_r+0x9a>
 8000862:	89a3      	ldrh	r3, [r4, #12]
 8000864:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000868:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800086c:	d003      	beq.n	8000876 <__swsetup_r+0x9a>
 800086e:	4621      	mov	r1, r4
 8000870:	4630      	mov	r0, r6
 8000872:	f000 f9ff 	bl	8000c74 <__smakebuf_r>
 8000876:	89a0      	ldrh	r0, [r4, #12]
 8000878:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800087c:	f010 0301 	ands.w	r3, r0, #1
 8000880:	d00a      	beq.n	8000898 <__swsetup_r+0xbc>
 8000882:	2300      	movs	r3, #0
 8000884:	60a3      	str	r3, [r4, #8]
 8000886:	6963      	ldr	r3, [r4, #20]
 8000888:	425b      	negs	r3, r3
 800088a:	61a3      	str	r3, [r4, #24]
 800088c:	6923      	ldr	r3, [r4, #16]
 800088e:	b943      	cbnz	r3, 80008a2 <__swsetup_r+0xc6>
 8000890:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000894:	d1ba      	bne.n	800080c <__swsetup_r+0x30>
 8000896:	bd70      	pop	{r4, r5, r6, pc}
 8000898:	0781      	lsls	r1, r0, #30
 800089a:	bf58      	it	pl
 800089c:	6963      	ldrpl	r3, [r4, #20]
 800089e:	60a3      	str	r3, [r4, #8]
 80008a0:	e7f4      	b.n	800088c <__swsetup_r+0xb0>
 80008a2:	2000      	movs	r0, #0
 80008a4:	e7f7      	b.n	8000896 <__swsetup_r+0xba>
 80008a6:	bf00      	nop
 80008a8:	20000000 	.word	0x20000000
 80008ac:	08001728 	.word	0x08001728
 80008b0:	08001748 	.word	0x08001748
 80008b4:	08001708 	.word	0x08001708

080008b8 <__sflush_r>:
 80008b8:	898a      	ldrh	r2, [r1, #12]
 80008ba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80008be:	4605      	mov	r5, r0
 80008c0:	0710      	lsls	r0, r2, #28
 80008c2:	460c      	mov	r4, r1
 80008c4:	d458      	bmi.n	8000978 <__sflush_r+0xc0>
 80008c6:	684b      	ldr	r3, [r1, #4]
 80008c8:	2b00      	cmp	r3, #0
 80008ca:	dc05      	bgt.n	80008d8 <__sflush_r+0x20>
 80008cc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80008ce:	2b00      	cmp	r3, #0
 80008d0:	dc02      	bgt.n	80008d8 <__sflush_r+0x20>
 80008d2:	2000      	movs	r0, #0
 80008d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80008d8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008da:	2e00      	cmp	r6, #0
 80008dc:	d0f9      	beq.n	80008d2 <__sflush_r+0x1a>
 80008de:	2300      	movs	r3, #0
 80008e0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80008e4:	682f      	ldr	r7, [r5, #0]
 80008e6:	602b      	str	r3, [r5, #0]
 80008e8:	d032      	beq.n	8000950 <__sflush_r+0x98>
 80008ea:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80008ec:	89a3      	ldrh	r3, [r4, #12]
 80008ee:	075a      	lsls	r2, r3, #29
 80008f0:	d505      	bpl.n	80008fe <__sflush_r+0x46>
 80008f2:	6863      	ldr	r3, [r4, #4]
 80008f4:	1ac0      	subs	r0, r0, r3
 80008f6:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80008f8:	b10b      	cbz	r3, 80008fe <__sflush_r+0x46>
 80008fa:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80008fc:	1ac0      	subs	r0, r0, r3
 80008fe:	2300      	movs	r3, #0
 8000900:	4602      	mov	r2, r0
 8000902:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000904:	6a21      	ldr	r1, [r4, #32]
 8000906:	4628      	mov	r0, r5
 8000908:	47b0      	blx	r6
 800090a:	1c43      	adds	r3, r0, #1
 800090c:	89a3      	ldrh	r3, [r4, #12]
 800090e:	d106      	bne.n	800091e <__sflush_r+0x66>
 8000910:	6829      	ldr	r1, [r5, #0]
 8000912:	291d      	cmp	r1, #29
 8000914:	d82c      	bhi.n	8000970 <__sflush_r+0xb8>
 8000916:	4a2a      	ldr	r2, [pc, #168]	; (80009c0 <__sflush_r+0x108>)
 8000918:	40ca      	lsrs	r2, r1
 800091a:	07d6      	lsls	r6, r2, #31
 800091c:	d528      	bpl.n	8000970 <__sflush_r+0xb8>
 800091e:	2200      	movs	r2, #0
 8000920:	6062      	str	r2, [r4, #4]
 8000922:	04d9      	lsls	r1, r3, #19
 8000924:	6922      	ldr	r2, [r4, #16]
 8000926:	6022      	str	r2, [r4, #0]
 8000928:	d504      	bpl.n	8000934 <__sflush_r+0x7c>
 800092a:	1c42      	adds	r2, r0, #1
 800092c:	d101      	bne.n	8000932 <__sflush_r+0x7a>
 800092e:	682b      	ldr	r3, [r5, #0]
 8000930:	b903      	cbnz	r3, 8000934 <__sflush_r+0x7c>
 8000932:	6560      	str	r0, [r4, #84]	; 0x54
 8000934:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000936:	602f      	str	r7, [r5, #0]
 8000938:	2900      	cmp	r1, #0
 800093a:	d0ca      	beq.n	80008d2 <__sflush_r+0x1a>
 800093c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000940:	4299      	cmp	r1, r3
 8000942:	d002      	beq.n	800094a <__sflush_r+0x92>
 8000944:	4628      	mov	r0, r5
 8000946:	f000 f9d5 	bl	8000cf4 <_free_r>
 800094a:	2000      	movs	r0, #0
 800094c:	6360      	str	r0, [r4, #52]	; 0x34
 800094e:	e7c1      	b.n	80008d4 <__sflush_r+0x1c>
 8000950:	6a21      	ldr	r1, [r4, #32]
 8000952:	2301      	movs	r3, #1
 8000954:	4628      	mov	r0, r5
 8000956:	47b0      	blx	r6
 8000958:	1c41      	adds	r1, r0, #1
 800095a:	d1c7      	bne.n	80008ec <__sflush_r+0x34>
 800095c:	682b      	ldr	r3, [r5, #0]
 800095e:	2b00      	cmp	r3, #0
 8000960:	d0c4      	beq.n	80008ec <__sflush_r+0x34>
 8000962:	2b1d      	cmp	r3, #29
 8000964:	d001      	beq.n	800096a <__sflush_r+0xb2>
 8000966:	2b16      	cmp	r3, #22
 8000968:	d101      	bne.n	800096e <__sflush_r+0xb6>
 800096a:	602f      	str	r7, [r5, #0]
 800096c:	e7b1      	b.n	80008d2 <__sflush_r+0x1a>
 800096e:	89a3      	ldrh	r3, [r4, #12]
 8000970:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000974:	81a3      	strh	r3, [r4, #12]
 8000976:	e7ad      	b.n	80008d4 <__sflush_r+0x1c>
 8000978:	690f      	ldr	r7, [r1, #16]
 800097a:	2f00      	cmp	r7, #0
 800097c:	d0a9      	beq.n	80008d2 <__sflush_r+0x1a>
 800097e:	0793      	lsls	r3, r2, #30
 8000980:	680e      	ldr	r6, [r1, #0]
 8000982:	bf08      	it	eq
 8000984:	694b      	ldreq	r3, [r1, #20]
 8000986:	600f      	str	r7, [r1, #0]
 8000988:	bf18      	it	ne
 800098a:	2300      	movne	r3, #0
 800098c:	eba6 0807 	sub.w	r8, r6, r7
 8000990:	608b      	str	r3, [r1, #8]
 8000992:	f1b8 0f00 	cmp.w	r8, #0
 8000996:	dd9c      	ble.n	80008d2 <__sflush_r+0x1a>
 8000998:	6a21      	ldr	r1, [r4, #32]
 800099a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800099c:	4643      	mov	r3, r8
 800099e:	463a      	mov	r2, r7
 80009a0:	4628      	mov	r0, r5
 80009a2:	47b0      	blx	r6
 80009a4:	2800      	cmp	r0, #0
 80009a6:	dc06      	bgt.n	80009b6 <__sflush_r+0xfe>
 80009a8:	89a3      	ldrh	r3, [r4, #12]
 80009aa:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80009ae:	81a3      	strh	r3, [r4, #12]
 80009b0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80009b4:	e78e      	b.n	80008d4 <__sflush_r+0x1c>
 80009b6:	4407      	add	r7, r0
 80009b8:	eba8 0800 	sub.w	r8, r8, r0
 80009bc:	e7e9      	b.n	8000992 <__sflush_r+0xda>
 80009be:	bf00      	nop
 80009c0:	20400001 	.word	0x20400001

080009c4 <_fflush_r>:
 80009c4:	b538      	push	{r3, r4, r5, lr}
 80009c6:	690b      	ldr	r3, [r1, #16]
 80009c8:	4605      	mov	r5, r0
 80009ca:	460c      	mov	r4, r1
 80009cc:	b913      	cbnz	r3, 80009d4 <_fflush_r+0x10>
 80009ce:	2500      	movs	r5, #0
 80009d0:	4628      	mov	r0, r5
 80009d2:	bd38      	pop	{r3, r4, r5, pc}
 80009d4:	b118      	cbz	r0, 80009de <_fflush_r+0x1a>
 80009d6:	6983      	ldr	r3, [r0, #24]
 80009d8:	b90b      	cbnz	r3, 80009de <_fflush_r+0x1a>
 80009da:	f000 f887 	bl	8000aec <__sinit>
 80009de:	4b14      	ldr	r3, [pc, #80]	; (8000a30 <_fflush_r+0x6c>)
 80009e0:	429c      	cmp	r4, r3
 80009e2:	d11b      	bne.n	8000a1c <_fflush_r+0x58>
 80009e4:	686c      	ldr	r4, [r5, #4]
 80009e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80009ea:	2b00      	cmp	r3, #0
 80009ec:	d0ef      	beq.n	80009ce <_fflush_r+0xa>
 80009ee:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80009f0:	07d0      	lsls	r0, r2, #31
 80009f2:	d404      	bmi.n	80009fe <_fflush_r+0x3a>
 80009f4:	0599      	lsls	r1, r3, #22
 80009f6:	d402      	bmi.n	80009fe <_fflush_r+0x3a>
 80009f8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80009fa:	f000 f915 	bl	8000c28 <__retarget_lock_acquire_recursive>
 80009fe:	4628      	mov	r0, r5
 8000a00:	4621      	mov	r1, r4
 8000a02:	f7ff ff59 	bl	80008b8 <__sflush_r>
 8000a06:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000a08:	07da      	lsls	r2, r3, #31
 8000a0a:	4605      	mov	r5, r0
 8000a0c:	d4e0      	bmi.n	80009d0 <_fflush_r+0xc>
 8000a0e:	89a3      	ldrh	r3, [r4, #12]
 8000a10:	059b      	lsls	r3, r3, #22
 8000a12:	d4dd      	bmi.n	80009d0 <_fflush_r+0xc>
 8000a14:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000a16:	f000 f908 	bl	8000c2a <__retarget_lock_release_recursive>
 8000a1a:	e7d9      	b.n	80009d0 <_fflush_r+0xc>
 8000a1c:	4b05      	ldr	r3, [pc, #20]	; (8000a34 <_fflush_r+0x70>)
 8000a1e:	429c      	cmp	r4, r3
 8000a20:	d101      	bne.n	8000a26 <_fflush_r+0x62>
 8000a22:	68ac      	ldr	r4, [r5, #8]
 8000a24:	e7df      	b.n	80009e6 <_fflush_r+0x22>
 8000a26:	4b04      	ldr	r3, [pc, #16]	; (8000a38 <_fflush_r+0x74>)
 8000a28:	429c      	cmp	r4, r3
 8000a2a:	bf08      	it	eq
 8000a2c:	68ec      	ldreq	r4, [r5, #12]
 8000a2e:	e7da      	b.n	80009e6 <_fflush_r+0x22>
 8000a30:	08001728 	.word	0x08001728
 8000a34:	08001748 	.word	0x08001748
 8000a38:	08001708 	.word	0x08001708

08000a3c <std>:
 8000a3c:	2300      	movs	r3, #0
 8000a3e:	b510      	push	{r4, lr}
 8000a40:	4604      	mov	r4, r0
 8000a42:	e9c0 3300 	strd	r3, r3, [r0]
 8000a46:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000a4a:	6083      	str	r3, [r0, #8]
 8000a4c:	8181      	strh	r1, [r0, #12]
 8000a4e:	6643      	str	r3, [r0, #100]	; 0x64
 8000a50:	81c2      	strh	r2, [r0, #14]
 8000a52:	6183      	str	r3, [r0, #24]
 8000a54:	4619      	mov	r1, r3
 8000a56:	2208      	movs	r2, #8
 8000a58:	305c      	adds	r0, #92	; 0x5c
 8000a5a:	f7ff fdd7 	bl	800060c <memset>
 8000a5e:	4b05      	ldr	r3, [pc, #20]	; (8000a74 <std+0x38>)
 8000a60:	6263      	str	r3, [r4, #36]	; 0x24
 8000a62:	4b05      	ldr	r3, [pc, #20]	; (8000a78 <std+0x3c>)
 8000a64:	62a3      	str	r3, [r4, #40]	; 0x28
 8000a66:	4b05      	ldr	r3, [pc, #20]	; (8000a7c <std+0x40>)
 8000a68:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000a6a:	4b05      	ldr	r3, [pc, #20]	; (8000a80 <std+0x44>)
 8000a6c:	6224      	str	r4, [r4, #32]
 8000a6e:	6323      	str	r3, [r4, #48]	; 0x30
 8000a70:	bd10      	pop	{r4, pc}
 8000a72:	bf00      	nop
 8000a74:	08001445 	.word	0x08001445
 8000a78:	08001467 	.word	0x08001467
 8000a7c:	0800149f 	.word	0x0800149f
 8000a80:	080014c3 	.word	0x080014c3

08000a84 <_cleanup_r>:
 8000a84:	4901      	ldr	r1, [pc, #4]	; (8000a8c <_cleanup_r+0x8>)
 8000a86:	f000 b8af 	b.w	8000be8 <_fwalk_reent>
 8000a8a:	bf00      	nop
 8000a8c:	080009c5 	.word	0x080009c5

08000a90 <__sfmoreglue>:
 8000a90:	b570      	push	{r4, r5, r6, lr}
 8000a92:	1e4a      	subs	r2, r1, #1
 8000a94:	2568      	movs	r5, #104	; 0x68
 8000a96:	4355      	muls	r5, r2
 8000a98:	460e      	mov	r6, r1
 8000a9a:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000a9e:	f000 f979 	bl	8000d94 <_malloc_r>
 8000aa2:	4604      	mov	r4, r0
 8000aa4:	b140      	cbz	r0, 8000ab8 <__sfmoreglue+0x28>
 8000aa6:	2100      	movs	r1, #0
 8000aa8:	e9c0 1600 	strd	r1, r6, [r0]
 8000aac:	300c      	adds	r0, #12
 8000aae:	60a0      	str	r0, [r4, #8]
 8000ab0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000ab4:	f7ff fdaa 	bl	800060c <memset>
 8000ab8:	4620      	mov	r0, r4
 8000aba:	bd70      	pop	{r4, r5, r6, pc}

08000abc <__sfp_lock_acquire>:
 8000abc:	4801      	ldr	r0, [pc, #4]	; (8000ac4 <__sfp_lock_acquire+0x8>)
 8000abe:	f000 b8b3 	b.w	8000c28 <__retarget_lock_acquire_recursive>
 8000ac2:	bf00      	nop
 8000ac4:	20000094 	.word	0x20000094

08000ac8 <__sfp_lock_release>:
 8000ac8:	4801      	ldr	r0, [pc, #4]	; (8000ad0 <__sfp_lock_release+0x8>)
 8000aca:	f000 b8ae 	b.w	8000c2a <__retarget_lock_release_recursive>
 8000ace:	bf00      	nop
 8000ad0:	20000094 	.word	0x20000094

08000ad4 <__sinit_lock_acquire>:
 8000ad4:	4801      	ldr	r0, [pc, #4]	; (8000adc <__sinit_lock_acquire+0x8>)
 8000ad6:	f000 b8a7 	b.w	8000c28 <__retarget_lock_acquire_recursive>
 8000ada:	bf00      	nop
 8000adc:	2000008f 	.word	0x2000008f

08000ae0 <__sinit_lock_release>:
 8000ae0:	4801      	ldr	r0, [pc, #4]	; (8000ae8 <__sinit_lock_release+0x8>)
 8000ae2:	f000 b8a2 	b.w	8000c2a <__retarget_lock_release_recursive>
 8000ae6:	bf00      	nop
 8000ae8:	2000008f 	.word	0x2000008f

08000aec <__sinit>:
 8000aec:	b510      	push	{r4, lr}
 8000aee:	4604      	mov	r4, r0
 8000af0:	f7ff fff0 	bl	8000ad4 <__sinit_lock_acquire>
 8000af4:	69a3      	ldr	r3, [r4, #24]
 8000af6:	b11b      	cbz	r3, 8000b00 <__sinit+0x14>
 8000af8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000afc:	f7ff bff0 	b.w	8000ae0 <__sinit_lock_release>
 8000b00:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000b04:	6523      	str	r3, [r4, #80]	; 0x50
 8000b06:	4b13      	ldr	r3, [pc, #76]	; (8000b54 <__sinit+0x68>)
 8000b08:	4a13      	ldr	r2, [pc, #76]	; (8000b58 <__sinit+0x6c>)
 8000b0a:	681b      	ldr	r3, [r3, #0]
 8000b0c:	62a2      	str	r2, [r4, #40]	; 0x28
 8000b0e:	42a3      	cmp	r3, r4
 8000b10:	bf04      	itt	eq
 8000b12:	2301      	moveq	r3, #1
 8000b14:	61a3      	streq	r3, [r4, #24]
 8000b16:	4620      	mov	r0, r4
 8000b18:	f000 f820 	bl	8000b5c <__sfp>
 8000b1c:	6060      	str	r0, [r4, #4]
 8000b1e:	4620      	mov	r0, r4
 8000b20:	f000 f81c 	bl	8000b5c <__sfp>
 8000b24:	60a0      	str	r0, [r4, #8]
 8000b26:	4620      	mov	r0, r4
 8000b28:	f000 f818 	bl	8000b5c <__sfp>
 8000b2c:	2200      	movs	r2, #0
 8000b2e:	60e0      	str	r0, [r4, #12]
 8000b30:	2104      	movs	r1, #4
 8000b32:	6860      	ldr	r0, [r4, #4]
 8000b34:	f7ff ff82 	bl	8000a3c <std>
 8000b38:	68a0      	ldr	r0, [r4, #8]
 8000b3a:	2201      	movs	r2, #1
 8000b3c:	2109      	movs	r1, #9
 8000b3e:	f7ff ff7d 	bl	8000a3c <std>
 8000b42:	68e0      	ldr	r0, [r4, #12]
 8000b44:	2202      	movs	r2, #2
 8000b46:	2112      	movs	r1, #18
 8000b48:	f7ff ff78 	bl	8000a3c <std>
 8000b4c:	2301      	movs	r3, #1
 8000b4e:	61a3      	str	r3, [r4, #24]
 8000b50:	e7d2      	b.n	8000af8 <__sinit+0xc>
 8000b52:	bf00      	nop
 8000b54:	08001704 	.word	0x08001704
 8000b58:	08000a85 	.word	0x08000a85

08000b5c <__sfp>:
 8000b5c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b5e:	4607      	mov	r7, r0
 8000b60:	f7ff ffac 	bl	8000abc <__sfp_lock_acquire>
 8000b64:	4b1e      	ldr	r3, [pc, #120]	; (8000be0 <__sfp+0x84>)
 8000b66:	681e      	ldr	r6, [r3, #0]
 8000b68:	69b3      	ldr	r3, [r6, #24]
 8000b6a:	b913      	cbnz	r3, 8000b72 <__sfp+0x16>
 8000b6c:	4630      	mov	r0, r6
 8000b6e:	f7ff ffbd 	bl	8000aec <__sinit>
 8000b72:	3648      	adds	r6, #72	; 0x48
 8000b74:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000b78:	3b01      	subs	r3, #1
 8000b7a:	d503      	bpl.n	8000b84 <__sfp+0x28>
 8000b7c:	6833      	ldr	r3, [r6, #0]
 8000b7e:	b30b      	cbz	r3, 8000bc4 <__sfp+0x68>
 8000b80:	6836      	ldr	r6, [r6, #0]
 8000b82:	e7f7      	b.n	8000b74 <__sfp+0x18>
 8000b84:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000b88:	b9d5      	cbnz	r5, 8000bc0 <__sfp+0x64>
 8000b8a:	4b16      	ldr	r3, [pc, #88]	; (8000be4 <__sfp+0x88>)
 8000b8c:	60e3      	str	r3, [r4, #12]
 8000b8e:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000b92:	6665      	str	r5, [r4, #100]	; 0x64
 8000b94:	f000 f847 	bl	8000c26 <__retarget_lock_init_recursive>
 8000b98:	f7ff ff96 	bl	8000ac8 <__sfp_lock_release>
 8000b9c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000ba0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000ba4:	6025      	str	r5, [r4, #0]
 8000ba6:	61a5      	str	r5, [r4, #24]
 8000ba8:	2208      	movs	r2, #8
 8000baa:	4629      	mov	r1, r5
 8000bac:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000bb0:	f7ff fd2c 	bl	800060c <memset>
 8000bb4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000bb8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000bbc:	4620      	mov	r0, r4
 8000bbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000bc0:	3468      	adds	r4, #104	; 0x68
 8000bc2:	e7d9      	b.n	8000b78 <__sfp+0x1c>
 8000bc4:	2104      	movs	r1, #4
 8000bc6:	4638      	mov	r0, r7
 8000bc8:	f7ff ff62 	bl	8000a90 <__sfmoreglue>
 8000bcc:	4604      	mov	r4, r0
 8000bce:	6030      	str	r0, [r6, #0]
 8000bd0:	2800      	cmp	r0, #0
 8000bd2:	d1d5      	bne.n	8000b80 <__sfp+0x24>
 8000bd4:	f7ff ff78 	bl	8000ac8 <__sfp_lock_release>
 8000bd8:	230c      	movs	r3, #12
 8000bda:	603b      	str	r3, [r7, #0]
 8000bdc:	e7ee      	b.n	8000bbc <__sfp+0x60>
 8000bde:	bf00      	nop
 8000be0:	08001704 	.word	0x08001704
 8000be4:	ffff0001 	.word	0xffff0001

08000be8 <_fwalk_reent>:
 8000be8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000bec:	4606      	mov	r6, r0
 8000bee:	4688      	mov	r8, r1
 8000bf0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000bf4:	2700      	movs	r7, #0
 8000bf6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000bfa:	f1b9 0901 	subs.w	r9, r9, #1
 8000bfe:	d505      	bpl.n	8000c0c <_fwalk_reent+0x24>
 8000c00:	6824      	ldr	r4, [r4, #0]
 8000c02:	2c00      	cmp	r4, #0
 8000c04:	d1f7      	bne.n	8000bf6 <_fwalk_reent+0xe>
 8000c06:	4638      	mov	r0, r7
 8000c08:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000c0c:	89ab      	ldrh	r3, [r5, #12]
 8000c0e:	2b01      	cmp	r3, #1
 8000c10:	d907      	bls.n	8000c22 <_fwalk_reent+0x3a>
 8000c12:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000c16:	3301      	adds	r3, #1
 8000c18:	d003      	beq.n	8000c22 <_fwalk_reent+0x3a>
 8000c1a:	4629      	mov	r1, r5
 8000c1c:	4630      	mov	r0, r6
 8000c1e:	47c0      	blx	r8
 8000c20:	4307      	orrs	r7, r0
 8000c22:	3568      	adds	r5, #104	; 0x68
 8000c24:	e7e9      	b.n	8000bfa <_fwalk_reent+0x12>

08000c26 <__retarget_lock_init_recursive>:
 8000c26:	4770      	bx	lr

08000c28 <__retarget_lock_acquire_recursive>:
 8000c28:	4770      	bx	lr

08000c2a <__retarget_lock_release_recursive>:
 8000c2a:	4770      	bx	lr

08000c2c <__swhatbuf_r>:
 8000c2c:	b570      	push	{r4, r5, r6, lr}
 8000c2e:	460e      	mov	r6, r1
 8000c30:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c34:	2900      	cmp	r1, #0
 8000c36:	b096      	sub	sp, #88	; 0x58
 8000c38:	4614      	mov	r4, r2
 8000c3a:	461d      	mov	r5, r3
 8000c3c:	da07      	bge.n	8000c4e <__swhatbuf_r+0x22>
 8000c3e:	2300      	movs	r3, #0
 8000c40:	602b      	str	r3, [r5, #0]
 8000c42:	89b3      	ldrh	r3, [r6, #12]
 8000c44:	061a      	lsls	r2, r3, #24
 8000c46:	d410      	bmi.n	8000c6a <__swhatbuf_r+0x3e>
 8000c48:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000c4c:	e00e      	b.n	8000c6c <__swhatbuf_r+0x40>
 8000c4e:	466a      	mov	r2, sp
 8000c50:	f000 fc5e 	bl	8001510 <_fstat_r>
 8000c54:	2800      	cmp	r0, #0
 8000c56:	dbf2      	blt.n	8000c3e <__swhatbuf_r+0x12>
 8000c58:	9a01      	ldr	r2, [sp, #4]
 8000c5a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000c5e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000c62:	425a      	negs	r2, r3
 8000c64:	415a      	adcs	r2, r3
 8000c66:	602a      	str	r2, [r5, #0]
 8000c68:	e7ee      	b.n	8000c48 <__swhatbuf_r+0x1c>
 8000c6a:	2340      	movs	r3, #64	; 0x40
 8000c6c:	2000      	movs	r0, #0
 8000c6e:	6023      	str	r3, [r4, #0]
 8000c70:	b016      	add	sp, #88	; 0x58
 8000c72:	bd70      	pop	{r4, r5, r6, pc}

08000c74 <__smakebuf_r>:
 8000c74:	898b      	ldrh	r3, [r1, #12]
 8000c76:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000c78:	079d      	lsls	r5, r3, #30
 8000c7a:	4606      	mov	r6, r0
 8000c7c:	460c      	mov	r4, r1
 8000c7e:	d507      	bpl.n	8000c90 <__smakebuf_r+0x1c>
 8000c80:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000c84:	6023      	str	r3, [r4, #0]
 8000c86:	6123      	str	r3, [r4, #16]
 8000c88:	2301      	movs	r3, #1
 8000c8a:	6163      	str	r3, [r4, #20]
 8000c8c:	b002      	add	sp, #8
 8000c8e:	bd70      	pop	{r4, r5, r6, pc}
 8000c90:	ab01      	add	r3, sp, #4
 8000c92:	466a      	mov	r2, sp
 8000c94:	f7ff ffca 	bl	8000c2c <__swhatbuf_r>
 8000c98:	9900      	ldr	r1, [sp, #0]
 8000c9a:	4605      	mov	r5, r0
 8000c9c:	4630      	mov	r0, r6
 8000c9e:	f000 f879 	bl	8000d94 <_malloc_r>
 8000ca2:	b948      	cbnz	r0, 8000cb8 <__smakebuf_r+0x44>
 8000ca4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000ca8:	059a      	lsls	r2, r3, #22
 8000caa:	d4ef      	bmi.n	8000c8c <__smakebuf_r+0x18>
 8000cac:	f023 0303 	bic.w	r3, r3, #3
 8000cb0:	f043 0302 	orr.w	r3, r3, #2
 8000cb4:	81a3      	strh	r3, [r4, #12]
 8000cb6:	e7e3      	b.n	8000c80 <__smakebuf_r+0xc>
 8000cb8:	4b0d      	ldr	r3, [pc, #52]	; (8000cf0 <__smakebuf_r+0x7c>)
 8000cba:	62b3      	str	r3, [r6, #40]	; 0x28
 8000cbc:	89a3      	ldrh	r3, [r4, #12]
 8000cbe:	6020      	str	r0, [r4, #0]
 8000cc0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000cc4:	81a3      	strh	r3, [r4, #12]
 8000cc6:	9b00      	ldr	r3, [sp, #0]
 8000cc8:	6163      	str	r3, [r4, #20]
 8000cca:	9b01      	ldr	r3, [sp, #4]
 8000ccc:	6120      	str	r0, [r4, #16]
 8000cce:	b15b      	cbz	r3, 8000ce8 <__smakebuf_r+0x74>
 8000cd0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000cd4:	4630      	mov	r0, r6
 8000cd6:	f000 fc2d 	bl	8001534 <_isatty_r>
 8000cda:	b128      	cbz	r0, 8000ce8 <__smakebuf_r+0x74>
 8000cdc:	89a3      	ldrh	r3, [r4, #12]
 8000cde:	f023 0303 	bic.w	r3, r3, #3
 8000ce2:	f043 0301 	orr.w	r3, r3, #1
 8000ce6:	81a3      	strh	r3, [r4, #12]
 8000ce8:	89a0      	ldrh	r0, [r4, #12]
 8000cea:	4305      	orrs	r5, r0
 8000cec:	81a5      	strh	r5, [r4, #12]
 8000cee:	e7cd      	b.n	8000c8c <__smakebuf_r+0x18>
 8000cf0:	08000a85 	.word	0x08000a85

08000cf4 <_free_r>:
 8000cf4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000cf6:	2900      	cmp	r1, #0
 8000cf8:	d048      	beq.n	8000d8c <_free_r+0x98>
 8000cfa:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000cfe:	9001      	str	r0, [sp, #4]
 8000d00:	2b00      	cmp	r3, #0
 8000d02:	f1a1 0404 	sub.w	r4, r1, #4
 8000d06:	bfb8      	it	lt
 8000d08:	18e4      	addlt	r4, r4, r3
 8000d0a:	f000 fc35 	bl	8001578 <__malloc_lock>
 8000d0e:	4a20      	ldr	r2, [pc, #128]	; (8000d90 <_free_r+0x9c>)
 8000d10:	9801      	ldr	r0, [sp, #4]
 8000d12:	6813      	ldr	r3, [r2, #0]
 8000d14:	4615      	mov	r5, r2
 8000d16:	b933      	cbnz	r3, 8000d26 <_free_r+0x32>
 8000d18:	6063      	str	r3, [r4, #4]
 8000d1a:	6014      	str	r4, [r2, #0]
 8000d1c:	b003      	add	sp, #12
 8000d1e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000d22:	f000 bc2f 	b.w	8001584 <__malloc_unlock>
 8000d26:	42a3      	cmp	r3, r4
 8000d28:	d90b      	bls.n	8000d42 <_free_r+0x4e>
 8000d2a:	6821      	ldr	r1, [r4, #0]
 8000d2c:	1862      	adds	r2, r4, r1
 8000d2e:	4293      	cmp	r3, r2
 8000d30:	bf04      	itt	eq
 8000d32:	681a      	ldreq	r2, [r3, #0]
 8000d34:	685b      	ldreq	r3, [r3, #4]
 8000d36:	6063      	str	r3, [r4, #4]
 8000d38:	bf04      	itt	eq
 8000d3a:	1852      	addeq	r2, r2, r1
 8000d3c:	6022      	streq	r2, [r4, #0]
 8000d3e:	602c      	str	r4, [r5, #0]
 8000d40:	e7ec      	b.n	8000d1c <_free_r+0x28>
 8000d42:	461a      	mov	r2, r3
 8000d44:	685b      	ldr	r3, [r3, #4]
 8000d46:	b10b      	cbz	r3, 8000d4c <_free_r+0x58>
 8000d48:	42a3      	cmp	r3, r4
 8000d4a:	d9fa      	bls.n	8000d42 <_free_r+0x4e>
 8000d4c:	6811      	ldr	r1, [r2, #0]
 8000d4e:	1855      	adds	r5, r2, r1
 8000d50:	42a5      	cmp	r5, r4
 8000d52:	d10b      	bne.n	8000d6c <_free_r+0x78>
 8000d54:	6824      	ldr	r4, [r4, #0]
 8000d56:	4421      	add	r1, r4
 8000d58:	1854      	adds	r4, r2, r1
 8000d5a:	42a3      	cmp	r3, r4
 8000d5c:	6011      	str	r1, [r2, #0]
 8000d5e:	d1dd      	bne.n	8000d1c <_free_r+0x28>
 8000d60:	681c      	ldr	r4, [r3, #0]
 8000d62:	685b      	ldr	r3, [r3, #4]
 8000d64:	6053      	str	r3, [r2, #4]
 8000d66:	4421      	add	r1, r4
 8000d68:	6011      	str	r1, [r2, #0]
 8000d6a:	e7d7      	b.n	8000d1c <_free_r+0x28>
 8000d6c:	d902      	bls.n	8000d74 <_free_r+0x80>
 8000d6e:	230c      	movs	r3, #12
 8000d70:	6003      	str	r3, [r0, #0]
 8000d72:	e7d3      	b.n	8000d1c <_free_r+0x28>
 8000d74:	6825      	ldr	r5, [r4, #0]
 8000d76:	1961      	adds	r1, r4, r5
 8000d78:	428b      	cmp	r3, r1
 8000d7a:	bf04      	itt	eq
 8000d7c:	6819      	ldreq	r1, [r3, #0]
 8000d7e:	685b      	ldreq	r3, [r3, #4]
 8000d80:	6063      	str	r3, [r4, #4]
 8000d82:	bf04      	itt	eq
 8000d84:	1949      	addeq	r1, r1, r5
 8000d86:	6021      	streq	r1, [r4, #0]
 8000d88:	6054      	str	r4, [r2, #4]
 8000d8a:	e7c7      	b.n	8000d1c <_free_r+0x28>
 8000d8c:	b003      	add	sp, #12
 8000d8e:	bd30      	pop	{r4, r5, pc}
 8000d90:	20000084 	.word	0x20000084

08000d94 <_malloc_r>:
 8000d94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d96:	1ccd      	adds	r5, r1, #3
 8000d98:	f025 0503 	bic.w	r5, r5, #3
 8000d9c:	3508      	adds	r5, #8
 8000d9e:	2d0c      	cmp	r5, #12
 8000da0:	bf38      	it	cc
 8000da2:	250c      	movcc	r5, #12
 8000da4:	2d00      	cmp	r5, #0
 8000da6:	4606      	mov	r6, r0
 8000da8:	db01      	blt.n	8000dae <_malloc_r+0x1a>
 8000daa:	42a9      	cmp	r1, r5
 8000dac:	d903      	bls.n	8000db6 <_malloc_r+0x22>
 8000dae:	230c      	movs	r3, #12
 8000db0:	6033      	str	r3, [r6, #0]
 8000db2:	2000      	movs	r0, #0
 8000db4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000db6:	f000 fbdf 	bl	8001578 <__malloc_lock>
 8000dba:	4921      	ldr	r1, [pc, #132]	; (8000e40 <_malloc_r+0xac>)
 8000dbc:	680a      	ldr	r2, [r1, #0]
 8000dbe:	4614      	mov	r4, r2
 8000dc0:	b99c      	cbnz	r4, 8000dea <_malloc_r+0x56>
 8000dc2:	4f20      	ldr	r7, [pc, #128]	; (8000e44 <_malloc_r+0xb0>)
 8000dc4:	683b      	ldr	r3, [r7, #0]
 8000dc6:	b923      	cbnz	r3, 8000dd2 <_malloc_r+0x3e>
 8000dc8:	4621      	mov	r1, r4
 8000dca:	4630      	mov	r0, r6
 8000dcc:	f000 fb2a 	bl	8001424 <_sbrk_r>
 8000dd0:	6038      	str	r0, [r7, #0]
 8000dd2:	4629      	mov	r1, r5
 8000dd4:	4630      	mov	r0, r6
 8000dd6:	f000 fb25 	bl	8001424 <_sbrk_r>
 8000dda:	1c43      	adds	r3, r0, #1
 8000ddc:	d123      	bne.n	8000e26 <_malloc_r+0x92>
 8000dde:	230c      	movs	r3, #12
 8000de0:	6033      	str	r3, [r6, #0]
 8000de2:	4630      	mov	r0, r6
 8000de4:	f000 fbce 	bl	8001584 <__malloc_unlock>
 8000de8:	e7e3      	b.n	8000db2 <_malloc_r+0x1e>
 8000dea:	6823      	ldr	r3, [r4, #0]
 8000dec:	1b5b      	subs	r3, r3, r5
 8000dee:	d417      	bmi.n	8000e20 <_malloc_r+0x8c>
 8000df0:	2b0b      	cmp	r3, #11
 8000df2:	d903      	bls.n	8000dfc <_malloc_r+0x68>
 8000df4:	6023      	str	r3, [r4, #0]
 8000df6:	441c      	add	r4, r3
 8000df8:	6025      	str	r5, [r4, #0]
 8000dfa:	e004      	b.n	8000e06 <_malloc_r+0x72>
 8000dfc:	6863      	ldr	r3, [r4, #4]
 8000dfe:	42a2      	cmp	r2, r4
 8000e00:	bf0c      	ite	eq
 8000e02:	600b      	streq	r3, [r1, #0]
 8000e04:	6053      	strne	r3, [r2, #4]
 8000e06:	4630      	mov	r0, r6
 8000e08:	f000 fbbc 	bl	8001584 <__malloc_unlock>
 8000e0c:	f104 000b 	add.w	r0, r4, #11
 8000e10:	1d23      	adds	r3, r4, #4
 8000e12:	f020 0007 	bic.w	r0, r0, #7
 8000e16:	1ac2      	subs	r2, r0, r3
 8000e18:	d0cc      	beq.n	8000db4 <_malloc_r+0x20>
 8000e1a:	1a1b      	subs	r3, r3, r0
 8000e1c:	50a3      	str	r3, [r4, r2]
 8000e1e:	e7c9      	b.n	8000db4 <_malloc_r+0x20>
 8000e20:	4622      	mov	r2, r4
 8000e22:	6864      	ldr	r4, [r4, #4]
 8000e24:	e7cc      	b.n	8000dc0 <_malloc_r+0x2c>
 8000e26:	1cc4      	adds	r4, r0, #3
 8000e28:	f024 0403 	bic.w	r4, r4, #3
 8000e2c:	42a0      	cmp	r0, r4
 8000e2e:	d0e3      	beq.n	8000df8 <_malloc_r+0x64>
 8000e30:	1a21      	subs	r1, r4, r0
 8000e32:	4630      	mov	r0, r6
 8000e34:	f000 faf6 	bl	8001424 <_sbrk_r>
 8000e38:	3001      	adds	r0, #1
 8000e3a:	d1dd      	bne.n	8000df8 <_malloc_r+0x64>
 8000e3c:	e7cf      	b.n	8000dde <_malloc_r+0x4a>
 8000e3e:	bf00      	nop
 8000e40:	20000084 	.word	0x20000084
 8000e44:	20000088 	.word	0x20000088

08000e48 <__sfputc_r>:
 8000e48:	6893      	ldr	r3, [r2, #8]
 8000e4a:	3b01      	subs	r3, #1
 8000e4c:	2b00      	cmp	r3, #0
 8000e4e:	b410      	push	{r4}
 8000e50:	6093      	str	r3, [r2, #8]
 8000e52:	da08      	bge.n	8000e66 <__sfputc_r+0x1e>
 8000e54:	6994      	ldr	r4, [r2, #24]
 8000e56:	42a3      	cmp	r3, r4
 8000e58:	db01      	blt.n	8000e5e <__sfputc_r+0x16>
 8000e5a:	290a      	cmp	r1, #10
 8000e5c:	d103      	bne.n	8000e66 <__sfputc_r+0x1e>
 8000e5e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000e62:	f7ff bc69 	b.w	8000738 <__swbuf_r>
 8000e66:	6813      	ldr	r3, [r2, #0]
 8000e68:	1c58      	adds	r0, r3, #1
 8000e6a:	6010      	str	r0, [r2, #0]
 8000e6c:	7019      	strb	r1, [r3, #0]
 8000e6e:	4608      	mov	r0, r1
 8000e70:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000e74:	4770      	bx	lr

08000e76 <__sfputs_r>:
 8000e76:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e78:	4606      	mov	r6, r0
 8000e7a:	460f      	mov	r7, r1
 8000e7c:	4614      	mov	r4, r2
 8000e7e:	18d5      	adds	r5, r2, r3
 8000e80:	42ac      	cmp	r4, r5
 8000e82:	d101      	bne.n	8000e88 <__sfputs_r+0x12>
 8000e84:	2000      	movs	r0, #0
 8000e86:	e007      	b.n	8000e98 <__sfputs_r+0x22>
 8000e88:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e8c:	463a      	mov	r2, r7
 8000e8e:	4630      	mov	r0, r6
 8000e90:	f7ff ffda 	bl	8000e48 <__sfputc_r>
 8000e94:	1c43      	adds	r3, r0, #1
 8000e96:	d1f3      	bne.n	8000e80 <__sfputs_r+0xa>
 8000e98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000e9c <_vfiprintf_r>:
 8000e9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000ea0:	460d      	mov	r5, r1
 8000ea2:	b09d      	sub	sp, #116	; 0x74
 8000ea4:	4614      	mov	r4, r2
 8000ea6:	4698      	mov	r8, r3
 8000ea8:	4606      	mov	r6, r0
 8000eaa:	b118      	cbz	r0, 8000eb4 <_vfiprintf_r+0x18>
 8000eac:	6983      	ldr	r3, [r0, #24]
 8000eae:	b90b      	cbnz	r3, 8000eb4 <_vfiprintf_r+0x18>
 8000eb0:	f7ff fe1c 	bl	8000aec <__sinit>
 8000eb4:	4b89      	ldr	r3, [pc, #548]	; (80010dc <_vfiprintf_r+0x240>)
 8000eb6:	429d      	cmp	r5, r3
 8000eb8:	d11b      	bne.n	8000ef2 <_vfiprintf_r+0x56>
 8000eba:	6875      	ldr	r5, [r6, #4]
 8000ebc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ebe:	07d9      	lsls	r1, r3, #31
 8000ec0:	d405      	bmi.n	8000ece <_vfiprintf_r+0x32>
 8000ec2:	89ab      	ldrh	r3, [r5, #12]
 8000ec4:	059a      	lsls	r2, r3, #22
 8000ec6:	d402      	bmi.n	8000ece <_vfiprintf_r+0x32>
 8000ec8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000eca:	f7ff fead 	bl	8000c28 <__retarget_lock_acquire_recursive>
 8000ece:	89ab      	ldrh	r3, [r5, #12]
 8000ed0:	071b      	lsls	r3, r3, #28
 8000ed2:	d501      	bpl.n	8000ed8 <_vfiprintf_r+0x3c>
 8000ed4:	692b      	ldr	r3, [r5, #16]
 8000ed6:	b9eb      	cbnz	r3, 8000f14 <_vfiprintf_r+0x78>
 8000ed8:	4629      	mov	r1, r5
 8000eda:	4630      	mov	r0, r6
 8000edc:	f7ff fc7e 	bl	80007dc <__swsetup_r>
 8000ee0:	b1c0      	cbz	r0, 8000f14 <_vfiprintf_r+0x78>
 8000ee2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ee4:	07dc      	lsls	r4, r3, #31
 8000ee6:	d50e      	bpl.n	8000f06 <_vfiprintf_r+0x6a>
 8000ee8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000eec:	b01d      	add	sp, #116	; 0x74
 8000eee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000ef2:	4b7b      	ldr	r3, [pc, #492]	; (80010e0 <_vfiprintf_r+0x244>)
 8000ef4:	429d      	cmp	r5, r3
 8000ef6:	d101      	bne.n	8000efc <_vfiprintf_r+0x60>
 8000ef8:	68b5      	ldr	r5, [r6, #8]
 8000efa:	e7df      	b.n	8000ebc <_vfiprintf_r+0x20>
 8000efc:	4b79      	ldr	r3, [pc, #484]	; (80010e4 <_vfiprintf_r+0x248>)
 8000efe:	429d      	cmp	r5, r3
 8000f00:	bf08      	it	eq
 8000f02:	68f5      	ldreq	r5, [r6, #12]
 8000f04:	e7da      	b.n	8000ebc <_vfiprintf_r+0x20>
 8000f06:	89ab      	ldrh	r3, [r5, #12]
 8000f08:	0598      	lsls	r0, r3, #22
 8000f0a:	d4ed      	bmi.n	8000ee8 <_vfiprintf_r+0x4c>
 8000f0c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000f0e:	f7ff fe8c 	bl	8000c2a <__retarget_lock_release_recursive>
 8000f12:	e7e9      	b.n	8000ee8 <_vfiprintf_r+0x4c>
 8000f14:	2300      	movs	r3, #0
 8000f16:	9309      	str	r3, [sp, #36]	; 0x24
 8000f18:	2320      	movs	r3, #32
 8000f1a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000f1e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000f22:	2330      	movs	r3, #48	; 0x30
 8000f24:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80010e8 <_vfiprintf_r+0x24c>
 8000f28:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000f2c:	f04f 0901 	mov.w	r9, #1
 8000f30:	4623      	mov	r3, r4
 8000f32:	469a      	mov	sl, r3
 8000f34:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000f38:	b10a      	cbz	r2, 8000f3e <_vfiprintf_r+0xa2>
 8000f3a:	2a25      	cmp	r2, #37	; 0x25
 8000f3c:	d1f9      	bne.n	8000f32 <_vfiprintf_r+0x96>
 8000f3e:	ebba 0b04 	subs.w	fp, sl, r4
 8000f42:	d00b      	beq.n	8000f5c <_vfiprintf_r+0xc0>
 8000f44:	465b      	mov	r3, fp
 8000f46:	4622      	mov	r2, r4
 8000f48:	4629      	mov	r1, r5
 8000f4a:	4630      	mov	r0, r6
 8000f4c:	f7ff ff93 	bl	8000e76 <__sfputs_r>
 8000f50:	3001      	adds	r0, #1
 8000f52:	f000 80aa 	beq.w	80010aa <_vfiprintf_r+0x20e>
 8000f56:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000f58:	445a      	add	r2, fp
 8000f5a:	9209      	str	r2, [sp, #36]	; 0x24
 8000f5c:	f89a 3000 	ldrb.w	r3, [sl]
 8000f60:	2b00      	cmp	r3, #0
 8000f62:	f000 80a2 	beq.w	80010aa <_vfiprintf_r+0x20e>
 8000f66:	2300      	movs	r3, #0
 8000f68:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000f6c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000f70:	f10a 0a01 	add.w	sl, sl, #1
 8000f74:	9304      	str	r3, [sp, #16]
 8000f76:	9307      	str	r3, [sp, #28]
 8000f78:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000f7c:	931a      	str	r3, [sp, #104]	; 0x68
 8000f7e:	4654      	mov	r4, sl
 8000f80:	2205      	movs	r2, #5
 8000f82:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000f86:	4858      	ldr	r0, [pc, #352]	; (80010e8 <_vfiprintf_r+0x24c>)
 8000f88:	f7ff f942 	bl	8000210 <memchr>
 8000f8c:	9a04      	ldr	r2, [sp, #16]
 8000f8e:	b9d8      	cbnz	r0, 8000fc8 <_vfiprintf_r+0x12c>
 8000f90:	06d1      	lsls	r1, r2, #27
 8000f92:	bf44      	itt	mi
 8000f94:	2320      	movmi	r3, #32
 8000f96:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000f9a:	0713      	lsls	r3, r2, #28
 8000f9c:	bf44      	itt	mi
 8000f9e:	232b      	movmi	r3, #43	; 0x2b
 8000fa0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000fa4:	f89a 3000 	ldrb.w	r3, [sl]
 8000fa8:	2b2a      	cmp	r3, #42	; 0x2a
 8000faa:	d015      	beq.n	8000fd8 <_vfiprintf_r+0x13c>
 8000fac:	9a07      	ldr	r2, [sp, #28]
 8000fae:	4654      	mov	r4, sl
 8000fb0:	2000      	movs	r0, #0
 8000fb2:	f04f 0c0a 	mov.w	ip, #10
 8000fb6:	4621      	mov	r1, r4
 8000fb8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000fbc:	3b30      	subs	r3, #48	; 0x30
 8000fbe:	2b09      	cmp	r3, #9
 8000fc0:	d94e      	bls.n	8001060 <_vfiprintf_r+0x1c4>
 8000fc2:	b1b0      	cbz	r0, 8000ff2 <_vfiprintf_r+0x156>
 8000fc4:	9207      	str	r2, [sp, #28]
 8000fc6:	e014      	b.n	8000ff2 <_vfiprintf_r+0x156>
 8000fc8:	eba0 0308 	sub.w	r3, r0, r8
 8000fcc:	fa09 f303 	lsl.w	r3, r9, r3
 8000fd0:	4313      	orrs	r3, r2
 8000fd2:	9304      	str	r3, [sp, #16]
 8000fd4:	46a2      	mov	sl, r4
 8000fd6:	e7d2      	b.n	8000f7e <_vfiprintf_r+0xe2>
 8000fd8:	9b03      	ldr	r3, [sp, #12]
 8000fda:	1d19      	adds	r1, r3, #4
 8000fdc:	681b      	ldr	r3, [r3, #0]
 8000fde:	9103      	str	r1, [sp, #12]
 8000fe0:	2b00      	cmp	r3, #0
 8000fe2:	bfbb      	ittet	lt
 8000fe4:	425b      	neglt	r3, r3
 8000fe6:	f042 0202 	orrlt.w	r2, r2, #2
 8000fea:	9307      	strge	r3, [sp, #28]
 8000fec:	9307      	strlt	r3, [sp, #28]
 8000fee:	bfb8      	it	lt
 8000ff0:	9204      	strlt	r2, [sp, #16]
 8000ff2:	7823      	ldrb	r3, [r4, #0]
 8000ff4:	2b2e      	cmp	r3, #46	; 0x2e
 8000ff6:	d10c      	bne.n	8001012 <_vfiprintf_r+0x176>
 8000ff8:	7863      	ldrb	r3, [r4, #1]
 8000ffa:	2b2a      	cmp	r3, #42	; 0x2a
 8000ffc:	d135      	bne.n	800106a <_vfiprintf_r+0x1ce>
 8000ffe:	9b03      	ldr	r3, [sp, #12]
 8001000:	1d1a      	adds	r2, r3, #4
 8001002:	681b      	ldr	r3, [r3, #0]
 8001004:	9203      	str	r2, [sp, #12]
 8001006:	2b00      	cmp	r3, #0
 8001008:	bfb8      	it	lt
 800100a:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 800100e:	3402      	adds	r4, #2
 8001010:	9305      	str	r3, [sp, #20]
 8001012:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 80010f8 <_vfiprintf_r+0x25c>
 8001016:	7821      	ldrb	r1, [r4, #0]
 8001018:	2203      	movs	r2, #3
 800101a:	4650      	mov	r0, sl
 800101c:	f7ff f8f8 	bl	8000210 <memchr>
 8001020:	b140      	cbz	r0, 8001034 <_vfiprintf_r+0x198>
 8001022:	2340      	movs	r3, #64	; 0x40
 8001024:	eba0 000a 	sub.w	r0, r0, sl
 8001028:	fa03 f000 	lsl.w	r0, r3, r0
 800102c:	9b04      	ldr	r3, [sp, #16]
 800102e:	4303      	orrs	r3, r0
 8001030:	3401      	adds	r4, #1
 8001032:	9304      	str	r3, [sp, #16]
 8001034:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001038:	482c      	ldr	r0, [pc, #176]	; (80010ec <_vfiprintf_r+0x250>)
 800103a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800103e:	2206      	movs	r2, #6
 8001040:	f7ff f8e6 	bl	8000210 <memchr>
 8001044:	2800      	cmp	r0, #0
 8001046:	d03f      	beq.n	80010c8 <_vfiprintf_r+0x22c>
 8001048:	4b29      	ldr	r3, [pc, #164]	; (80010f0 <_vfiprintf_r+0x254>)
 800104a:	bb1b      	cbnz	r3, 8001094 <_vfiprintf_r+0x1f8>
 800104c:	9b03      	ldr	r3, [sp, #12]
 800104e:	3307      	adds	r3, #7
 8001050:	f023 0307 	bic.w	r3, r3, #7
 8001054:	3308      	adds	r3, #8
 8001056:	9303      	str	r3, [sp, #12]
 8001058:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800105a:	443b      	add	r3, r7
 800105c:	9309      	str	r3, [sp, #36]	; 0x24
 800105e:	e767      	b.n	8000f30 <_vfiprintf_r+0x94>
 8001060:	fb0c 3202 	mla	r2, ip, r2, r3
 8001064:	460c      	mov	r4, r1
 8001066:	2001      	movs	r0, #1
 8001068:	e7a5      	b.n	8000fb6 <_vfiprintf_r+0x11a>
 800106a:	2300      	movs	r3, #0
 800106c:	3401      	adds	r4, #1
 800106e:	9305      	str	r3, [sp, #20]
 8001070:	4619      	mov	r1, r3
 8001072:	f04f 0c0a 	mov.w	ip, #10
 8001076:	4620      	mov	r0, r4
 8001078:	f810 2b01 	ldrb.w	r2, [r0], #1
 800107c:	3a30      	subs	r2, #48	; 0x30
 800107e:	2a09      	cmp	r2, #9
 8001080:	d903      	bls.n	800108a <_vfiprintf_r+0x1ee>
 8001082:	2b00      	cmp	r3, #0
 8001084:	d0c5      	beq.n	8001012 <_vfiprintf_r+0x176>
 8001086:	9105      	str	r1, [sp, #20]
 8001088:	e7c3      	b.n	8001012 <_vfiprintf_r+0x176>
 800108a:	fb0c 2101 	mla	r1, ip, r1, r2
 800108e:	4604      	mov	r4, r0
 8001090:	2301      	movs	r3, #1
 8001092:	e7f0      	b.n	8001076 <_vfiprintf_r+0x1da>
 8001094:	ab03      	add	r3, sp, #12
 8001096:	9300      	str	r3, [sp, #0]
 8001098:	462a      	mov	r2, r5
 800109a:	4b16      	ldr	r3, [pc, #88]	; (80010f4 <_vfiprintf_r+0x258>)
 800109c:	a904      	add	r1, sp, #16
 800109e:	4630      	mov	r0, r6
 80010a0:	f3af 8000 	nop.w
 80010a4:	4607      	mov	r7, r0
 80010a6:	1c78      	adds	r0, r7, #1
 80010a8:	d1d6      	bne.n	8001058 <_vfiprintf_r+0x1bc>
 80010aa:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80010ac:	07d9      	lsls	r1, r3, #31
 80010ae:	d405      	bmi.n	80010bc <_vfiprintf_r+0x220>
 80010b0:	89ab      	ldrh	r3, [r5, #12]
 80010b2:	059a      	lsls	r2, r3, #22
 80010b4:	d402      	bmi.n	80010bc <_vfiprintf_r+0x220>
 80010b6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80010b8:	f7ff fdb7 	bl	8000c2a <__retarget_lock_release_recursive>
 80010bc:	89ab      	ldrh	r3, [r5, #12]
 80010be:	065b      	lsls	r3, r3, #25
 80010c0:	f53f af12 	bmi.w	8000ee8 <_vfiprintf_r+0x4c>
 80010c4:	9809      	ldr	r0, [sp, #36]	; 0x24
 80010c6:	e711      	b.n	8000eec <_vfiprintf_r+0x50>
 80010c8:	ab03      	add	r3, sp, #12
 80010ca:	9300      	str	r3, [sp, #0]
 80010cc:	462a      	mov	r2, r5
 80010ce:	4b09      	ldr	r3, [pc, #36]	; (80010f4 <_vfiprintf_r+0x258>)
 80010d0:	a904      	add	r1, sp, #16
 80010d2:	4630      	mov	r0, r6
 80010d4:	f000 f880 	bl	80011d8 <_printf_i>
 80010d8:	e7e4      	b.n	80010a4 <_vfiprintf_r+0x208>
 80010da:	bf00      	nop
 80010dc:	08001728 	.word	0x08001728
 80010e0:	08001748 	.word	0x08001748
 80010e4:	08001708 	.word	0x08001708
 80010e8:	08001768 	.word	0x08001768
 80010ec:	08001772 	.word	0x08001772
 80010f0:	00000000 	.word	0x00000000
 80010f4:	08000e77 	.word	0x08000e77
 80010f8:	0800176e 	.word	0x0800176e

080010fc <_printf_common>:
 80010fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001100:	4616      	mov	r6, r2
 8001102:	4699      	mov	r9, r3
 8001104:	688a      	ldr	r2, [r1, #8]
 8001106:	690b      	ldr	r3, [r1, #16]
 8001108:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800110c:	4293      	cmp	r3, r2
 800110e:	bfb8      	it	lt
 8001110:	4613      	movlt	r3, r2
 8001112:	6033      	str	r3, [r6, #0]
 8001114:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001118:	4607      	mov	r7, r0
 800111a:	460c      	mov	r4, r1
 800111c:	b10a      	cbz	r2, 8001122 <_printf_common+0x26>
 800111e:	3301      	adds	r3, #1
 8001120:	6033      	str	r3, [r6, #0]
 8001122:	6823      	ldr	r3, [r4, #0]
 8001124:	0699      	lsls	r1, r3, #26
 8001126:	bf42      	ittt	mi
 8001128:	6833      	ldrmi	r3, [r6, #0]
 800112a:	3302      	addmi	r3, #2
 800112c:	6033      	strmi	r3, [r6, #0]
 800112e:	6825      	ldr	r5, [r4, #0]
 8001130:	f015 0506 	ands.w	r5, r5, #6
 8001134:	d106      	bne.n	8001144 <_printf_common+0x48>
 8001136:	f104 0a19 	add.w	sl, r4, #25
 800113a:	68e3      	ldr	r3, [r4, #12]
 800113c:	6832      	ldr	r2, [r6, #0]
 800113e:	1a9b      	subs	r3, r3, r2
 8001140:	42ab      	cmp	r3, r5
 8001142:	dc26      	bgt.n	8001192 <_printf_common+0x96>
 8001144:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001148:	1e13      	subs	r3, r2, #0
 800114a:	6822      	ldr	r2, [r4, #0]
 800114c:	bf18      	it	ne
 800114e:	2301      	movne	r3, #1
 8001150:	0692      	lsls	r2, r2, #26
 8001152:	d42b      	bmi.n	80011ac <_printf_common+0xb0>
 8001154:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001158:	4649      	mov	r1, r9
 800115a:	4638      	mov	r0, r7
 800115c:	47c0      	blx	r8
 800115e:	3001      	adds	r0, #1
 8001160:	d01e      	beq.n	80011a0 <_printf_common+0xa4>
 8001162:	6823      	ldr	r3, [r4, #0]
 8001164:	68e5      	ldr	r5, [r4, #12]
 8001166:	6832      	ldr	r2, [r6, #0]
 8001168:	f003 0306 	and.w	r3, r3, #6
 800116c:	2b04      	cmp	r3, #4
 800116e:	bf08      	it	eq
 8001170:	1aad      	subeq	r5, r5, r2
 8001172:	68a3      	ldr	r3, [r4, #8]
 8001174:	6922      	ldr	r2, [r4, #16]
 8001176:	bf0c      	ite	eq
 8001178:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800117c:	2500      	movne	r5, #0
 800117e:	4293      	cmp	r3, r2
 8001180:	bfc4      	itt	gt
 8001182:	1a9b      	subgt	r3, r3, r2
 8001184:	18ed      	addgt	r5, r5, r3
 8001186:	2600      	movs	r6, #0
 8001188:	341a      	adds	r4, #26
 800118a:	42b5      	cmp	r5, r6
 800118c:	d11a      	bne.n	80011c4 <_printf_common+0xc8>
 800118e:	2000      	movs	r0, #0
 8001190:	e008      	b.n	80011a4 <_printf_common+0xa8>
 8001192:	2301      	movs	r3, #1
 8001194:	4652      	mov	r2, sl
 8001196:	4649      	mov	r1, r9
 8001198:	4638      	mov	r0, r7
 800119a:	47c0      	blx	r8
 800119c:	3001      	adds	r0, #1
 800119e:	d103      	bne.n	80011a8 <_printf_common+0xac>
 80011a0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80011a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80011a8:	3501      	adds	r5, #1
 80011aa:	e7c6      	b.n	800113a <_printf_common+0x3e>
 80011ac:	18e1      	adds	r1, r4, r3
 80011ae:	1c5a      	adds	r2, r3, #1
 80011b0:	2030      	movs	r0, #48	; 0x30
 80011b2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80011b6:	4422      	add	r2, r4
 80011b8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80011bc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80011c0:	3302      	adds	r3, #2
 80011c2:	e7c7      	b.n	8001154 <_printf_common+0x58>
 80011c4:	2301      	movs	r3, #1
 80011c6:	4622      	mov	r2, r4
 80011c8:	4649      	mov	r1, r9
 80011ca:	4638      	mov	r0, r7
 80011cc:	47c0      	blx	r8
 80011ce:	3001      	adds	r0, #1
 80011d0:	d0e6      	beq.n	80011a0 <_printf_common+0xa4>
 80011d2:	3601      	adds	r6, #1
 80011d4:	e7d9      	b.n	800118a <_printf_common+0x8e>
	...

080011d8 <_printf_i>:
 80011d8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80011dc:	460c      	mov	r4, r1
 80011de:	4691      	mov	r9, r2
 80011e0:	7e27      	ldrb	r7, [r4, #24]
 80011e2:	990c      	ldr	r1, [sp, #48]	; 0x30
 80011e4:	2f78      	cmp	r7, #120	; 0x78
 80011e6:	4680      	mov	r8, r0
 80011e8:	469a      	mov	sl, r3
 80011ea:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80011ee:	d807      	bhi.n	8001200 <_printf_i+0x28>
 80011f0:	2f62      	cmp	r7, #98	; 0x62
 80011f2:	d80a      	bhi.n	800120a <_printf_i+0x32>
 80011f4:	2f00      	cmp	r7, #0
 80011f6:	f000 80d8 	beq.w	80013aa <_printf_i+0x1d2>
 80011fa:	2f58      	cmp	r7, #88	; 0x58
 80011fc:	f000 80a3 	beq.w	8001346 <_printf_i+0x16e>
 8001200:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8001204:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001208:	e03a      	b.n	8001280 <_printf_i+0xa8>
 800120a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800120e:	2b15      	cmp	r3, #21
 8001210:	d8f6      	bhi.n	8001200 <_printf_i+0x28>
 8001212:	a001      	add	r0, pc, #4	; (adr r0, 8001218 <_printf_i+0x40>)
 8001214:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8001218:	08001271 	.word	0x08001271
 800121c:	08001285 	.word	0x08001285
 8001220:	08001201 	.word	0x08001201
 8001224:	08001201 	.word	0x08001201
 8001228:	08001201 	.word	0x08001201
 800122c:	08001201 	.word	0x08001201
 8001230:	08001285 	.word	0x08001285
 8001234:	08001201 	.word	0x08001201
 8001238:	08001201 	.word	0x08001201
 800123c:	08001201 	.word	0x08001201
 8001240:	08001201 	.word	0x08001201
 8001244:	08001391 	.word	0x08001391
 8001248:	080012b5 	.word	0x080012b5
 800124c:	08001373 	.word	0x08001373
 8001250:	08001201 	.word	0x08001201
 8001254:	08001201 	.word	0x08001201
 8001258:	080013b3 	.word	0x080013b3
 800125c:	08001201 	.word	0x08001201
 8001260:	080012b5 	.word	0x080012b5
 8001264:	08001201 	.word	0x08001201
 8001268:	08001201 	.word	0x08001201
 800126c:	0800137b 	.word	0x0800137b
 8001270:	680b      	ldr	r3, [r1, #0]
 8001272:	1d1a      	adds	r2, r3, #4
 8001274:	681b      	ldr	r3, [r3, #0]
 8001276:	600a      	str	r2, [r1, #0]
 8001278:	f104 0642 	add.w	r6, r4, #66	; 0x42
 800127c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001280:	2301      	movs	r3, #1
 8001282:	e0a3      	b.n	80013cc <_printf_i+0x1f4>
 8001284:	6825      	ldr	r5, [r4, #0]
 8001286:	6808      	ldr	r0, [r1, #0]
 8001288:	062e      	lsls	r6, r5, #24
 800128a:	f100 0304 	add.w	r3, r0, #4
 800128e:	d50a      	bpl.n	80012a6 <_printf_i+0xce>
 8001290:	6805      	ldr	r5, [r0, #0]
 8001292:	600b      	str	r3, [r1, #0]
 8001294:	2d00      	cmp	r5, #0
 8001296:	da03      	bge.n	80012a0 <_printf_i+0xc8>
 8001298:	232d      	movs	r3, #45	; 0x2d
 800129a:	426d      	negs	r5, r5
 800129c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80012a0:	485e      	ldr	r0, [pc, #376]	; (800141c <_printf_i+0x244>)
 80012a2:	230a      	movs	r3, #10
 80012a4:	e019      	b.n	80012da <_printf_i+0x102>
 80012a6:	f015 0f40 	tst.w	r5, #64	; 0x40
 80012aa:	6805      	ldr	r5, [r0, #0]
 80012ac:	600b      	str	r3, [r1, #0]
 80012ae:	bf18      	it	ne
 80012b0:	b22d      	sxthne	r5, r5
 80012b2:	e7ef      	b.n	8001294 <_printf_i+0xbc>
 80012b4:	680b      	ldr	r3, [r1, #0]
 80012b6:	6825      	ldr	r5, [r4, #0]
 80012b8:	1d18      	adds	r0, r3, #4
 80012ba:	6008      	str	r0, [r1, #0]
 80012bc:	0628      	lsls	r0, r5, #24
 80012be:	d501      	bpl.n	80012c4 <_printf_i+0xec>
 80012c0:	681d      	ldr	r5, [r3, #0]
 80012c2:	e002      	b.n	80012ca <_printf_i+0xf2>
 80012c4:	0669      	lsls	r1, r5, #25
 80012c6:	d5fb      	bpl.n	80012c0 <_printf_i+0xe8>
 80012c8:	881d      	ldrh	r5, [r3, #0]
 80012ca:	4854      	ldr	r0, [pc, #336]	; (800141c <_printf_i+0x244>)
 80012cc:	2f6f      	cmp	r7, #111	; 0x6f
 80012ce:	bf0c      	ite	eq
 80012d0:	2308      	moveq	r3, #8
 80012d2:	230a      	movne	r3, #10
 80012d4:	2100      	movs	r1, #0
 80012d6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80012da:	6866      	ldr	r6, [r4, #4]
 80012dc:	60a6      	str	r6, [r4, #8]
 80012de:	2e00      	cmp	r6, #0
 80012e0:	bfa2      	ittt	ge
 80012e2:	6821      	ldrge	r1, [r4, #0]
 80012e4:	f021 0104 	bicge.w	r1, r1, #4
 80012e8:	6021      	strge	r1, [r4, #0]
 80012ea:	b90d      	cbnz	r5, 80012f0 <_printf_i+0x118>
 80012ec:	2e00      	cmp	r6, #0
 80012ee:	d04d      	beq.n	800138c <_printf_i+0x1b4>
 80012f0:	4616      	mov	r6, r2
 80012f2:	fbb5 f1f3 	udiv	r1, r5, r3
 80012f6:	fb03 5711 	mls	r7, r3, r1, r5
 80012fa:	5dc7      	ldrb	r7, [r0, r7]
 80012fc:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001300:	462f      	mov	r7, r5
 8001302:	42bb      	cmp	r3, r7
 8001304:	460d      	mov	r5, r1
 8001306:	d9f4      	bls.n	80012f2 <_printf_i+0x11a>
 8001308:	2b08      	cmp	r3, #8
 800130a:	d10b      	bne.n	8001324 <_printf_i+0x14c>
 800130c:	6823      	ldr	r3, [r4, #0]
 800130e:	07df      	lsls	r7, r3, #31
 8001310:	d508      	bpl.n	8001324 <_printf_i+0x14c>
 8001312:	6923      	ldr	r3, [r4, #16]
 8001314:	6861      	ldr	r1, [r4, #4]
 8001316:	4299      	cmp	r1, r3
 8001318:	bfde      	ittt	le
 800131a:	2330      	movle	r3, #48	; 0x30
 800131c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001320:	f106 36ff 	addle.w	r6, r6, #4294967295	; 0xffffffff
 8001324:	1b92      	subs	r2, r2, r6
 8001326:	6122      	str	r2, [r4, #16]
 8001328:	f8cd a000 	str.w	sl, [sp]
 800132c:	464b      	mov	r3, r9
 800132e:	aa03      	add	r2, sp, #12
 8001330:	4621      	mov	r1, r4
 8001332:	4640      	mov	r0, r8
 8001334:	f7ff fee2 	bl	80010fc <_printf_common>
 8001338:	3001      	adds	r0, #1
 800133a:	d14c      	bne.n	80013d6 <_printf_i+0x1fe>
 800133c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001340:	b004      	add	sp, #16
 8001342:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001346:	4835      	ldr	r0, [pc, #212]	; (800141c <_printf_i+0x244>)
 8001348:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800134c:	6823      	ldr	r3, [r4, #0]
 800134e:	680e      	ldr	r6, [r1, #0]
 8001350:	061f      	lsls	r7, r3, #24
 8001352:	f856 5b04 	ldr.w	r5, [r6], #4
 8001356:	600e      	str	r6, [r1, #0]
 8001358:	d514      	bpl.n	8001384 <_printf_i+0x1ac>
 800135a:	07d9      	lsls	r1, r3, #31
 800135c:	bf44      	itt	mi
 800135e:	f043 0320 	orrmi.w	r3, r3, #32
 8001362:	6023      	strmi	r3, [r4, #0]
 8001364:	b91d      	cbnz	r5, 800136e <_printf_i+0x196>
 8001366:	6823      	ldr	r3, [r4, #0]
 8001368:	f023 0320 	bic.w	r3, r3, #32
 800136c:	6023      	str	r3, [r4, #0]
 800136e:	2310      	movs	r3, #16
 8001370:	e7b0      	b.n	80012d4 <_printf_i+0xfc>
 8001372:	6823      	ldr	r3, [r4, #0]
 8001374:	f043 0320 	orr.w	r3, r3, #32
 8001378:	6023      	str	r3, [r4, #0]
 800137a:	2378      	movs	r3, #120	; 0x78
 800137c:	4828      	ldr	r0, [pc, #160]	; (8001420 <_printf_i+0x248>)
 800137e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001382:	e7e3      	b.n	800134c <_printf_i+0x174>
 8001384:	065e      	lsls	r6, r3, #25
 8001386:	bf48      	it	mi
 8001388:	b2ad      	uxthmi	r5, r5
 800138a:	e7e6      	b.n	800135a <_printf_i+0x182>
 800138c:	4616      	mov	r6, r2
 800138e:	e7bb      	b.n	8001308 <_printf_i+0x130>
 8001390:	680b      	ldr	r3, [r1, #0]
 8001392:	6826      	ldr	r6, [r4, #0]
 8001394:	6960      	ldr	r0, [r4, #20]
 8001396:	1d1d      	adds	r5, r3, #4
 8001398:	600d      	str	r5, [r1, #0]
 800139a:	0635      	lsls	r5, r6, #24
 800139c:	681b      	ldr	r3, [r3, #0]
 800139e:	d501      	bpl.n	80013a4 <_printf_i+0x1cc>
 80013a0:	6018      	str	r0, [r3, #0]
 80013a2:	e002      	b.n	80013aa <_printf_i+0x1d2>
 80013a4:	0671      	lsls	r1, r6, #25
 80013a6:	d5fb      	bpl.n	80013a0 <_printf_i+0x1c8>
 80013a8:	8018      	strh	r0, [r3, #0]
 80013aa:	2300      	movs	r3, #0
 80013ac:	6123      	str	r3, [r4, #16]
 80013ae:	4616      	mov	r6, r2
 80013b0:	e7ba      	b.n	8001328 <_printf_i+0x150>
 80013b2:	680b      	ldr	r3, [r1, #0]
 80013b4:	1d1a      	adds	r2, r3, #4
 80013b6:	600a      	str	r2, [r1, #0]
 80013b8:	681e      	ldr	r6, [r3, #0]
 80013ba:	6862      	ldr	r2, [r4, #4]
 80013bc:	2100      	movs	r1, #0
 80013be:	4630      	mov	r0, r6
 80013c0:	f7fe ff26 	bl	8000210 <memchr>
 80013c4:	b108      	cbz	r0, 80013ca <_printf_i+0x1f2>
 80013c6:	1b80      	subs	r0, r0, r6
 80013c8:	6060      	str	r0, [r4, #4]
 80013ca:	6863      	ldr	r3, [r4, #4]
 80013cc:	6123      	str	r3, [r4, #16]
 80013ce:	2300      	movs	r3, #0
 80013d0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80013d4:	e7a8      	b.n	8001328 <_printf_i+0x150>
 80013d6:	6923      	ldr	r3, [r4, #16]
 80013d8:	4632      	mov	r2, r6
 80013da:	4649      	mov	r1, r9
 80013dc:	4640      	mov	r0, r8
 80013de:	47d0      	blx	sl
 80013e0:	3001      	adds	r0, #1
 80013e2:	d0ab      	beq.n	800133c <_printf_i+0x164>
 80013e4:	6823      	ldr	r3, [r4, #0]
 80013e6:	079b      	lsls	r3, r3, #30
 80013e8:	d413      	bmi.n	8001412 <_printf_i+0x23a>
 80013ea:	68e0      	ldr	r0, [r4, #12]
 80013ec:	9b03      	ldr	r3, [sp, #12]
 80013ee:	4298      	cmp	r0, r3
 80013f0:	bfb8      	it	lt
 80013f2:	4618      	movlt	r0, r3
 80013f4:	e7a4      	b.n	8001340 <_printf_i+0x168>
 80013f6:	2301      	movs	r3, #1
 80013f8:	4632      	mov	r2, r6
 80013fa:	4649      	mov	r1, r9
 80013fc:	4640      	mov	r0, r8
 80013fe:	47d0      	blx	sl
 8001400:	3001      	adds	r0, #1
 8001402:	d09b      	beq.n	800133c <_printf_i+0x164>
 8001404:	3501      	adds	r5, #1
 8001406:	68e3      	ldr	r3, [r4, #12]
 8001408:	9903      	ldr	r1, [sp, #12]
 800140a:	1a5b      	subs	r3, r3, r1
 800140c:	42ab      	cmp	r3, r5
 800140e:	dcf2      	bgt.n	80013f6 <_printf_i+0x21e>
 8001410:	e7eb      	b.n	80013ea <_printf_i+0x212>
 8001412:	2500      	movs	r5, #0
 8001414:	f104 0619 	add.w	r6, r4, #25
 8001418:	e7f5      	b.n	8001406 <_printf_i+0x22e>
 800141a:	bf00      	nop
 800141c:	08001779 	.word	0x08001779
 8001420:	0800178a 	.word	0x0800178a

08001424 <_sbrk_r>:
 8001424:	b538      	push	{r3, r4, r5, lr}
 8001426:	4d06      	ldr	r5, [pc, #24]	; (8001440 <_sbrk_r+0x1c>)
 8001428:	2300      	movs	r3, #0
 800142a:	4604      	mov	r4, r0
 800142c:	4608      	mov	r0, r1
 800142e:	602b      	str	r3, [r5, #0]
 8001430:	f7ff f862 	bl	80004f8 <_sbrk>
 8001434:	1c43      	adds	r3, r0, #1
 8001436:	d102      	bne.n	800143e <_sbrk_r+0x1a>
 8001438:	682b      	ldr	r3, [r5, #0]
 800143a:	b103      	cbz	r3, 800143e <_sbrk_r+0x1a>
 800143c:	6023      	str	r3, [r4, #0]
 800143e:	bd38      	pop	{r3, r4, r5, pc}
 8001440:	20000098 	.word	0x20000098

08001444 <__sread>:
 8001444:	b510      	push	{r4, lr}
 8001446:	460c      	mov	r4, r1
 8001448:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800144c:	f000 f8a0 	bl	8001590 <_read_r>
 8001450:	2800      	cmp	r0, #0
 8001452:	bfab      	itete	ge
 8001454:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001456:	89a3      	ldrhlt	r3, [r4, #12]
 8001458:	181b      	addge	r3, r3, r0
 800145a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800145e:	bfac      	ite	ge
 8001460:	6563      	strge	r3, [r4, #84]	; 0x54
 8001462:	81a3      	strhlt	r3, [r4, #12]
 8001464:	bd10      	pop	{r4, pc}

08001466 <__swrite>:
 8001466:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800146a:	461f      	mov	r7, r3
 800146c:	898b      	ldrh	r3, [r1, #12]
 800146e:	05db      	lsls	r3, r3, #23
 8001470:	4605      	mov	r5, r0
 8001472:	460c      	mov	r4, r1
 8001474:	4616      	mov	r6, r2
 8001476:	d505      	bpl.n	8001484 <__swrite+0x1e>
 8001478:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800147c:	2302      	movs	r3, #2
 800147e:	2200      	movs	r2, #0
 8001480:	f000 f868 	bl	8001554 <_lseek_r>
 8001484:	89a3      	ldrh	r3, [r4, #12]
 8001486:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800148a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800148e:	81a3      	strh	r3, [r4, #12]
 8001490:	4632      	mov	r2, r6
 8001492:	463b      	mov	r3, r7
 8001494:	4628      	mov	r0, r5
 8001496:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800149a:	f000 b817 	b.w	80014cc <_write_r>

0800149e <__sseek>:
 800149e:	b510      	push	{r4, lr}
 80014a0:	460c      	mov	r4, r1
 80014a2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014a6:	f000 f855 	bl	8001554 <_lseek_r>
 80014aa:	1c43      	adds	r3, r0, #1
 80014ac:	89a3      	ldrh	r3, [r4, #12]
 80014ae:	bf15      	itete	ne
 80014b0:	6560      	strne	r0, [r4, #84]	; 0x54
 80014b2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80014b6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80014ba:	81a3      	strheq	r3, [r4, #12]
 80014bc:	bf18      	it	ne
 80014be:	81a3      	strhne	r3, [r4, #12]
 80014c0:	bd10      	pop	{r4, pc}

080014c2 <__sclose>:
 80014c2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014c6:	f000 b813 	b.w	80014f0 <_close_r>
	...

080014cc <_write_r>:
 80014cc:	b538      	push	{r3, r4, r5, lr}
 80014ce:	4d07      	ldr	r5, [pc, #28]	; (80014ec <_write_r+0x20>)
 80014d0:	4604      	mov	r4, r0
 80014d2:	4608      	mov	r0, r1
 80014d4:	4611      	mov	r1, r2
 80014d6:	2200      	movs	r2, #0
 80014d8:	602a      	str	r2, [r5, #0]
 80014da:	461a      	mov	r2, r3
 80014dc:	f7fe ffbb 	bl	8000456 <_write>
 80014e0:	1c43      	adds	r3, r0, #1
 80014e2:	d102      	bne.n	80014ea <_write_r+0x1e>
 80014e4:	682b      	ldr	r3, [r5, #0]
 80014e6:	b103      	cbz	r3, 80014ea <_write_r+0x1e>
 80014e8:	6023      	str	r3, [r4, #0]
 80014ea:	bd38      	pop	{r3, r4, r5, pc}
 80014ec:	20000098 	.word	0x20000098

080014f0 <_close_r>:
 80014f0:	b538      	push	{r3, r4, r5, lr}
 80014f2:	4d06      	ldr	r5, [pc, #24]	; (800150c <_close_r+0x1c>)
 80014f4:	2300      	movs	r3, #0
 80014f6:	4604      	mov	r4, r0
 80014f8:	4608      	mov	r0, r1
 80014fa:	602b      	str	r3, [r5, #0]
 80014fc:	f7fe ffc7 	bl	800048e <_close>
 8001500:	1c43      	adds	r3, r0, #1
 8001502:	d102      	bne.n	800150a <_close_r+0x1a>
 8001504:	682b      	ldr	r3, [r5, #0]
 8001506:	b103      	cbz	r3, 800150a <_close_r+0x1a>
 8001508:	6023      	str	r3, [r4, #0]
 800150a:	bd38      	pop	{r3, r4, r5, pc}
 800150c:	20000098 	.word	0x20000098

08001510 <_fstat_r>:
 8001510:	b538      	push	{r3, r4, r5, lr}
 8001512:	4d07      	ldr	r5, [pc, #28]	; (8001530 <_fstat_r+0x20>)
 8001514:	2300      	movs	r3, #0
 8001516:	4604      	mov	r4, r0
 8001518:	4608      	mov	r0, r1
 800151a:	4611      	mov	r1, r2
 800151c:	602b      	str	r3, [r5, #0]
 800151e:	f7fe ffc2 	bl	80004a6 <_fstat>
 8001522:	1c43      	adds	r3, r0, #1
 8001524:	d102      	bne.n	800152c <_fstat_r+0x1c>
 8001526:	682b      	ldr	r3, [r5, #0]
 8001528:	b103      	cbz	r3, 800152c <_fstat_r+0x1c>
 800152a:	6023      	str	r3, [r4, #0]
 800152c:	bd38      	pop	{r3, r4, r5, pc}
 800152e:	bf00      	nop
 8001530:	20000098 	.word	0x20000098

08001534 <_isatty_r>:
 8001534:	b538      	push	{r3, r4, r5, lr}
 8001536:	4d06      	ldr	r5, [pc, #24]	; (8001550 <_isatty_r+0x1c>)
 8001538:	2300      	movs	r3, #0
 800153a:	4604      	mov	r4, r0
 800153c:	4608      	mov	r0, r1
 800153e:	602b      	str	r3, [r5, #0]
 8001540:	f7fe ffc1 	bl	80004c6 <_isatty>
 8001544:	1c43      	adds	r3, r0, #1
 8001546:	d102      	bne.n	800154e <_isatty_r+0x1a>
 8001548:	682b      	ldr	r3, [r5, #0]
 800154a:	b103      	cbz	r3, 800154e <_isatty_r+0x1a>
 800154c:	6023      	str	r3, [r4, #0]
 800154e:	bd38      	pop	{r3, r4, r5, pc}
 8001550:	20000098 	.word	0x20000098

08001554 <_lseek_r>:
 8001554:	b538      	push	{r3, r4, r5, lr}
 8001556:	4d07      	ldr	r5, [pc, #28]	; (8001574 <_lseek_r+0x20>)
 8001558:	4604      	mov	r4, r0
 800155a:	4608      	mov	r0, r1
 800155c:	4611      	mov	r1, r2
 800155e:	2200      	movs	r2, #0
 8001560:	602a      	str	r2, [r5, #0]
 8001562:	461a      	mov	r2, r3
 8001564:	f7fe ffba 	bl	80004dc <_lseek>
 8001568:	1c43      	adds	r3, r0, #1
 800156a:	d102      	bne.n	8001572 <_lseek_r+0x1e>
 800156c:	682b      	ldr	r3, [r5, #0]
 800156e:	b103      	cbz	r3, 8001572 <_lseek_r+0x1e>
 8001570:	6023      	str	r3, [r4, #0]
 8001572:	bd38      	pop	{r3, r4, r5, pc}
 8001574:	20000098 	.word	0x20000098

08001578 <__malloc_lock>:
 8001578:	4801      	ldr	r0, [pc, #4]	; (8001580 <__malloc_lock+0x8>)
 800157a:	f7ff bb55 	b.w	8000c28 <__retarget_lock_acquire_recursive>
 800157e:	bf00      	nop
 8001580:	20000090 	.word	0x20000090

08001584 <__malloc_unlock>:
 8001584:	4801      	ldr	r0, [pc, #4]	; (800158c <__malloc_unlock+0x8>)
 8001586:	f7ff bb50 	b.w	8000c2a <__retarget_lock_release_recursive>
 800158a:	bf00      	nop
 800158c:	20000090 	.word	0x20000090

08001590 <_read_r>:
 8001590:	b538      	push	{r3, r4, r5, lr}
 8001592:	4d07      	ldr	r5, [pc, #28]	; (80015b0 <_read_r+0x20>)
 8001594:	4604      	mov	r4, r0
 8001596:	4608      	mov	r0, r1
 8001598:	4611      	mov	r1, r2
 800159a:	2200      	movs	r2, #0
 800159c:	602a      	str	r2, [r5, #0]
 800159e:	461a      	mov	r2, r3
 80015a0:	f7fe ff3c 	bl	800041c <_read>
 80015a4:	1c43      	adds	r3, r0, #1
 80015a6:	d102      	bne.n	80015ae <_read_r+0x1e>
 80015a8:	682b      	ldr	r3, [r5, #0]
 80015aa:	b103      	cbz	r3, 80015ae <_read_r+0x1e>
 80015ac:	6023      	str	r3, [r4, #0]
 80015ae:	bd38      	pop	{r3, r4, r5, pc}
 80015b0:	20000098 	.word	0x20000098

080015b4 <_init>:
 80015b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015b6:	bf00      	nop
 80015b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015ba:	bc08      	pop	{r3}
 80015bc:	469e      	mov	lr, r3
 80015be:	4770      	bx	lr

080015c0 <_fini>:
 80015c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015c2:	bf00      	nop
 80015c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015c6:	bc08      	pop	{r3}
 80015c8:	469e      	mov	lr, r3
 80015ca:	4770      	bx	lr
