
stack.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000131c  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b8  080014ec  080014ec  000114ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080015a4  080015a4  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080015a4  080015a4  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080015a4  080015a4  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080015a4  080015a4  000115a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080015a8  080015a8  000115a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080015ac  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000038  20000064  08001610  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000009c  08001610  0002009c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   000023b3  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000064c  00000000  00000000  00022447  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000130  00000000  00000000  00022a98  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000f8  00000000  00000000  00022bc8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002c1a  00000000  00000000  00022cc0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000012cf  00000000  00000000  000258da  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000097a9  00000000  00000000  00026ba9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00030352  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000bcc  00000000  00000000  000303a8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000064 	.word	0x20000064
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080014d4 	.word	0x080014d4

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000068 	.word	0x20000068
 800020c:	080014d4 	.word	0x080014d4

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <fun_add>:

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int fun_add(int a,int b, int c, int d){
 80002b0:	b480      	push	{r7}
 80002b2:	b085      	sub	sp, #20
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	60f8      	str	r0, [r7, #12]
 80002b8:	60b9      	str	r1, [r7, #8]
 80002ba:	607a      	str	r2, [r7, #4]
 80002bc:	603b      	str	r3, [r7, #0]
	return a+b+c+d;
 80002be:	68fa      	ldr	r2, [r7, #12]
 80002c0:	68bb      	ldr	r3, [r7, #8]
 80002c2:	441a      	add	r2, r3
 80002c4:	687b      	ldr	r3, [r7, #4]
 80002c6:	441a      	add	r2, r3
 80002c8:	683b      	ldr	r3, [r7, #0]
 80002ca:	4413      	add	r3, r2
}
 80002cc:	4618      	mov	r0, r3
 80002ce:	3714      	adds	r7, #20
 80002d0:	46bd      	mov	sp, r7
 80002d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002d6:	4770      	bx	lr

080002d8 <change_sp_to_psp>:

__attribute__((naked)) void change_sp_to_psp(void){
	__asm volatile(".equ SRAM_END, (0x200000000 + (32 * 1024))");
	__asm volatile(".equ PSP_START, (SRAM_END-512)");
	__asm volatile("LDR R0,=PSP_START");
 80002d8:	f44f 40fc 	mov.w	r0, #32256	; 0x7e00
	__asm volatile("MSR PSP, R0");
 80002dc:	f380 8809 	msr	PSP, r0
	__asm volatile("MOV R0,#0X02");
 80002e0:	f04f 0002 	mov.w	r0, #2
	__asm volatile("MSR CONTROL,R0");
 80002e4:	f380 8814 	msr	CONTROL, r0
}
 80002e8:	bf00      	nop

080002ea <generate_exception>:

void generate_exception(void){
 80002ea:	b480      	push	{r7}
 80002ec:	af00      	add	r7, sp, #0
	__asm volatile("SVC #0X2");
 80002ee:	df02      	svc	2
}
 80002f0:	bf00      	nop
 80002f2:	46bd      	mov	sp, r7
 80002f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002f8:	4770      	bx	lr
	...

080002fc <main>:

int main(void)
{
 80002fc:	b580      	push	{r7, lr}
 80002fe:	b082      	sub	sp, #8
 8000300:	af00      	add	r7, sp, #0
	change_sp_to_psp();
 8000302:	f7ff ffe9 	bl	80002d8 <change_sp_to_psp>
	int ret;

	ret = fun_add(1,4,5,6);
 8000306:	2306      	movs	r3, #6
 8000308:	2205      	movs	r2, #5
 800030a:	2104      	movs	r1, #4
 800030c:	2001      	movs	r0, #1
 800030e:	f7ff ffcf 	bl	80002b0 <fun_add>
 8000312:	6078      	str	r0, [r7, #4]

	printf("result = %d\n",ret);
 8000314:	6879      	ldr	r1, [r7, #4]
 8000316:	4803      	ldr	r0, [pc, #12]	; (8000324 <main+0x28>)
 8000318:	f000 f910 	bl	800053c <iprintf>

	generate_exception();
 800031c:	f7ff ffe5 	bl	80002ea <generate_exception>

    /* Loop forever */
	for(;;);
 8000320:	e7fe      	b.n	8000320 <main+0x24>
 8000322:	bf00      	nop
 8000324:	080014ec 	.word	0x080014ec

08000328 <SVC_Handler>:
}

void SVC_Handler(){
 8000328:	b580      	push	{r7, lr}
 800032a:	af00      	add	r7, sp, #0
	printf("En SVC_Handler\n");
 800032c:	4802      	ldr	r0, [pc, #8]	; (8000338 <SVC_Handler+0x10>)
 800032e:	f000 f98b 	bl	8000648 <puts>
}
 8000332:	bf00      	nop
 8000334:	bd80      	pop	{r7, pc}
 8000336:	bf00      	nop
 8000338:	080014fc 	.word	0x080014fc

0800033c <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800033c:	b580      	push	{r7, lr}
 800033e:	b086      	sub	sp, #24
 8000340:	af00      	add	r7, sp, #0
 8000342:	60f8      	str	r0, [r7, #12]
 8000344:	60b9      	str	r1, [r7, #8]
 8000346:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000348:	2300      	movs	r3, #0
 800034a:	617b      	str	r3, [r7, #20]
 800034c:	e00a      	b.n	8000364 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800034e:	f3af 8000 	nop.w
 8000352:	4601      	mov	r1, r0
 8000354:	68bb      	ldr	r3, [r7, #8]
 8000356:	1c5a      	adds	r2, r3, #1
 8000358:	60ba      	str	r2, [r7, #8]
 800035a:	b2ca      	uxtb	r2, r1
 800035c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800035e:	697b      	ldr	r3, [r7, #20]
 8000360:	3301      	adds	r3, #1
 8000362:	617b      	str	r3, [r7, #20]
 8000364:	697a      	ldr	r2, [r7, #20]
 8000366:	687b      	ldr	r3, [r7, #4]
 8000368:	429a      	cmp	r2, r3
 800036a:	dbf0      	blt.n	800034e <_read+0x12>
	}

return len;
 800036c:	687b      	ldr	r3, [r7, #4]
}
 800036e:	4618      	mov	r0, r3
 8000370:	3718      	adds	r7, #24
 8000372:	46bd      	mov	sp, r7
 8000374:	bd80      	pop	{r7, pc}

08000376 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000376:	b580      	push	{r7, lr}
 8000378:	b086      	sub	sp, #24
 800037a:	af00      	add	r7, sp, #0
 800037c:	60f8      	str	r0, [r7, #12]
 800037e:	60b9      	str	r1, [r7, #8]
 8000380:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000382:	2300      	movs	r3, #0
 8000384:	617b      	str	r3, [r7, #20]
 8000386:	e009      	b.n	800039c <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000388:	68bb      	ldr	r3, [r7, #8]
 800038a:	1c5a      	adds	r2, r3, #1
 800038c:	60ba      	str	r2, [r7, #8]
 800038e:	781b      	ldrb	r3, [r3, #0]
 8000390:	4618      	mov	r0, r3
 8000392:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000396:	697b      	ldr	r3, [r7, #20]
 8000398:	3301      	adds	r3, #1
 800039a:	617b      	str	r3, [r7, #20]
 800039c:	697a      	ldr	r2, [r7, #20]
 800039e:	687b      	ldr	r3, [r7, #4]
 80003a0:	429a      	cmp	r2, r3
 80003a2:	dbf1      	blt.n	8000388 <_write+0x12>
	}
	return len;
 80003a4:	687b      	ldr	r3, [r7, #4]
}
 80003a6:	4618      	mov	r0, r3
 80003a8:	3718      	adds	r7, #24
 80003aa:	46bd      	mov	sp, r7
 80003ac:	bd80      	pop	{r7, pc}

080003ae <_close>:

int _close(int file)
{
 80003ae:	b480      	push	{r7}
 80003b0:	b083      	sub	sp, #12
 80003b2:	af00      	add	r7, sp, #0
 80003b4:	6078      	str	r0, [r7, #4]
	return -1;
 80003b6:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 80003ba:	4618      	mov	r0, r3
 80003bc:	370c      	adds	r7, #12
 80003be:	46bd      	mov	sp, r7
 80003c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003c4:	4770      	bx	lr

080003c6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003c6:	b480      	push	{r7}
 80003c8:	b083      	sub	sp, #12
 80003ca:	af00      	add	r7, sp, #0
 80003cc:	6078      	str	r0, [r7, #4]
 80003ce:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80003d0:	683b      	ldr	r3, [r7, #0]
 80003d2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003d6:	605a      	str	r2, [r3, #4]
	return 0;
 80003d8:	2300      	movs	r3, #0
}
 80003da:	4618      	mov	r0, r3
 80003dc:	370c      	adds	r7, #12
 80003de:	46bd      	mov	sp, r7
 80003e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003e4:	4770      	bx	lr

080003e6 <_isatty>:

int _isatty(int file)
{
 80003e6:	b480      	push	{r7}
 80003e8:	b083      	sub	sp, #12
 80003ea:	af00      	add	r7, sp, #0
 80003ec:	6078      	str	r0, [r7, #4]
	return 1;
 80003ee:	2301      	movs	r3, #1
}
 80003f0:	4618      	mov	r0, r3
 80003f2:	370c      	adds	r7, #12
 80003f4:	46bd      	mov	sp, r7
 80003f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003fa:	4770      	bx	lr

080003fc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003fc:	b480      	push	{r7}
 80003fe:	b085      	sub	sp, #20
 8000400:	af00      	add	r7, sp, #0
 8000402:	60f8      	str	r0, [r7, #12]
 8000404:	60b9      	str	r1, [r7, #8]
 8000406:	607a      	str	r2, [r7, #4]
	return 0;
 8000408:	2300      	movs	r3, #0
}
 800040a:	4618      	mov	r0, r3
 800040c:	3714      	adds	r7, #20
 800040e:	46bd      	mov	sp, r7
 8000410:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000414:	4770      	bx	lr
	...

08000418 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000418:	b580      	push	{r7, lr}
 800041a:	b086      	sub	sp, #24
 800041c:	af00      	add	r7, sp, #0
 800041e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000420:	4a14      	ldr	r2, [pc, #80]	; (8000474 <_sbrk+0x5c>)
 8000422:	4b15      	ldr	r3, [pc, #84]	; (8000478 <_sbrk+0x60>)
 8000424:	1ad3      	subs	r3, r2, r3
 8000426:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000428:	697b      	ldr	r3, [r7, #20]
 800042a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800042c:	4b13      	ldr	r3, [pc, #76]	; (800047c <_sbrk+0x64>)
 800042e:	681b      	ldr	r3, [r3, #0]
 8000430:	2b00      	cmp	r3, #0
 8000432:	d102      	bne.n	800043a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000434:	4b11      	ldr	r3, [pc, #68]	; (800047c <_sbrk+0x64>)
 8000436:	4a12      	ldr	r2, [pc, #72]	; (8000480 <_sbrk+0x68>)
 8000438:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800043a:	4b10      	ldr	r3, [pc, #64]	; (800047c <_sbrk+0x64>)
 800043c:	681a      	ldr	r2, [r3, #0]
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	4413      	add	r3, r2
 8000442:	693a      	ldr	r2, [r7, #16]
 8000444:	429a      	cmp	r2, r3
 8000446:	d207      	bcs.n	8000458 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000448:	f000 f846 	bl	80004d8 <__errno>
 800044c:	4603      	mov	r3, r0
 800044e:	220c      	movs	r2, #12
 8000450:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000452:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000456:	e009      	b.n	800046c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000458:	4b08      	ldr	r3, [pc, #32]	; (800047c <_sbrk+0x64>)
 800045a:	681b      	ldr	r3, [r3, #0]
 800045c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800045e:	4b07      	ldr	r3, [pc, #28]	; (800047c <_sbrk+0x64>)
 8000460:	681a      	ldr	r2, [r3, #0]
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	4413      	add	r3, r2
 8000466:	4a05      	ldr	r2, [pc, #20]	; (800047c <_sbrk+0x64>)
 8000468:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800046a:	68fb      	ldr	r3, [r7, #12]
}
 800046c:	4618      	mov	r0, r3
 800046e:	3718      	adds	r7, #24
 8000470:	46bd      	mov	sp, r7
 8000472:	bd80      	pop	{r7, pc}
 8000474:	20008000 	.word	0x20008000
 8000478:	00000400 	.word	0x00000400
 800047c:	20000080 	.word	0x20000080
 8000480:	200000a0 	.word	0x200000a0

08000484 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000484:	480d      	ldr	r0, [pc, #52]	; (80004bc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000486:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000488:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800048c:	480c      	ldr	r0, [pc, #48]	; (80004c0 <LoopForever+0x6>)
  ldr r1, =_edata
 800048e:	490d      	ldr	r1, [pc, #52]	; (80004c4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000490:	4a0d      	ldr	r2, [pc, #52]	; (80004c8 <LoopForever+0xe>)
  movs r3, #0
 8000492:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000494:	e002      	b.n	800049c <LoopCopyDataInit>

08000496 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000496:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000498:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800049a:	3304      	adds	r3, #4

0800049c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800049c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800049e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004a0:	d3f9      	bcc.n	8000496 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004a2:	4a0a      	ldr	r2, [pc, #40]	; (80004cc <LoopForever+0x12>)
  ldr r4, =_ebss
 80004a4:	4c0a      	ldr	r4, [pc, #40]	; (80004d0 <LoopForever+0x16>)
  movs r3, #0
 80004a6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004a8:	e001      	b.n	80004ae <LoopFillZerobss>

080004aa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004aa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004ac:	3204      	adds	r2, #4

080004ae <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004ae:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004b0:	d3fb      	bcc.n	80004aa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004b2:	f000 f817 	bl	80004e4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004b6:	f7ff ff21 	bl	80002fc <main>

080004ba <LoopForever>:

LoopForever:
    b LoopForever
 80004ba:	e7fe      	b.n	80004ba <LoopForever>
  ldr   r0, =_estack
 80004bc:	20008000 	.word	0x20008000
  ldr r0, =_sdata
 80004c0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004c4:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80004c8:	080015ac 	.word	0x080015ac
  ldr r2, =_sbss
 80004cc:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80004d0:	2000009c 	.word	0x2000009c

080004d4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004d4:	e7fe      	b.n	80004d4 <ADC_IRQHandler>
	...

080004d8 <__errno>:
 80004d8:	4b01      	ldr	r3, [pc, #4]	; (80004e0 <__errno+0x8>)
 80004da:	6818      	ldr	r0, [r3, #0]
 80004dc:	4770      	bx	lr
 80004de:	bf00      	nop
 80004e0:	20000000 	.word	0x20000000

080004e4 <__libc_init_array>:
 80004e4:	b570      	push	{r4, r5, r6, lr}
 80004e6:	4d0d      	ldr	r5, [pc, #52]	; (800051c <__libc_init_array+0x38>)
 80004e8:	4c0d      	ldr	r4, [pc, #52]	; (8000520 <__libc_init_array+0x3c>)
 80004ea:	1b64      	subs	r4, r4, r5
 80004ec:	10a4      	asrs	r4, r4, #2
 80004ee:	2600      	movs	r6, #0
 80004f0:	42a6      	cmp	r6, r4
 80004f2:	d109      	bne.n	8000508 <__libc_init_array+0x24>
 80004f4:	4d0b      	ldr	r5, [pc, #44]	; (8000524 <__libc_init_array+0x40>)
 80004f6:	4c0c      	ldr	r4, [pc, #48]	; (8000528 <__libc_init_array+0x44>)
 80004f8:	f000 ffec 	bl	80014d4 <_init>
 80004fc:	1b64      	subs	r4, r4, r5
 80004fe:	10a4      	asrs	r4, r4, #2
 8000500:	2600      	movs	r6, #0
 8000502:	42a6      	cmp	r6, r4
 8000504:	d105      	bne.n	8000512 <__libc_init_array+0x2e>
 8000506:	bd70      	pop	{r4, r5, r6, pc}
 8000508:	f855 3b04 	ldr.w	r3, [r5], #4
 800050c:	4798      	blx	r3
 800050e:	3601      	adds	r6, #1
 8000510:	e7ee      	b.n	80004f0 <__libc_init_array+0xc>
 8000512:	f855 3b04 	ldr.w	r3, [r5], #4
 8000516:	4798      	blx	r3
 8000518:	3601      	adds	r6, #1
 800051a:	e7f2      	b.n	8000502 <__libc_init_array+0x1e>
 800051c:	080015a4 	.word	0x080015a4
 8000520:	080015a4 	.word	0x080015a4
 8000524:	080015a4 	.word	0x080015a4
 8000528:	080015a8 	.word	0x080015a8

0800052c <memset>:
 800052c:	4402      	add	r2, r0
 800052e:	4603      	mov	r3, r0
 8000530:	4293      	cmp	r3, r2
 8000532:	d100      	bne.n	8000536 <memset+0xa>
 8000534:	4770      	bx	lr
 8000536:	f803 1b01 	strb.w	r1, [r3], #1
 800053a:	e7f9      	b.n	8000530 <memset+0x4>

0800053c <iprintf>:
 800053c:	b40f      	push	{r0, r1, r2, r3}
 800053e:	4b0a      	ldr	r3, [pc, #40]	; (8000568 <iprintf+0x2c>)
 8000540:	b513      	push	{r0, r1, r4, lr}
 8000542:	681c      	ldr	r4, [r3, #0]
 8000544:	b124      	cbz	r4, 8000550 <iprintf+0x14>
 8000546:	69a3      	ldr	r3, [r4, #24]
 8000548:	b913      	cbnz	r3, 8000550 <iprintf+0x14>
 800054a:	4620      	mov	r0, r4
 800054c:	f000 fa5e 	bl	8000a0c <__sinit>
 8000550:	ab05      	add	r3, sp, #20
 8000552:	9a04      	ldr	r2, [sp, #16]
 8000554:	68a1      	ldr	r1, [r4, #8]
 8000556:	9301      	str	r3, [sp, #4]
 8000558:	4620      	mov	r0, r4
 800055a:	f000 fc2f 	bl	8000dbc <_vfiprintf_r>
 800055e:	b002      	add	sp, #8
 8000560:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000564:	b004      	add	sp, #16
 8000566:	4770      	bx	lr
 8000568:	20000000 	.word	0x20000000

0800056c <_puts_r>:
 800056c:	b570      	push	{r4, r5, r6, lr}
 800056e:	460e      	mov	r6, r1
 8000570:	4605      	mov	r5, r0
 8000572:	b118      	cbz	r0, 800057c <_puts_r+0x10>
 8000574:	6983      	ldr	r3, [r0, #24]
 8000576:	b90b      	cbnz	r3, 800057c <_puts_r+0x10>
 8000578:	f000 fa48 	bl	8000a0c <__sinit>
 800057c:	69ab      	ldr	r3, [r5, #24]
 800057e:	68ac      	ldr	r4, [r5, #8]
 8000580:	b913      	cbnz	r3, 8000588 <_puts_r+0x1c>
 8000582:	4628      	mov	r0, r5
 8000584:	f000 fa42 	bl	8000a0c <__sinit>
 8000588:	4b2c      	ldr	r3, [pc, #176]	; (800063c <_puts_r+0xd0>)
 800058a:	429c      	cmp	r4, r3
 800058c:	d120      	bne.n	80005d0 <_puts_r+0x64>
 800058e:	686c      	ldr	r4, [r5, #4]
 8000590:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000592:	07db      	lsls	r3, r3, #31
 8000594:	d405      	bmi.n	80005a2 <_puts_r+0x36>
 8000596:	89a3      	ldrh	r3, [r4, #12]
 8000598:	0598      	lsls	r0, r3, #22
 800059a:	d402      	bmi.n	80005a2 <_puts_r+0x36>
 800059c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800059e:	f000 fad3 	bl	8000b48 <__retarget_lock_acquire_recursive>
 80005a2:	89a3      	ldrh	r3, [r4, #12]
 80005a4:	0719      	lsls	r1, r3, #28
 80005a6:	d51d      	bpl.n	80005e4 <_puts_r+0x78>
 80005a8:	6923      	ldr	r3, [r4, #16]
 80005aa:	b1db      	cbz	r3, 80005e4 <_puts_r+0x78>
 80005ac:	3e01      	subs	r6, #1
 80005ae:	68a3      	ldr	r3, [r4, #8]
 80005b0:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80005b4:	3b01      	subs	r3, #1
 80005b6:	60a3      	str	r3, [r4, #8]
 80005b8:	bb39      	cbnz	r1, 800060a <_puts_r+0x9e>
 80005ba:	2b00      	cmp	r3, #0
 80005bc:	da38      	bge.n	8000630 <_puts_r+0xc4>
 80005be:	4622      	mov	r2, r4
 80005c0:	210a      	movs	r1, #10
 80005c2:	4628      	mov	r0, r5
 80005c4:	f000 f848 	bl	8000658 <__swbuf_r>
 80005c8:	3001      	adds	r0, #1
 80005ca:	d011      	beq.n	80005f0 <_puts_r+0x84>
 80005cc:	250a      	movs	r5, #10
 80005ce:	e011      	b.n	80005f4 <_puts_r+0x88>
 80005d0:	4b1b      	ldr	r3, [pc, #108]	; (8000640 <_puts_r+0xd4>)
 80005d2:	429c      	cmp	r4, r3
 80005d4:	d101      	bne.n	80005da <_puts_r+0x6e>
 80005d6:	68ac      	ldr	r4, [r5, #8]
 80005d8:	e7da      	b.n	8000590 <_puts_r+0x24>
 80005da:	4b1a      	ldr	r3, [pc, #104]	; (8000644 <_puts_r+0xd8>)
 80005dc:	429c      	cmp	r4, r3
 80005de:	bf08      	it	eq
 80005e0:	68ec      	ldreq	r4, [r5, #12]
 80005e2:	e7d5      	b.n	8000590 <_puts_r+0x24>
 80005e4:	4621      	mov	r1, r4
 80005e6:	4628      	mov	r0, r5
 80005e8:	f000 f888 	bl	80006fc <__swsetup_r>
 80005ec:	2800      	cmp	r0, #0
 80005ee:	d0dd      	beq.n	80005ac <_puts_r+0x40>
 80005f0:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 80005f4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80005f6:	07da      	lsls	r2, r3, #31
 80005f8:	d405      	bmi.n	8000606 <_puts_r+0x9a>
 80005fa:	89a3      	ldrh	r3, [r4, #12]
 80005fc:	059b      	lsls	r3, r3, #22
 80005fe:	d402      	bmi.n	8000606 <_puts_r+0x9a>
 8000600:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000602:	f000 faa2 	bl	8000b4a <__retarget_lock_release_recursive>
 8000606:	4628      	mov	r0, r5
 8000608:	bd70      	pop	{r4, r5, r6, pc}
 800060a:	2b00      	cmp	r3, #0
 800060c:	da04      	bge.n	8000618 <_puts_r+0xac>
 800060e:	69a2      	ldr	r2, [r4, #24]
 8000610:	429a      	cmp	r2, r3
 8000612:	dc06      	bgt.n	8000622 <_puts_r+0xb6>
 8000614:	290a      	cmp	r1, #10
 8000616:	d004      	beq.n	8000622 <_puts_r+0xb6>
 8000618:	6823      	ldr	r3, [r4, #0]
 800061a:	1c5a      	adds	r2, r3, #1
 800061c:	6022      	str	r2, [r4, #0]
 800061e:	7019      	strb	r1, [r3, #0]
 8000620:	e7c5      	b.n	80005ae <_puts_r+0x42>
 8000622:	4622      	mov	r2, r4
 8000624:	4628      	mov	r0, r5
 8000626:	f000 f817 	bl	8000658 <__swbuf_r>
 800062a:	3001      	adds	r0, #1
 800062c:	d1bf      	bne.n	80005ae <_puts_r+0x42>
 800062e:	e7df      	b.n	80005f0 <_puts_r+0x84>
 8000630:	6823      	ldr	r3, [r4, #0]
 8000632:	250a      	movs	r5, #10
 8000634:	1c5a      	adds	r2, r3, #1
 8000636:	6022      	str	r2, [r4, #0]
 8000638:	701d      	strb	r5, [r3, #0]
 800063a:	e7db      	b.n	80005f4 <_puts_r+0x88>
 800063c:	08001530 	.word	0x08001530
 8000640:	08001550 	.word	0x08001550
 8000644:	08001510 	.word	0x08001510

08000648 <puts>:
 8000648:	4b02      	ldr	r3, [pc, #8]	; (8000654 <puts+0xc>)
 800064a:	4601      	mov	r1, r0
 800064c:	6818      	ldr	r0, [r3, #0]
 800064e:	f7ff bf8d 	b.w	800056c <_puts_r>
 8000652:	bf00      	nop
 8000654:	20000000 	.word	0x20000000

08000658 <__swbuf_r>:
 8000658:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800065a:	460e      	mov	r6, r1
 800065c:	4614      	mov	r4, r2
 800065e:	4605      	mov	r5, r0
 8000660:	b118      	cbz	r0, 800066a <__swbuf_r+0x12>
 8000662:	6983      	ldr	r3, [r0, #24]
 8000664:	b90b      	cbnz	r3, 800066a <__swbuf_r+0x12>
 8000666:	f000 f9d1 	bl	8000a0c <__sinit>
 800066a:	4b21      	ldr	r3, [pc, #132]	; (80006f0 <__swbuf_r+0x98>)
 800066c:	429c      	cmp	r4, r3
 800066e:	d12b      	bne.n	80006c8 <__swbuf_r+0x70>
 8000670:	686c      	ldr	r4, [r5, #4]
 8000672:	69a3      	ldr	r3, [r4, #24]
 8000674:	60a3      	str	r3, [r4, #8]
 8000676:	89a3      	ldrh	r3, [r4, #12]
 8000678:	071a      	lsls	r2, r3, #28
 800067a:	d52f      	bpl.n	80006dc <__swbuf_r+0x84>
 800067c:	6923      	ldr	r3, [r4, #16]
 800067e:	b36b      	cbz	r3, 80006dc <__swbuf_r+0x84>
 8000680:	6923      	ldr	r3, [r4, #16]
 8000682:	6820      	ldr	r0, [r4, #0]
 8000684:	1ac0      	subs	r0, r0, r3
 8000686:	6963      	ldr	r3, [r4, #20]
 8000688:	b2f6      	uxtb	r6, r6
 800068a:	4283      	cmp	r3, r0
 800068c:	4637      	mov	r7, r6
 800068e:	dc04      	bgt.n	800069a <__swbuf_r+0x42>
 8000690:	4621      	mov	r1, r4
 8000692:	4628      	mov	r0, r5
 8000694:	f000 f926 	bl	80008e4 <_fflush_r>
 8000698:	bb30      	cbnz	r0, 80006e8 <__swbuf_r+0x90>
 800069a:	68a3      	ldr	r3, [r4, #8]
 800069c:	3b01      	subs	r3, #1
 800069e:	60a3      	str	r3, [r4, #8]
 80006a0:	6823      	ldr	r3, [r4, #0]
 80006a2:	1c5a      	adds	r2, r3, #1
 80006a4:	6022      	str	r2, [r4, #0]
 80006a6:	701e      	strb	r6, [r3, #0]
 80006a8:	6963      	ldr	r3, [r4, #20]
 80006aa:	3001      	adds	r0, #1
 80006ac:	4283      	cmp	r3, r0
 80006ae:	d004      	beq.n	80006ba <__swbuf_r+0x62>
 80006b0:	89a3      	ldrh	r3, [r4, #12]
 80006b2:	07db      	lsls	r3, r3, #31
 80006b4:	d506      	bpl.n	80006c4 <__swbuf_r+0x6c>
 80006b6:	2e0a      	cmp	r6, #10
 80006b8:	d104      	bne.n	80006c4 <__swbuf_r+0x6c>
 80006ba:	4621      	mov	r1, r4
 80006bc:	4628      	mov	r0, r5
 80006be:	f000 f911 	bl	80008e4 <_fflush_r>
 80006c2:	b988      	cbnz	r0, 80006e8 <__swbuf_r+0x90>
 80006c4:	4638      	mov	r0, r7
 80006c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80006c8:	4b0a      	ldr	r3, [pc, #40]	; (80006f4 <__swbuf_r+0x9c>)
 80006ca:	429c      	cmp	r4, r3
 80006cc:	d101      	bne.n	80006d2 <__swbuf_r+0x7a>
 80006ce:	68ac      	ldr	r4, [r5, #8]
 80006d0:	e7cf      	b.n	8000672 <__swbuf_r+0x1a>
 80006d2:	4b09      	ldr	r3, [pc, #36]	; (80006f8 <__swbuf_r+0xa0>)
 80006d4:	429c      	cmp	r4, r3
 80006d6:	bf08      	it	eq
 80006d8:	68ec      	ldreq	r4, [r5, #12]
 80006da:	e7ca      	b.n	8000672 <__swbuf_r+0x1a>
 80006dc:	4621      	mov	r1, r4
 80006de:	4628      	mov	r0, r5
 80006e0:	f000 f80c 	bl	80006fc <__swsetup_r>
 80006e4:	2800      	cmp	r0, #0
 80006e6:	d0cb      	beq.n	8000680 <__swbuf_r+0x28>
 80006e8:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 80006ec:	e7ea      	b.n	80006c4 <__swbuf_r+0x6c>
 80006ee:	bf00      	nop
 80006f0:	08001530 	.word	0x08001530
 80006f4:	08001550 	.word	0x08001550
 80006f8:	08001510 	.word	0x08001510

080006fc <__swsetup_r>:
 80006fc:	4b32      	ldr	r3, [pc, #200]	; (80007c8 <__swsetup_r+0xcc>)
 80006fe:	b570      	push	{r4, r5, r6, lr}
 8000700:	681d      	ldr	r5, [r3, #0]
 8000702:	4606      	mov	r6, r0
 8000704:	460c      	mov	r4, r1
 8000706:	b125      	cbz	r5, 8000712 <__swsetup_r+0x16>
 8000708:	69ab      	ldr	r3, [r5, #24]
 800070a:	b913      	cbnz	r3, 8000712 <__swsetup_r+0x16>
 800070c:	4628      	mov	r0, r5
 800070e:	f000 f97d 	bl	8000a0c <__sinit>
 8000712:	4b2e      	ldr	r3, [pc, #184]	; (80007cc <__swsetup_r+0xd0>)
 8000714:	429c      	cmp	r4, r3
 8000716:	d10f      	bne.n	8000738 <__swsetup_r+0x3c>
 8000718:	686c      	ldr	r4, [r5, #4]
 800071a:	89a3      	ldrh	r3, [r4, #12]
 800071c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000720:	0719      	lsls	r1, r3, #28
 8000722:	d42c      	bmi.n	800077e <__swsetup_r+0x82>
 8000724:	06dd      	lsls	r5, r3, #27
 8000726:	d411      	bmi.n	800074c <__swsetup_r+0x50>
 8000728:	2309      	movs	r3, #9
 800072a:	6033      	str	r3, [r6, #0]
 800072c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000730:	81a3      	strh	r3, [r4, #12]
 8000732:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000736:	e03e      	b.n	80007b6 <__swsetup_r+0xba>
 8000738:	4b25      	ldr	r3, [pc, #148]	; (80007d0 <__swsetup_r+0xd4>)
 800073a:	429c      	cmp	r4, r3
 800073c:	d101      	bne.n	8000742 <__swsetup_r+0x46>
 800073e:	68ac      	ldr	r4, [r5, #8]
 8000740:	e7eb      	b.n	800071a <__swsetup_r+0x1e>
 8000742:	4b24      	ldr	r3, [pc, #144]	; (80007d4 <__swsetup_r+0xd8>)
 8000744:	429c      	cmp	r4, r3
 8000746:	bf08      	it	eq
 8000748:	68ec      	ldreq	r4, [r5, #12]
 800074a:	e7e6      	b.n	800071a <__swsetup_r+0x1e>
 800074c:	0758      	lsls	r0, r3, #29
 800074e:	d512      	bpl.n	8000776 <__swsetup_r+0x7a>
 8000750:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000752:	b141      	cbz	r1, 8000766 <__swsetup_r+0x6a>
 8000754:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000758:	4299      	cmp	r1, r3
 800075a:	d002      	beq.n	8000762 <__swsetup_r+0x66>
 800075c:	4630      	mov	r0, r6
 800075e:	f000 fa59 	bl	8000c14 <_free_r>
 8000762:	2300      	movs	r3, #0
 8000764:	6363      	str	r3, [r4, #52]	; 0x34
 8000766:	89a3      	ldrh	r3, [r4, #12]
 8000768:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800076c:	81a3      	strh	r3, [r4, #12]
 800076e:	2300      	movs	r3, #0
 8000770:	6063      	str	r3, [r4, #4]
 8000772:	6923      	ldr	r3, [r4, #16]
 8000774:	6023      	str	r3, [r4, #0]
 8000776:	89a3      	ldrh	r3, [r4, #12]
 8000778:	f043 0308 	orr.w	r3, r3, #8
 800077c:	81a3      	strh	r3, [r4, #12]
 800077e:	6923      	ldr	r3, [r4, #16]
 8000780:	b94b      	cbnz	r3, 8000796 <__swsetup_r+0x9a>
 8000782:	89a3      	ldrh	r3, [r4, #12]
 8000784:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000788:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800078c:	d003      	beq.n	8000796 <__swsetup_r+0x9a>
 800078e:	4621      	mov	r1, r4
 8000790:	4630      	mov	r0, r6
 8000792:	f000 f9ff 	bl	8000b94 <__smakebuf_r>
 8000796:	89a0      	ldrh	r0, [r4, #12]
 8000798:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800079c:	f010 0301 	ands.w	r3, r0, #1
 80007a0:	d00a      	beq.n	80007b8 <__swsetup_r+0xbc>
 80007a2:	2300      	movs	r3, #0
 80007a4:	60a3      	str	r3, [r4, #8]
 80007a6:	6963      	ldr	r3, [r4, #20]
 80007a8:	425b      	negs	r3, r3
 80007aa:	61a3      	str	r3, [r4, #24]
 80007ac:	6923      	ldr	r3, [r4, #16]
 80007ae:	b943      	cbnz	r3, 80007c2 <__swsetup_r+0xc6>
 80007b0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80007b4:	d1ba      	bne.n	800072c <__swsetup_r+0x30>
 80007b6:	bd70      	pop	{r4, r5, r6, pc}
 80007b8:	0781      	lsls	r1, r0, #30
 80007ba:	bf58      	it	pl
 80007bc:	6963      	ldrpl	r3, [r4, #20]
 80007be:	60a3      	str	r3, [r4, #8]
 80007c0:	e7f4      	b.n	80007ac <__swsetup_r+0xb0>
 80007c2:	2000      	movs	r0, #0
 80007c4:	e7f7      	b.n	80007b6 <__swsetup_r+0xba>
 80007c6:	bf00      	nop
 80007c8:	20000000 	.word	0x20000000
 80007cc:	08001530 	.word	0x08001530
 80007d0:	08001550 	.word	0x08001550
 80007d4:	08001510 	.word	0x08001510

080007d8 <__sflush_r>:
 80007d8:	898a      	ldrh	r2, [r1, #12]
 80007da:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80007de:	4605      	mov	r5, r0
 80007e0:	0710      	lsls	r0, r2, #28
 80007e2:	460c      	mov	r4, r1
 80007e4:	d458      	bmi.n	8000898 <__sflush_r+0xc0>
 80007e6:	684b      	ldr	r3, [r1, #4]
 80007e8:	2b00      	cmp	r3, #0
 80007ea:	dc05      	bgt.n	80007f8 <__sflush_r+0x20>
 80007ec:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80007ee:	2b00      	cmp	r3, #0
 80007f0:	dc02      	bgt.n	80007f8 <__sflush_r+0x20>
 80007f2:	2000      	movs	r0, #0
 80007f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80007f8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80007fa:	2e00      	cmp	r6, #0
 80007fc:	d0f9      	beq.n	80007f2 <__sflush_r+0x1a>
 80007fe:	2300      	movs	r3, #0
 8000800:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000804:	682f      	ldr	r7, [r5, #0]
 8000806:	602b      	str	r3, [r5, #0]
 8000808:	d032      	beq.n	8000870 <__sflush_r+0x98>
 800080a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800080c:	89a3      	ldrh	r3, [r4, #12]
 800080e:	075a      	lsls	r2, r3, #29
 8000810:	d505      	bpl.n	800081e <__sflush_r+0x46>
 8000812:	6863      	ldr	r3, [r4, #4]
 8000814:	1ac0      	subs	r0, r0, r3
 8000816:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000818:	b10b      	cbz	r3, 800081e <__sflush_r+0x46>
 800081a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800081c:	1ac0      	subs	r0, r0, r3
 800081e:	2300      	movs	r3, #0
 8000820:	4602      	mov	r2, r0
 8000822:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000824:	6a21      	ldr	r1, [r4, #32]
 8000826:	4628      	mov	r0, r5
 8000828:	47b0      	blx	r6
 800082a:	1c43      	adds	r3, r0, #1
 800082c:	89a3      	ldrh	r3, [r4, #12]
 800082e:	d106      	bne.n	800083e <__sflush_r+0x66>
 8000830:	6829      	ldr	r1, [r5, #0]
 8000832:	291d      	cmp	r1, #29
 8000834:	d82c      	bhi.n	8000890 <__sflush_r+0xb8>
 8000836:	4a2a      	ldr	r2, [pc, #168]	; (80008e0 <__sflush_r+0x108>)
 8000838:	40ca      	lsrs	r2, r1
 800083a:	07d6      	lsls	r6, r2, #31
 800083c:	d528      	bpl.n	8000890 <__sflush_r+0xb8>
 800083e:	2200      	movs	r2, #0
 8000840:	6062      	str	r2, [r4, #4]
 8000842:	04d9      	lsls	r1, r3, #19
 8000844:	6922      	ldr	r2, [r4, #16]
 8000846:	6022      	str	r2, [r4, #0]
 8000848:	d504      	bpl.n	8000854 <__sflush_r+0x7c>
 800084a:	1c42      	adds	r2, r0, #1
 800084c:	d101      	bne.n	8000852 <__sflush_r+0x7a>
 800084e:	682b      	ldr	r3, [r5, #0]
 8000850:	b903      	cbnz	r3, 8000854 <__sflush_r+0x7c>
 8000852:	6560      	str	r0, [r4, #84]	; 0x54
 8000854:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000856:	602f      	str	r7, [r5, #0]
 8000858:	2900      	cmp	r1, #0
 800085a:	d0ca      	beq.n	80007f2 <__sflush_r+0x1a>
 800085c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000860:	4299      	cmp	r1, r3
 8000862:	d002      	beq.n	800086a <__sflush_r+0x92>
 8000864:	4628      	mov	r0, r5
 8000866:	f000 f9d5 	bl	8000c14 <_free_r>
 800086a:	2000      	movs	r0, #0
 800086c:	6360      	str	r0, [r4, #52]	; 0x34
 800086e:	e7c1      	b.n	80007f4 <__sflush_r+0x1c>
 8000870:	6a21      	ldr	r1, [r4, #32]
 8000872:	2301      	movs	r3, #1
 8000874:	4628      	mov	r0, r5
 8000876:	47b0      	blx	r6
 8000878:	1c41      	adds	r1, r0, #1
 800087a:	d1c7      	bne.n	800080c <__sflush_r+0x34>
 800087c:	682b      	ldr	r3, [r5, #0]
 800087e:	2b00      	cmp	r3, #0
 8000880:	d0c4      	beq.n	800080c <__sflush_r+0x34>
 8000882:	2b1d      	cmp	r3, #29
 8000884:	d001      	beq.n	800088a <__sflush_r+0xb2>
 8000886:	2b16      	cmp	r3, #22
 8000888:	d101      	bne.n	800088e <__sflush_r+0xb6>
 800088a:	602f      	str	r7, [r5, #0]
 800088c:	e7b1      	b.n	80007f2 <__sflush_r+0x1a>
 800088e:	89a3      	ldrh	r3, [r4, #12]
 8000890:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000894:	81a3      	strh	r3, [r4, #12]
 8000896:	e7ad      	b.n	80007f4 <__sflush_r+0x1c>
 8000898:	690f      	ldr	r7, [r1, #16]
 800089a:	2f00      	cmp	r7, #0
 800089c:	d0a9      	beq.n	80007f2 <__sflush_r+0x1a>
 800089e:	0793      	lsls	r3, r2, #30
 80008a0:	680e      	ldr	r6, [r1, #0]
 80008a2:	bf08      	it	eq
 80008a4:	694b      	ldreq	r3, [r1, #20]
 80008a6:	600f      	str	r7, [r1, #0]
 80008a8:	bf18      	it	ne
 80008aa:	2300      	movne	r3, #0
 80008ac:	eba6 0807 	sub.w	r8, r6, r7
 80008b0:	608b      	str	r3, [r1, #8]
 80008b2:	f1b8 0f00 	cmp.w	r8, #0
 80008b6:	dd9c      	ble.n	80007f2 <__sflush_r+0x1a>
 80008b8:	6a21      	ldr	r1, [r4, #32]
 80008ba:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80008bc:	4643      	mov	r3, r8
 80008be:	463a      	mov	r2, r7
 80008c0:	4628      	mov	r0, r5
 80008c2:	47b0      	blx	r6
 80008c4:	2800      	cmp	r0, #0
 80008c6:	dc06      	bgt.n	80008d6 <__sflush_r+0xfe>
 80008c8:	89a3      	ldrh	r3, [r4, #12]
 80008ca:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80008ce:	81a3      	strh	r3, [r4, #12]
 80008d0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80008d4:	e78e      	b.n	80007f4 <__sflush_r+0x1c>
 80008d6:	4407      	add	r7, r0
 80008d8:	eba8 0800 	sub.w	r8, r8, r0
 80008dc:	e7e9      	b.n	80008b2 <__sflush_r+0xda>
 80008de:	bf00      	nop
 80008e0:	20400001 	.word	0x20400001

080008e4 <_fflush_r>:
 80008e4:	b538      	push	{r3, r4, r5, lr}
 80008e6:	690b      	ldr	r3, [r1, #16]
 80008e8:	4605      	mov	r5, r0
 80008ea:	460c      	mov	r4, r1
 80008ec:	b913      	cbnz	r3, 80008f4 <_fflush_r+0x10>
 80008ee:	2500      	movs	r5, #0
 80008f0:	4628      	mov	r0, r5
 80008f2:	bd38      	pop	{r3, r4, r5, pc}
 80008f4:	b118      	cbz	r0, 80008fe <_fflush_r+0x1a>
 80008f6:	6983      	ldr	r3, [r0, #24]
 80008f8:	b90b      	cbnz	r3, 80008fe <_fflush_r+0x1a>
 80008fa:	f000 f887 	bl	8000a0c <__sinit>
 80008fe:	4b14      	ldr	r3, [pc, #80]	; (8000950 <_fflush_r+0x6c>)
 8000900:	429c      	cmp	r4, r3
 8000902:	d11b      	bne.n	800093c <_fflush_r+0x58>
 8000904:	686c      	ldr	r4, [r5, #4]
 8000906:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800090a:	2b00      	cmp	r3, #0
 800090c:	d0ef      	beq.n	80008ee <_fflush_r+0xa>
 800090e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000910:	07d0      	lsls	r0, r2, #31
 8000912:	d404      	bmi.n	800091e <_fflush_r+0x3a>
 8000914:	0599      	lsls	r1, r3, #22
 8000916:	d402      	bmi.n	800091e <_fflush_r+0x3a>
 8000918:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800091a:	f000 f915 	bl	8000b48 <__retarget_lock_acquire_recursive>
 800091e:	4628      	mov	r0, r5
 8000920:	4621      	mov	r1, r4
 8000922:	f7ff ff59 	bl	80007d8 <__sflush_r>
 8000926:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000928:	07da      	lsls	r2, r3, #31
 800092a:	4605      	mov	r5, r0
 800092c:	d4e0      	bmi.n	80008f0 <_fflush_r+0xc>
 800092e:	89a3      	ldrh	r3, [r4, #12]
 8000930:	059b      	lsls	r3, r3, #22
 8000932:	d4dd      	bmi.n	80008f0 <_fflush_r+0xc>
 8000934:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000936:	f000 f908 	bl	8000b4a <__retarget_lock_release_recursive>
 800093a:	e7d9      	b.n	80008f0 <_fflush_r+0xc>
 800093c:	4b05      	ldr	r3, [pc, #20]	; (8000954 <_fflush_r+0x70>)
 800093e:	429c      	cmp	r4, r3
 8000940:	d101      	bne.n	8000946 <_fflush_r+0x62>
 8000942:	68ac      	ldr	r4, [r5, #8]
 8000944:	e7df      	b.n	8000906 <_fflush_r+0x22>
 8000946:	4b04      	ldr	r3, [pc, #16]	; (8000958 <_fflush_r+0x74>)
 8000948:	429c      	cmp	r4, r3
 800094a:	bf08      	it	eq
 800094c:	68ec      	ldreq	r4, [r5, #12]
 800094e:	e7da      	b.n	8000906 <_fflush_r+0x22>
 8000950:	08001530 	.word	0x08001530
 8000954:	08001550 	.word	0x08001550
 8000958:	08001510 	.word	0x08001510

0800095c <std>:
 800095c:	2300      	movs	r3, #0
 800095e:	b510      	push	{r4, lr}
 8000960:	4604      	mov	r4, r0
 8000962:	e9c0 3300 	strd	r3, r3, [r0]
 8000966:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800096a:	6083      	str	r3, [r0, #8]
 800096c:	8181      	strh	r1, [r0, #12]
 800096e:	6643      	str	r3, [r0, #100]	; 0x64
 8000970:	81c2      	strh	r2, [r0, #14]
 8000972:	6183      	str	r3, [r0, #24]
 8000974:	4619      	mov	r1, r3
 8000976:	2208      	movs	r2, #8
 8000978:	305c      	adds	r0, #92	; 0x5c
 800097a:	f7ff fdd7 	bl	800052c <memset>
 800097e:	4b05      	ldr	r3, [pc, #20]	; (8000994 <std+0x38>)
 8000980:	6263      	str	r3, [r4, #36]	; 0x24
 8000982:	4b05      	ldr	r3, [pc, #20]	; (8000998 <std+0x3c>)
 8000984:	62a3      	str	r3, [r4, #40]	; 0x28
 8000986:	4b05      	ldr	r3, [pc, #20]	; (800099c <std+0x40>)
 8000988:	62e3      	str	r3, [r4, #44]	; 0x2c
 800098a:	4b05      	ldr	r3, [pc, #20]	; (80009a0 <std+0x44>)
 800098c:	6224      	str	r4, [r4, #32]
 800098e:	6323      	str	r3, [r4, #48]	; 0x30
 8000990:	bd10      	pop	{r4, pc}
 8000992:	bf00      	nop
 8000994:	08001365 	.word	0x08001365
 8000998:	08001387 	.word	0x08001387
 800099c:	080013bf 	.word	0x080013bf
 80009a0:	080013e3 	.word	0x080013e3

080009a4 <_cleanup_r>:
 80009a4:	4901      	ldr	r1, [pc, #4]	; (80009ac <_cleanup_r+0x8>)
 80009a6:	f000 b8af 	b.w	8000b08 <_fwalk_reent>
 80009aa:	bf00      	nop
 80009ac:	080008e5 	.word	0x080008e5

080009b0 <__sfmoreglue>:
 80009b0:	b570      	push	{r4, r5, r6, lr}
 80009b2:	1e4a      	subs	r2, r1, #1
 80009b4:	2568      	movs	r5, #104	; 0x68
 80009b6:	4355      	muls	r5, r2
 80009b8:	460e      	mov	r6, r1
 80009ba:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80009be:	f000 f979 	bl	8000cb4 <_malloc_r>
 80009c2:	4604      	mov	r4, r0
 80009c4:	b140      	cbz	r0, 80009d8 <__sfmoreglue+0x28>
 80009c6:	2100      	movs	r1, #0
 80009c8:	e9c0 1600 	strd	r1, r6, [r0]
 80009cc:	300c      	adds	r0, #12
 80009ce:	60a0      	str	r0, [r4, #8]
 80009d0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80009d4:	f7ff fdaa 	bl	800052c <memset>
 80009d8:	4620      	mov	r0, r4
 80009da:	bd70      	pop	{r4, r5, r6, pc}

080009dc <__sfp_lock_acquire>:
 80009dc:	4801      	ldr	r0, [pc, #4]	; (80009e4 <__sfp_lock_acquire+0x8>)
 80009de:	f000 b8b3 	b.w	8000b48 <__retarget_lock_acquire_recursive>
 80009e2:	bf00      	nop
 80009e4:	20000094 	.word	0x20000094

080009e8 <__sfp_lock_release>:
 80009e8:	4801      	ldr	r0, [pc, #4]	; (80009f0 <__sfp_lock_release+0x8>)
 80009ea:	f000 b8ae 	b.w	8000b4a <__retarget_lock_release_recursive>
 80009ee:	bf00      	nop
 80009f0:	20000094 	.word	0x20000094

080009f4 <__sinit_lock_acquire>:
 80009f4:	4801      	ldr	r0, [pc, #4]	; (80009fc <__sinit_lock_acquire+0x8>)
 80009f6:	f000 b8a7 	b.w	8000b48 <__retarget_lock_acquire_recursive>
 80009fa:	bf00      	nop
 80009fc:	2000008f 	.word	0x2000008f

08000a00 <__sinit_lock_release>:
 8000a00:	4801      	ldr	r0, [pc, #4]	; (8000a08 <__sinit_lock_release+0x8>)
 8000a02:	f000 b8a2 	b.w	8000b4a <__retarget_lock_release_recursive>
 8000a06:	bf00      	nop
 8000a08:	2000008f 	.word	0x2000008f

08000a0c <__sinit>:
 8000a0c:	b510      	push	{r4, lr}
 8000a0e:	4604      	mov	r4, r0
 8000a10:	f7ff fff0 	bl	80009f4 <__sinit_lock_acquire>
 8000a14:	69a3      	ldr	r3, [r4, #24]
 8000a16:	b11b      	cbz	r3, 8000a20 <__sinit+0x14>
 8000a18:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000a1c:	f7ff bff0 	b.w	8000a00 <__sinit_lock_release>
 8000a20:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000a24:	6523      	str	r3, [r4, #80]	; 0x50
 8000a26:	4b13      	ldr	r3, [pc, #76]	; (8000a74 <__sinit+0x68>)
 8000a28:	4a13      	ldr	r2, [pc, #76]	; (8000a78 <__sinit+0x6c>)
 8000a2a:	681b      	ldr	r3, [r3, #0]
 8000a2c:	62a2      	str	r2, [r4, #40]	; 0x28
 8000a2e:	42a3      	cmp	r3, r4
 8000a30:	bf04      	itt	eq
 8000a32:	2301      	moveq	r3, #1
 8000a34:	61a3      	streq	r3, [r4, #24]
 8000a36:	4620      	mov	r0, r4
 8000a38:	f000 f820 	bl	8000a7c <__sfp>
 8000a3c:	6060      	str	r0, [r4, #4]
 8000a3e:	4620      	mov	r0, r4
 8000a40:	f000 f81c 	bl	8000a7c <__sfp>
 8000a44:	60a0      	str	r0, [r4, #8]
 8000a46:	4620      	mov	r0, r4
 8000a48:	f000 f818 	bl	8000a7c <__sfp>
 8000a4c:	2200      	movs	r2, #0
 8000a4e:	60e0      	str	r0, [r4, #12]
 8000a50:	2104      	movs	r1, #4
 8000a52:	6860      	ldr	r0, [r4, #4]
 8000a54:	f7ff ff82 	bl	800095c <std>
 8000a58:	68a0      	ldr	r0, [r4, #8]
 8000a5a:	2201      	movs	r2, #1
 8000a5c:	2109      	movs	r1, #9
 8000a5e:	f7ff ff7d 	bl	800095c <std>
 8000a62:	68e0      	ldr	r0, [r4, #12]
 8000a64:	2202      	movs	r2, #2
 8000a66:	2112      	movs	r1, #18
 8000a68:	f7ff ff78 	bl	800095c <std>
 8000a6c:	2301      	movs	r3, #1
 8000a6e:	61a3      	str	r3, [r4, #24]
 8000a70:	e7d2      	b.n	8000a18 <__sinit+0xc>
 8000a72:	bf00      	nop
 8000a74:	0800150c 	.word	0x0800150c
 8000a78:	080009a5 	.word	0x080009a5

08000a7c <__sfp>:
 8000a7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a7e:	4607      	mov	r7, r0
 8000a80:	f7ff ffac 	bl	80009dc <__sfp_lock_acquire>
 8000a84:	4b1e      	ldr	r3, [pc, #120]	; (8000b00 <__sfp+0x84>)
 8000a86:	681e      	ldr	r6, [r3, #0]
 8000a88:	69b3      	ldr	r3, [r6, #24]
 8000a8a:	b913      	cbnz	r3, 8000a92 <__sfp+0x16>
 8000a8c:	4630      	mov	r0, r6
 8000a8e:	f7ff ffbd 	bl	8000a0c <__sinit>
 8000a92:	3648      	adds	r6, #72	; 0x48
 8000a94:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000a98:	3b01      	subs	r3, #1
 8000a9a:	d503      	bpl.n	8000aa4 <__sfp+0x28>
 8000a9c:	6833      	ldr	r3, [r6, #0]
 8000a9e:	b30b      	cbz	r3, 8000ae4 <__sfp+0x68>
 8000aa0:	6836      	ldr	r6, [r6, #0]
 8000aa2:	e7f7      	b.n	8000a94 <__sfp+0x18>
 8000aa4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000aa8:	b9d5      	cbnz	r5, 8000ae0 <__sfp+0x64>
 8000aaa:	4b16      	ldr	r3, [pc, #88]	; (8000b04 <__sfp+0x88>)
 8000aac:	60e3      	str	r3, [r4, #12]
 8000aae:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000ab2:	6665      	str	r5, [r4, #100]	; 0x64
 8000ab4:	f000 f847 	bl	8000b46 <__retarget_lock_init_recursive>
 8000ab8:	f7ff ff96 	bl	80009e8 <__sfp_lock_release>
 8000abc:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000ac0:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000ac4:	6025      	str	r5, [r4, #0]
 8000ac6:	61a5      	str	r5, [r4, #24]
 8000ac8:	2208      	movs	r2, #8
 8000aca:	4629      	mov	r1, r5
 8000acc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000ad0:	f7ff fd2c 	bl	800052c <memset>
 8000ad4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000ad8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000adc:	4620      	mov	r0, r4
 8000ade:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000ae0:	3468      	adds	r4, #104	; 0x68
 8000ae2:	e7d9      	b.n	8000a98 <__sfp+0x1c>
 8000ae4:	2104      	movs	r1, #4
 8000ae6:	4638      	mov	r0, r7
 8000ae8:	f7ff ff62 	bl	80009b0 <__sfmoreglue>
 8000aec:	4604      	mov	r4, r0
 8000aee:	6030      	str	r0, [r6, #0]
 8000af0:	2800      	cmp	r0, #0
 8000af2:	d1d5      	bne.n	8000aa0 <__sfp+0x24>
 8000af4:	f7ff ff78 	bl	80009e8 <__sfp_lock_release>
 8000af8:	230c      	movs	r3, #12
 8000afa:	603b      	str	r3, [r7, #0]
 8000afc:	e7ee      	b.n	8000adc <__sfp+0x60>
 8000afe:	bf00      	nop
 8000b00:	0800150c 	.word	0x0800150c
 8000b04:	ffff0001 	.word	0xffff0001

08000b08 <_fwalk_reent>:
 8000b08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b0c:	4606      	mov	r6, r0
 8000b0e:	4688      	mov	r8, r1
 8000b10:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000b14:	2700      	movs	r7, #0
 8000b16:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000b1a:	f1b9 0901 	subs.w	r9, r9, #1
 8000b1e:	d505      	bpl.n	8000b2c <_fwalk_reent+0x24>
 8000b20:	6824      	ldr	r4, [r4, #0]
 8000b22:	2c00      	cmp	r4, #0
 8000b24:	d1f7      	bne.n	8000b16 <_fwalk_reent+0xe>
 8000b26:	4638      	mov	r0, r7
 8000b28:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b2c:	89ab      	ldrh	r3, [r5, #12]
 8000b2e:	2b01      	cmp	r3, #1
 8000b30:	d907      	bls.n	8000b42 <_fwalk_reent+0x3a>
 8000b32:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000b36:	3301      	adds	r3, #1
 8000b38:	d003      	beq.n	8000b42 <_fwalk_reent+0x3a>
 8000b3a:	4629      	mov	r1, r5
 8000b3c:	4630      	mov	r0, r6
 8000b3e:	47c0      	blx	r8
 8000b40:	4307      	orrs	r7, r0
 8000b42:	3568      	adds	r5, #104	; 0x68
 8000b44:	e7e9      	b.n	8000b1a <_fwalk_reent+0x12>

08000b46 <__retarget_lock_init_recursive>:
 8000b46:	4770      	bx	lr

08000b48 <__retarget_lock_acquire_recursive>:
 8000b48:	4770      	bx	lr

08000b4a <__retarget_lock_release_recursive>:
 8000b4a:	4770      	bx	lr

08000b4c <__swhatbuf_r>:
 8000b4c:	b570      	push	{r4, r5, r6, lr}
 8000b4e:	460e      	mov	r6, r1
 8000b50:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000b54:	2900      	cmp	r1, #0
 8000b56:	b096      	sub	sp, #88	; 0x58
 8000b58:	4614      	mov	r4, r2
 8000b5a:	461d      	mov	r5, r3
 8000b5c:	da07      	bge.n	8000b6e <__swhatbuf_r+0x22>
 8000b5e:	2300      	movs	r3, #0
 8000b60:	602b      	str	r3, [r5, #0]
 8000b62:	89b3      	ldrh	r3, [r6, #12]
 8000b64:	061a      	lsls	r2, r3, #24
 8000b66:	d410      	bmi.n	8000b8a <__swhatbuf_r+0x3e>
 8000b68:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000b6c:	e00e      	b.n	8000b8c <__swhatbuf_r+0x40>
 8000b6e:	466a      	mov	r2, sp
 8000b70:	f000 fc5e 	bl	8001430 <_fstat_r>
 8000b74:	2800      	cmp	r0, #0
 8000b76:	dbf2      	blt.n	8000b5e <__swhatbuf_r+0x12>
 8000b78:	9a01      	ldr	r2, [sp, #4]
 8000b7a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000b7e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000b82:	425a      	negs	r2, r3
 8000b84:	415a      	adcs	r2, r3
 8000b86:	602a      	str	r2, [r5, #0]
 8000b88:	e7ee      	b.n	8000b68 <__swhatbuf_r+0x1c>
 8000b8a:	2340      	movs	r3, #64	; 0x40
 8000b8c:	2000      	movs	r0, #0
 8000b8e:	6023      	str	r3, [r4, #0]
 8000b90:	b016      	add	sp, #88	; 0x58
 8000b92:	bd70      	pop	{r4, r5, r6, pc}

08000b94 <__smakebuf_r>:
 8000b94:	898b      	ldrh	r3, [r1, #12]
 8000b96:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000b98:	079d      	lsls	r5, r3, #30
 8000b9a:	4606      	mov	r6, r0
 8000b9c:	460c      	mov	r4, r1
 8000b9e:	d507      	bpl.n	8000bb0 <__smakebuf_r+0x1c>
 8000ba0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000ba4:	6023      	str	r3, [r4, #0]
 8000ba6:	6123      	str	r3, [r4, #16]
 8000ba8:	2301      	movs	r3, #1
 8000baa:	6163      	str	r3, [r4, #20]
 8000bac:	b002      	add	sp, #8
 8000bae:	bd70      	pop	{r4, r5, r6, pc}
 8000bb0:	ab01      	add	r3, sp, #4
 8000bb2:	466a      	mov	r2, sp
 8000bb4:	f7ff ffca 	bl	8000b4c <__swhatbuf_r>
 8000bb8:	9900      	ldr	r1, [sp, #0]
 8000bba:	4605      	mov	r5, r0
 8000bbc:	4630      	mov	r0, r6
 8000bbe:	f000 f879 	bl	8000cb4 <_malloc_r>
 8000bc2:	b948      	cbnz	r0, 8000bd8 <__smakebuf_r+0x44>
 8000bc4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000bc8:	059a      	lsls	r2, r3, #22
 8000bca:	d4ef      	bmi.n	8000bac <__smakebuf_r+0x18>
 8000bcc:	f023 0303 	bic.w	r3, r3, #3
 8000bd0:	f043 0302 	orr.w	r3, r3, #2
 8000bd4:	81a3      	strh	r3, [r4, #12]
 8000bd6:	e7e3      	b.n	8000ba0 <__smakebuf_r+0xc>
 8000bd8:	4b0d      	ldr	r3, [pc, #52]	; (8000c10 <__smakebuf_r+0x7c>)
 8000bda:	62b3      	str	r3, [r6, #40]	; 0x28
 8000bdc:	89a3      	ldrh	r3, [r4, #12]
 8000bde:	6020      	str	r0, [r4, #0]
 8000be0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000be4:	81a3      	strh	r3, [r4, #12]
 8000be6:	9b00      	ldr	r3, [sp, #0]
 8000be8:	6163      	str	r3, [r4, #20]
 8000bea:	9b01      	ldr	r3, [sp, #4]
 8000bec:	6120      	str	r0, [r4, #16]
 8000bee:	b15b      	cbz	r3, 8000c08 <__smakebuf_r+0x74>
 8000bf0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000bf4:	4630      	mov	r0, r6
 8000bf6:	f000 fc2d 	bl	8001454 <_isatty_r>
 8000bfa:	b128      	cbz	r0, 8000c08 <__smakebuf_r+0x74>
 8000bfc:	89a3      	ldrh	r3, [r4, #12]
 8000bfe:	f023 0303 	bic.w	r3, r3, #3
 8000c02:	f043 0301 	orr.w	r3, r3, #1
 8000c06:	81a3      	strh	r3, [r4, #12]
 8000c08:	89a0      	ldrh	r0, [r4, #12]
 8000c0a:	4305      	orrs	r5, r0
 8000c0c:	81a5      	strh	r5, [r4, #12]
 8000c0e:	e7cd      	b.n	8000bac <__smakebuf_r+0x18>
 8000c10:	080009a5 	.word	0x080009a5

08000c14 <_free_r>:
 8000c14:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000c16:	2900      	cmp	r1, #0
 8000c18:	d048      	beq.n	8000cac <_free_r+0x98>
 8000c1a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000c1e:	9001      	str	r0, [sp, #4]
 8000c20:	2b00      	cmp	r3, #0
 8000c22:	f1a1 0404 	sub.w	r4, r1, #4
 8000c26:	bfb8      	it	lt
 8000c28:	18e4      	addlt	r4, r4, r3
 8000c2a:	f000 fc35 	bl	8001498 <__malloc_lock>
 8000c2e:	4a20      	ldr	r2, [pc, #128]	; (8000cb0 <_free_r+0x9c>)
 8000c30:	9801      	ldr	r0, [sp, #4]
 8000c32:	6813      	ldr	r3, [r2, #0]
 8000c34:	4615      	mov	r5, r2
 8000c36:	b933      	cbnz	r3, 8000c46 <_free_r+0x32>
 8000c38:	6063      	str	r3, [r4, #4]
 8000c3a:	6014      	str	r4, [r2, #0]
 8000c3c:	b003      	add	sp, #12
 8000c3e:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000c42:	f000 bc2f 	b.w	80014a4 <__malloc_unlock>
 8000c46:	42a3      	cmp	r3, r4
 8000c48:	d90b      	bls.n	8000c62 <_free_r+0x4e>
 8000c4a:	6821      	ldr	r1, [r4, #0]
 8000c4c:	1862      	adds	r2, r4, r1
 8000c4e:	4293      	cmp	r3, r2
 8000c50:	bf04      	itt	eq
 8000c52:	681a      	ldreq	r2, [r3, #0]
 8000c54:	685b      	ldreq	r3, [r3, #4]
 8000c56:	6063      	str	r3, [r4, #4]
 8000c58:	bf04      	itt	eq
 8000c5a:	1852      	addeq	r2, r2, r1
 8000c5c:	6022      	streq	r2, [r4, #0]
 8000c5e:	602c      	str	r4, [r5, #0]
 8000c60:	e7ec      	b.n	8000c3c <_free_r+0x28>
 8000c62:	461a      	mov	r2, r3
 8000c64:	685b      	ldr	r3, [r3, #4]
 8000c66:	b10b      	cbz	r3, 8000c6c <_free_r+0x58>
 8000c68:	42a3      	cmp	r3, r4
 8000c6a:	d9fa      	bls.n	8000c62 <_free_r+0x4e>
 8000c6c:	6811      	ldr	r1, [r2, #0]
 8000c6e:	1855      	adds	r5, r2, r1
 8000c70:	42a5      	cmp	r5, r4
 8000c72:	d10b      	bne.n	8000c8c <_free_r+0x78>
 8000c74:	6824      	ldr	r4, [r4, #0]
 8000c76:	4421      	add	r1, r4
 8000c78:	1854      	adds	r4, r2, r1
 8000c7a:	42a3      	cmp	r3, r4
 8000c7c:	6011      	str	r1, [r2, #0]
 8000c7e:	d1dd      	bne.n	8000c3c <_free_r+0x28>
 8000c80:	681c      	ldr	r4, [r3, #0]
 8000c82:	685b      	ldr	r3, [r3, #4]
 8000c84:	6053      	str	r3, [r2, #4]
 8000c86:	4421      	add	r1, r4
 8000c88:	6011      	str	r1, [r2, #0]
 8000c8a:	e7d7      	b.n	8000c3c <_free_r+0x28>
 8000c8c:	d902      	bls.n	8000c94 <_free_r+0x80>
 8000c8e:	230c      	movs	r3, #12
 8000c90:	6003      	str	r3, [r0, #0]
 8000c92:	e7d3      	b.n	8000c3c <_free_r+0x28>
 8000c94:	6825      	ldr	r5, [r4, #0]
 8000c96:	1961      	adds	r1, r4, r5
 8000c98:	428b      	cmp	r3, r1
 8000c9a:	bf04      	itt	eq
 8000c9c:	6819      	ldreq	r1, [r3, #0]
 8000c9e:	685b      	ldreq	r3, [r3, #4]
 8000ca0:	6063      	str	r3, [r4, #4]
 8000ca2:	bf04      	itt	eq
 8000ca4:	1949      	addeq	r1, r1, r5
 8000ca6:	6021      	streq	r1, [r4, #0]
 8000ca8:	6054      	str	r4, [r2, #4]
 8000caa:	e7c7      	b.n	8000c3c <_free_r+0x28>
 8000cac:	b003      	add	sp, #12
 8000cae:	bd30      	pop	{r4, r5, pc}
 8000cb0:	20000084 	.word	0x20000084

08000cb4 <_malloc_r>:
 8000cb4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cb6:	1ccd      	adds	r5, r1, #3
 8000cb8:	f025 0503 	bic.w	r5, r5, #3
 8000cbc:	3508      	adds	r5, #8
 8000cbe:	2d0c      	cmp	r5, #12
 8000cc0:	bf38      	it	cc
 8000cc2:	250c      	movcc	r5, #12
 8000cc4:	2d00      	cmp	r5, #0
 8000cc6:	4606      	mov	r6, r0
 8000cc8:	db01      	blt.n	8000cce <_malloc_r+0x1a>
 8000cca:	42a9      	cmp	r1, r5
 8000ccc:	d903      	bls.n	8000cd6 <_malloc_r+0x22>
 8000cce:	230c      	movs	r3, #12
 8000cd0:	6033      	str	r3, [r6, #0]
 8000cd2:	2000      	movs	r0, #0
 8000cd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000cd6:	f000 fbdf 	bl	8001498 <__malloc_lock>
 8000cda:	4921      	ldr	r1, [pc, #132]	; (8000d60 <_malloc_r+0xac>)
 8000cdc:	680a      	ldr	r2, [r1, #0]
 8000cde:	4614      	mov	r4, r2
 8000ce0:	b99c      	cbnz	r4, 8000d0a <_malloc_r+0x56>
 8000ce2:	4f20      	ldr	r7, [pc, #128]	; (8000d64 <_malloc_r+0xb0>)
 8000ce4:	683b      	ldr	r3, [r7, #0]
 8000ce6:	b923      	cbnz	r3, 8000cf2 <_malloc_r+0x3e>
 8000ce8:	4621      	mov	r1, r4
 8000cea:	4630      	mov	r0, r6
 8000cec:	f000 fb2a 	bl	8001344 <_sbrk_r>
 8000cf0:	6038      	str	r0, [r7, #0]
 8000cf2:	4629      	mov	r1, r5
 8000cf4:	4630      	mov	r0, r6
 8000cf6:	f000 fb25 	bl	8001344 <_sbrk_r>
 8000cfa:	1c43      	adds	r3, r0, #1
 8000cfc:	d123      	bne.n	8000d46 <_malloc_r+0x92>
 8000cfe:	230c      	movs	r3, #12
 8000d00:	6033      	str	r3, [r6, #0]
 8000d02:	4630      	mov	r0, r6
 8000d04:	f000 fbce 	bl	80014a4 <__malloc_unlock>
 8000d08:	e7e3      	b.n	8000cd2 <_malloc_r+0x1e>
 8000d0a:	6823      	ldr	r3, [r4, #0]
 8000d0c:	1b5b      	subs	r3, r3, r5
 8000d0e:	d417      	bmi.n	8000d40 <_malloc_r+0x8c>
 8000d10:	2b0b      	cmp	r3, #11
 8000d12:	d903      	bls.n	8000d1c <_malloc_r+0x68>
 8000d14:	6023      	str	r3, [r4, #0]
 8000d16:	441c      	add	r4, r3
 8000d18:	6025      	str	r5, [r4, #0]
 8000d1a:	e004      	b.n	8000d26 <_malloc_r+0x72>
 8000d1c:	6863      	ldr	r3, [r4, #4]
 8000d1e:	42a2      	cmp	r2, r4
 8000d20:	bf0c      	ite	eq
 8000d22:	600b      	streq	r3, [r1, #0]
 8000d24:	6053      	strne	r3, [r2, #4]
 8000d26:	4630      	mov	r0, r6
 8000d28:	f000 fbbc 	bl	80014a4 <__malloc_unlock>
 8000d2c:	f104 000b 	add.w	r0, r4, #11
 8000d30:	1d23      	adds	r3, r4, #4
 8000d32:	f020 0007 	bic.w	r0, r0, #7
 8000d36:	1ac2      	subs	r2, r0, r3
 8000d38:	d0cc      	beq.n	8000cd4 <_malloc_r+0x20>
 8000d3a:	1a1b      	subs	r3, r3, r0
 8000d3c:	50a3      	str	r3, [r4, r2]
 8000d3e:	e7c9      	b.n	8000cd4 <_malloc_r+0x20>
 8000d40:	4622      	mov	r2, r4
 8000d42:	6864      	ldr	r4, [r4, #4]
 8000d44:	e7cc      	b.n	8000ce0 <_malloc_r+0x2c>
 8000d46:	1cc4      	adds	r4, r0, #3
 8000d48:	f024 0403 	bic.w	r4, r4, #3
 8000d4c:	42a0      	cmp	r0, r4
 8000d4e:	d0e3      	beq.n	8000d18 <_malloc_r+0x64>
 8000d50:	1a21      	subs	r1, r4, r0
 8000d52:	4630      	mov	r0, r6
 8000d54:	f000 faf6 	bl	8001344 <_sbrk_r>
 8000d58:	3001      	adds	r0, #1
 8000d5a:	d1dd      	bne.n	8000d18 <_malloc_r+0x64>
 8000d5c:	e7cf      	b.n	8000cfe <_malloc_r+0x4a>
 8000d5e:	bf00      	nop
 8000d60:	20000084 	.word	0x20000084
 8000d64:	20000088 	.word	0x20000088

08000d68 <__sfputc_r>:
 8000d68:	6893      	ldr	r3, [r2, #8]
 8000d6a:	3b01      	subs	r3, #1
 8000d6c:	2b00      	cmp	r3, #0
 8000d6e:	b410      	push	{r4}
 8000d70:	6093      	str	r3, [r2, #8]
 8000d72:	da08      	bge.n	8000d86 <__sfputc_r+0x1e>
 8000d74:	6994      	ldr	r4, [r2, #24]
 8000d76:	42a3      	cmp	r3, r4
 8000d78:	db01      	blt.n	8000d7e <__sfputc_r+0x16>
 8000d7a:	290a      	cmp	r1, #10
 8000d7c:	d103      	bne.n	8000d86 <__sfputc_r+0x1e>
 8000d7e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000d82:	f7ff bc69 	b.w	8000658 <__swbuf_r>
 8000d86:	6813      	ldr	r3, [r2, #0]
 8000d88:	1c58      	adds	r0, r3, #1
 8000d8a:	6010      	str	r0, [r2, #0]
 8000d8c:	7019      	strb	r1, [r3, #0]
 8000d8e:	4608      	mov	r0, r1
 8000d90:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000d94:	4770      	bx	lr

08000d96 <__sfputs_r>:
 8000d96:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d98:	4606      	mov	r6, r0
 8000d9a:	460f      	mov	r7, r1
 8000d9c:	4614      	mov	r4, r2
 8000d9e:	18d5      	adds	r5, r2, r3
 8000da0:	42ac      	cmp	r4, r5
 8000da2:	d101      	bne.n	8000da8 <__sfputs_r+0x12>
 8000da4:	2000      	movs	r0, #0
 8000da6:	e007      	b.n	8000db8 <__sfputs_r+0x22>
 8000da8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000dac:	463a      	mov	r2, r7
 8000dae:	4630      	mov	r0, r6
 8000db0:	f7ff ffda 	bl	8000d68 <__sfputc_r>
 8000db4:	1c43      	adds	r3, r0, #1
 8000db6:	d1f3      	bne.n	8000da0 <__sfputs_r+0xa>
 8000db8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000dbc <_vfiprintf_r>:
 8000dbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000dc0:	460d      	mov	r5, r1
 8000dc2:	b09d      	sub	sp, #116	; 0x74
 8000dc4:	4614      	mov	r4, r2
 8000dc6:	4698      	mov	r8, r3
 8000dc8:	4606      	mov	r6, r0
 8000dca:	b118      	cbz	r0, 8000dd4 <_vfiprintf_r+0x18>
 8000dcc:	6983      	ldr	r3, [r0, #24]
 8000dce:	b90b      	cbnz	r3, 8000dd4 <_vfiprintf_r+0x18>
 8000dd0:	f7ff fe1c 	bl	8000a0c <__sinit>
 8000dd4:	4b89      	ldr	r3, [pc, #548]	; (8000ffc <_vfiprintf_r+0x240>)
 8000dd6:	429d      	cmp	r5, r3
 8000dd8:	d11b      	bne.n	8000e12 <_vfiprintf_r+0x56>
 8000dda:	6875      	ldr	r5, [r6, #4]
 8000ddc:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000dde:	07d9      	lsls	r1, r3, #31
 8000de0:	d405      	bmi.n	8000dee <_vfiprintf_r+0x32>
 8000de2:	89ab      	ldrh	r3, [r5, #12]
 8000de4:	059a      	lsls	r2, r3, #22
 8000de6:	d402      	bmi.n	8000dee <_vfiprintf_r+0x32>
 8000de8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000dea:	f7ff fead 	bl	8000b48 <__retarget_lock_acquire_recursive>
 8000dee:	89ab      	ldrh	r3, [r5, #12]
 8000df0:	071b      	lsls	r3, r3, #28
 8000df2:	d501      	bpl.n	8000df8 <_vfiprintf_r+0x3c>
 8000df4:	692b      	ldr	r3, [r5, #16]
 8000df6:	b9eb      	cbnz	r3, 8000e34 <_vfiprintf_r+0x78>
 8000df8:	4629      	mov	r1, r5
 8000dfa:	4630      	mov	r0, r6
 8000dfc:	f7ff fc7e 	bl	80006fc <__swsetup_r>
 8000e00:	b1c0      	cbz	r0, 8000e34 <_vfiprintf_r+0x78>
 8000e02:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000e04:	07dc      	lsls	r4, r3, #31
 8000e06:	d50e      	bpl.n	8000e26 <_vfiprintf_r+0x6a>
 8000e08:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000e0c:	b01d      	add	sp, #116	; 0x74
 8000e0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000e12:	4b7b      	ldr	r3, [pc, #492]	; (8001000 <_vfiprintf_r+0x244>)
 8000e14:	429d      	cmp	r5, r3
 8000e16:	d101      	bne.n	8000e1c <_vfiprintf_r+0x60>
 8000e18:	68b5      	ldr	r5, [r6, #8]
 8000e1a:	e7df      	b.n	8000ddc <_vfiprintf_r+0x20>
 8000e1c:	4b79      	ldr	r3, [pc, #484]	; (8001004 <_vfiprintf_r+0x248>)
 8000e1e:	429d      	cmp	r5, r3
 8000e20:	bf08      	it	eq
 8000e22:	68f5      	ldreq	r5, [r6, #12]
 8000e24:	e7da      	b.n	8000ddc <_vfiprintf_r+0x20>
 8000e26:	89ab      	ldrh	r3, [r5, #12]
 8000e28:	0598      	lsls	r0, r3, #22
 8000e2a:	d4ed      	bmi.n	8000e08 <_vfiprintf_r+0x4c>
 8000e2c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000e2e:	f7ff fe8c 	bl	8000b4a <__retarget_lock_release_recursive>
 8000e32:	e7e9      	b.n	8000e08 <_vfiprintf_r+0x4c>
 8000e34:	2300      	movs	r3, #0
 8000e36:	9309      	str	r3, [sp, #36]	; 0x24
 8000e38:	2320      	movs	r3, #32
 8000e3a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000e3e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000e42:	2330      	movs	r3, #48	; 0x30
 8000e44:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8001008 <_vfiprintf_r+0x24c>
 8000e48:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000e4c:	f04f 0901 	mov.w	r9, #1
 8000e50:	4623      	mov	r3, r4
 8000e52:	469a      	mov	sl, r3
 8000e54:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000e58:	b10a      	cbz	r2, 8000e5e <_vfiprintf_r+0xa2>
 8000e5a:	2a25      	cmp	r2, #37	; 0x25
 8000e5c:	d1f9      	bne.n	8000e52 <_vfiprintf_r+0x96>
 8000e5e:	ebba 0b04 	subs.w	fp, sl, r4
 8000e62:	d00b      	beq.n	8000e7c <_vfiprintf_r+0xc0>
 8000e64:	465b      	mov	r3, fp
 8000e66:	4622      	mov	r2, r4
 8000e68:	4629      	mov	r1, r5
 8000e6a:	4630      	mov	r0, r6
 8000e6c:	f7ff ff93 	bl	8000d96 <__sfputs_r>
 8000e70:	3001      	adds	r0, #1
 8000e72:	f000 80aa 	beq.w	8000fca <_vfiprintf_r+0x20e>
 8000e76:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000e78:	445a      	add	r2, fp
 8000e7a:	9209      	str	r2, [sp, #36]	; 0x24
 8000e7c:	f89a 3000 	ldrb.w	r3, [sl]
 8000e80:	2b00      	cmp	r3, #0
 8000e82:	f000 80a2 	beq.w	8000fca <_vfiprintf_r+0x20e>
 8000e86:	2300      	movs	r3, #0
 8000e88:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000e8c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000e90:	f10a 0a01 	add.w	sl, sl, #1
 8000e94:	9304      	str	r3, [sp, #16]
 8000e96:	9307      	str	r3, [sp, #28]
 8000e98:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000e9c:	931a      	str	r3, [sp, #104]	; 0x68
 8000e9e:	4654      	mov	r4, sl
 8000ea0:	2205      	movs	r2, #5
 8000ea2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ea6:	4858      	ldr	r0, [pc, #352]	; (8001008 <_vfiprintf_r+0x24c>)
 8000ea8:	f7ff f9b2 	bl	8000210 <memchr>
 8000eac:	9a04      	ldr	r2, [sp, #16]
 8000eae:	b9d8      	cbnz	r0, 8000ee8 <_vfiprintf_r+0x12c>
 8000eb0:	06d1      	lsls	r1, r2, #27
 8000eb2:	bf44      	itt	mi
 8000eb4:	2320      	movmi	r3, #32
 8000eb6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000eba:	0713      	lsls	r3, r2, #28
 8000ebc:	bf44      	itt	mi
 8000ebe:	232b      	movmi	r3, #43	; 0x2b
 8000ec0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000ec4:	f89a 3000 	ldrb.w	r3, [sl]
 8000ec8:	2b2a      	cmp	r3, #42	; 0x2a
 8000eca:	d015      	beq.n	8000ef8 <_vfiprintf_r+0x13c>
 8000ecc:	9a07      	ldr	r2, [sp, #28]
 8000ece:	4654      	mov	r4, sl
 8000ed0:	2000      	movs	r0, #0
 8000ed2:	f04f 0c0a 	mov.w	ip, #10
 8000ed6:	4621      	mov	r1, r4
 8000ed8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000edc:	3b30      	subs	r3, #48	; 0x30
 8000ede:	2b09      	cmp	r3, #9
 8000ee0:	d94e      	bls.n	8000f80 <_vfiprintf_r+0x1c4>
 8000ee2:	b1b0      	cbz	r0, 8000f12 <_vfiprintf_r+0x156>
 8000ee4:	9207      	str	r2, [sp, #28]
 8000ee6:	e014      	b.n	8000f12 <_vfiprintf_r+0x156>
 8000ee8:	eba0 0308 	sub.w	r3, r0, r8
 8000eec:	fa09 f303 	lsl.w	r3, r9, r3
 8000ef0:	4313      	orrs	r3, r2
 8000ef2:	9304      	str	r3, [sp, #16]
 8000ef4:	46a2      	mov	sl, r4
 8000ef6:	e7d2      	b.n	8000e9e <_vfiprintf_r+0xe2>
 8000ef8:	9b03      	ldr	r3, [sp, #12]
 8000efa:	1d19      	adds	r1, r3, #4
 8000efc:	681b      	ldr	r3, [r3, #0]
 8000efe:	9103      	str	r1, [sp, #12]
 8000f00:	2b00      	cmp	r3, #0
 8000f02:	bfbb      	ittet	lt
 8000f04:	425b      	neglt	r3, r3
 8000f06:	f042 0202 	orrlt.w	r2, r2, #2
 8000f0a:	9307      	strge	r3, [sp, #28]
 8000f0c:	9307      	strlt	r3, [sp, #28]
 8000f0e:	bfb8      	it	lt
 8000f10:	9204      	strlt	r2, [sp, #16]
 8000f12:	7823      	ldrb	r3, [r4, #0]
 8000f14:	2b2e      	cmp	r3, #46	; 0x2e
 8000f16:	d10c      	bne.n	8000f32 <_vfiprintf_r+0x176>
 8000f18:	7863      	ldrb	r3, [r4, #1]
 8000f1a:	2b2a      	cmp	r3, #42	; 0x2a
 8000f1c:	d135      	bne.n	8000f8a <_vfiprintf_r+0x1ce>
 8000f1e:	9b03      	ldr	r3, [sp, #12]
 8000f20:	1d1a      	adds	r2, r3, #4
 8000f22:	681b      	ldr	r3, [r3, #0]
 8000f24:	9203      	str	r2, [sp, #12]
 8000f26:	2b00      	cmp	r3, #0
 8000f28:	bfb8      	it	lt
 8000f2a:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000f2e:	3402      	adds	r4, #2
 8000f30:	9305      	str	r3, [sp, #20]
 8000f32:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8001018 <_vfiprintf_r+0x25c>
 8000f36:	7821      	ldrb	r1, [r4, #0]
 8000f38:	2203      	movs	r2, #3
 8000f3a:	4650      	mov	r0, sl
 8000f3c:	f7ff f968 	bl	8000210 <memchr>
 8000f40:	b140      	cbz	r0, 8000f54 <_vfiprintf_r+0x198>
 8000f42:	2340      	movs	r3, #64	; 0x40
 8000f44:	eba0 000a 	sub.w	r0, r0, sl
 8000f48:	fa03 f000 	lsl.w	r0, r3, r0
 8000f4c:	9b04      	ldr	r3, [sp, #16]
 8000f4e:	4303      	orrs	r3, r0
 8000f50:	3401      	adds	r4, #1
 8000f52:	9304      	str	r3, [sp, #16]
 8000f54:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000f58:	482c      	ldr	r0, [pc, #176]	; (800100c <_vfiprintf_r+0x250>)
 8000f5a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000f5e:	2206      	movs	r2, #6
 8000f60:	f7ff f956 	bl	8000210 <memchr>
 8000f64:	2800      	cmp	r0, #0
 8000f66:	d03f      	beq.n	8000fe8 <_vfiprintf_r+0x22c>
 8000f68:	4b29      	ldr	r3, [pc, #164]	; (8001010 <_vfiprintf_r+0x254>)
 8000f6a:	bb1b      	cbnz	r3, 8000fb4 <_vfiprintf_r+0x1f8>
 8000f6c:	9b03      	ldr	r3, [sp, #12]
 8000f6e:	3307      	adds	r3, #7
 8000f70:	f023 0307 	bic.w	r3, r3, #7
 8000f74:	3308      	adds	r3, #8
 8000f76:	9303      	str	r3, [sp, #12]
 8000f78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000f7a:	443b      	add	r3, r7
 8000f7c:	9309      	str	r3, [sp, #36]	; 0x24
 8000f7e:	e767      	b.n	8000e50 <_vfiprintf_r+0x94>
 8000f80:	fb0c 3202 	mla	r2, ip, r2, r3
 8000f84:	460c      	mov	r4, r1
 8000f86:	2001      	movs	r0, #1
 8000f88:	e7a5      	b.n	8000ed6 <_vfiprintf_r+0x11a>
 8000f8a:	2300      	movs	r3, #0
 8000f8c:	3401      	adds	r4, #1
 8000f8e:	9305      	str	r3, [sp, #20]
 8000f90:	4619      	mov	r1, r3
 8000f92:	f04f 0c0a 	mov.w	ip, #10
 8000f96:	4620      	mov	r0, r4
 8000f98:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000f9c:	3a30      	subs	r2, #48	; 0x30
 8000f9e:	2a09      	cmp	r2, #9
 8000fa0:	d903      	bls.n	8000faa <_vfiprintf_r+0x1ee>
 8000fa2:	2b00      	cmp	r3, #0
 8000fa4:	d0c5      	beq.n	8000f32 <_vfiprintf_r+0x176>
 8000fa6:	9105      	str	r1, [sp, #20]
 8000fa8:	e7c3      	b.n	8000f32 <_vfiprintf_r+0x176>
 8000faa:	fb0c 2101 	mla	r1, ip, r1, r2
 8000fae:	4604      	mov	r4, r0
 8000fb0:	2301      	movs	r3, #1
 8000fb2:	e7f0      	b.n	8000f96 <_vfiprintf_r+0x1da>
 8000fb4:	ab03      	add	r3, sp, #12
 8000fb6:	9300      	str	r3, [sp, #0]
 8000fb8:	462a      	mov	r2, r5
 8000fba:	4b16      	ldr	r3, [pc, #88]	; (8001014 <_vfiprintf_r+0x258>)
 8000fbc:	a904      	add	r1, sp, #16
 8000fbe:	4630      	mov	r0, r6
 8000fc0:	f3af 8000 	nop.w
 8000fc4:	4607      	mov	r7, r0
 8000fc6:	1c78      	adds	r0, r7, #1
 8000fc8:	d1d6      	bne.n	8000f78 <_vfiprintf_r+0x1bc>
 8000fca:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000fcc:	07d9      	lsls	r1, r3, #31
 8000fce:	d405      	bmi.n	8000fdc <_vfiprintf_r+0x220>
 8000fd0:	89ab      	ldrh	r3, [r5, #12]
 8000fd2:	059a      	lsls	r2, r3, #22
 8000fd4:	d402      	bmi.n	8000fdc <_vfiprintf_r+0x220>
 8000fd6:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000fd8:	f7ff fdb7 	bl	8000b4a <__retarget_lock_release_recursive>
 8000fdc:	89ab      	ldrh	r3, [r5, #12]
 8000fde:	065b      	lsls	r3, r3, #25
 8000fe0:	f53f af12 	bmi.w	8000e08 <_vfiprintf_r+0x4c>
 8000fe4:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000fe6:	e711      	b.n	8000e0c <_vfiprintf_r+0x50>
 8000fe8:	ab03      	add	r3, sp, #12
 8000fea:	9300      	str	r3, [sp, #0]
 8000fec:	462a      	mov	r2, r5
 8000fee:	4b09      	ldr	r3, [pc, #36]	; (8001014 <_vfiprintf_r+0x258>)
 8000ff0:	a904      	add	r1, sp, #16
 8000ff2:	4630      	mov	r0, r6
 8000ff4:	f000 f880 	bl	80010f8 <_printf_i>
 8000ff8:	e7e4      	b.n	8000fc4 <_vfiprintf_r+0x208>
 8000ffa:	bf00      	nop
 8000ffc:	08001530 	.word	0x08001530
 8001000:	08001550 	.word	0x08001550
 8001004:	08001510 	.word	0x08001510
 8001008:	08001570 	.word	0x08001570
 800100c:	0800157a 	.word	0x0800157a
 8001010:	00000000 	.word	0x00000000
 8001014:	08000d97 	.word	0x08000d97
 8001018:	08001576 	.word	0x08001576

0800101c <_printf_common>:
 800101c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001020:	4616      	mov	r6, r2
 8001022:	4699      	mov	r9, r3
 8001024:	688a      	ldr	r2, [r1, #8]
 8001026:	690b      	ldr	r3, [r1, #16]
 8001028:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800102c:	4293      	cmp	r3, r2
 800102e:	bfb8      	it	lt
 8001030:	4613      	movlt	r3, r2
 8001032:	6033      	str	r3, [r6, #0]
 8001034:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001038:	4607      	mov	r7, r0
 800103a:	460c      	mov	r4, r1
 800103c:	b10a      	cbz	r2, 8001042 <_printf_common+0x26>
 800103e:	3301      	adds	r3, #1
 8001040:	6033      	str	r3, [r6, #0]
 8001042:	6823      	ldr	r3, [r4, #0]
 8001044:	0699      	lsls	r1, r3, #26
 8001046:	bf42      	ittt	mi
 8001048:	6833      	ldrmi	r3, [r6, #0]
 800104a:	3302      	addmi	r3, #2
 800104c:	6033      	strmi	r3, [r6, #0]
 800104e:	6825      	ldr	r5, [r4, #0]
 8001050:	f015 0506 	ands.w	r5, r5, #6
 8001054:	d106      	bne.n	8001064 <_printf_common+0x48>
 8001056:	f104 0a19 	add.w	sl, r4, #25
 800105a:	68e3      	ldr	r3, [r4, #12]
 800105c:	6832      	ldr	r2, [r6, #0]
 800105e:	1a9b      	subs	r3, r3, r2
 8001060:	42ab      	cmp	r3, r5
 8001062:	dc26      	bgt.n	80010b2 <_printf_common+0x96>
 8001064:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001068:	1e13      	subs	r3, r2, #0
 800106a:	6822      	ldr	r2, [r4, #0]
 800106c:	bf18      	it	ne
 800106e:	2301      	movne	r3, #1
 8001070:	0692      	lsls	r2, r2, #26
 8001072:	d42b      	bmi.n	80010cc <_printf_common+0xb0>
 8001074:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001078:	4649      	mov	r1, r9
 800107a:	4638      	mov	r0, r7
 800107c:	47c0      	blx	r8
 800107e:	3001      	adds	r0, #1
 8001080:	d01e      	beq.n	80010c0 <_printf_common+0xa4>
 8001082:	6823      	ldr	r3, [r4, #0]
 8001084:	68e5      	ldr	r5, [r4, #12]
 8001086:	6832      	ldr	r2, [r6, #0]
 8001088:	f003 0306 	and.w	r3, r3, #6
 800108c:	2b04      	cmp	r3, #4
 800108e:	bf08      	it	eq
 8001090:	1aad      	subeq	r5, r5, r2
 8001092:	68a3      	ldr	r3, [r4, #8]
 8001094:	6922      	ldr	r2, [r4, #16]
 8001096:	bf0c      	ite	eq
 8001098:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800109c:	2500      	movne	r5, #0
 800109e:	4293      	cmp	r3, r2
 80010a0:	bfc4      	itt	gt
 80010a2:	1a9b      	subgt	r3, r3, r2
 80010a4:	18ed      	addgt	r5, r5, r3
 80010a6:	2600      	movs	r6, #0
 80010a8:	341a      	adds	r4, #26
 80010aa:	42b5      	cmp	r5, r6
 80010ac:	d11a      	bne.n	80010e4 <_printf_common+0xc8>
 80010ae:	2000      	movs	r0, #0
 80010b0:	e008      	b.n	80010c4 <_printf_common+0xa8>
 80010b2:	2301      	movs	r3, #1
 80010b4:	4652      	mov	r2, sl
 80010b6:	4649      	mov	r1, r9
 80010b8:	4638      	mov	r0, r7
 80010ba:	47c0      	blx	r8
 80010bc:	3001      	adds	r0, #1
 80010be:	d103      	bne.n	80010c8 <_printf_common+0xac>
 80010c0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80010c4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010c8:	3501      	adds	r5, #1
 80010ca:	e7c6      	b.n	800105a <_printf_common+0x3e>
 80010cc:	18e1      	adds	r1, r4, r3
 80010ce:	1c5a      	adds	r2, r3, #1
 80010d0:	2030      	movs	r0, #48	; 0x30
 80010d2:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80010d6:	4422      	add	r2, r4
 80010d8:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80010dc:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80010e0:	3302      	adds	r3, #2
 80010e2:	e7c7      	b.n	8001074 <_printf_common+0x58>
 80010e4:	2301      	movs	r3, #1
 80010e6:	4622      	mov	r2, r4
 80010e8:	4649      	mov	r1, r9
 80010ea:	4638      	mov	r0, r7
 80010ec:	47c0      	blx	r8
 80010ee:	3001      	adds	r0, #1
 80010f0:	d0e6      	beq.n	80010c0 <_printf_common+0xa4>
 80010f2:	3601      	adds	r6, #1
 80010f4:	e7d9      	b.n	80010aa <_printf_common+0x8e>
	...

080010f8 <_printf_i>:
 80010f8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80010fc:	460c      	mov	r4, r1
 80010fe:	4691      	mov	r9, r2
 8001100:	7e27      	ldrb	r7, [r4, #24]
 8001102:	990c      	ldr	r1, [sp, #48]	; 0x30
 8001104:	2f78      	cmp	r7, #120	; 0x78
 8001106:	4680      	mov	r8, r0
 8001108:	469a      	mov	sl, r3
 800110a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800110e:	d807      	bhi.n	8001120 <_printf_i+0x28>
 8001110:	2f62      	cmp	r7, #98	; 0x62
 8001112:	d80a      	bhi.n	800112a <_printf_i+0x32>
 8001114:	2f00      	cmp	r7, #0
 8001116:	f000 80d8 	beq.w	80012ca <_printf_i+0x1d2>
 800111a:	2f58      	cmp	r7, #88	; 0x58
 800111c:	f000 80a3 	beq.w	8001266 <_printf_i+0x16e>
 8001120:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8001124:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001128:	e03a      	b.n	80011a0 <_printf_i+0xa8>
 800112a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800112e:	2b15      	cmp	r3, #21
 8001130:	d8f6      	bhi.n	8001120 <_printf_i+0x28>
 8001132:	a001      	add	r0, pc, #4	; (adr r0, 8001138 <_printf_i+0x40>)
 8001134:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8001138:	08001191 	.word	0x08001191
 800113c:	080011a5 	.word	0x080011a5
 8001140:	08001121 	.word	0x08001121
 8001144:	08001121 	.word	0x08001121
 8001148:	08001121 	.word	0x08001121
 800114c:	08001121 	.word	0x08001121
 8001150:	080011a5 	.word	0x080011a5
 8001154:	08001121 	.word	0x08001121
 8001158:	08001121 	.word	0x08001121
 800115c:	08001121 	.word	0x08001121
 8001160:	08001121 	.word	0x08001121
 8001164:	080012b1 	.word	0x080012b1
 8001168:	080011d5 	.word	0x080011d5
 800116c:	08001293 	.word	0x08001293
 8001170:	08001121 	.word	0x08001121
 8001174:	08001121 	.word	0x08001121
 8001178:	080012d3 	.word	0x080012d3
 800117c:	08001121 	.word	0x08001121
 8001180:	080011d5 	.word	0x080011d5
 8001184:	08001121 	.word	0x08001121
 8001188:	08001121 	.word	0x08001121
 800118c:	0800129b 	.word	0x0800129b
 8001190:	680b      	ldr	r3, [r1, #0]
 8001192:	1d1a      	adds	r2, r3, #4
 8001194:	681b      	ldr	r3, [r3, #0]
 8001196:	600a      	str	r2, [r1, #0]
 8001198:	f104 0642 	add.w	r6, r4, #66	; 0x42
 800119c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80011a0:	2301      	movs	r3, #1
 80011a2:	e0a3      	b.n	80012ec <_printf_i+0x1f4>
 80011a4:	6825      	ldr	r5, [r4, #0]
 80011a6:	6808      	ldr	r0, [r1, #0]
 80011a8:	062e      	lsls	r6, r5, #24
 80011aa:	f100 0304 	add.w	r3, r0, #4
 80011ae:	d50a      	bpl.n	80011c6 <_printf_i+0xce>
 80011b0:	6805      	ldr	r5, [r0, #0]
 80011b2:	600b      	str	r3, [r1, #0]
 80011b4:	2d00      	cmp	r5, #0
 80011b6:	da03      	bge.n	80011c0 <_printf_i+0xc8>
 80011b8:	232d      	movs	r3, #45	; 0x2d
 80011ba:	426d      	negs	r5, r5
 80011bc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80011c0:	485e      	ldr	r0, [pc, #376]	; (800133c <_printf_i+0x244>)
 80011c2:	230a      	movs	r3, #10
 80011c4:	e019      	b.n	80011fa <_printf_i+0x102>
 80011c6:	f015 0f40 	tst.w	r5, #64	; 0x40
 80011ca:	6805      	ldr	r5, [r0, #0]
 80011cc:	600b      	str	r3, [r1, #0]
 80011ce:	bf18      	it	ne
 80011d0:	b22d      	sxthne	r5, r5
 80011d2:	e7ef      	b.n	80011b4 <_printf_i+0xbc>
 80011d4:	680b      	ldr	r3, [r1, #0]
 80011d6:	6825      	ldr	r5, [r4, #0]
 80011d8:	1d18      	adds	r0, r3, #4
 80011da:	6008      	str	r0, [r1, #0]
 80011dc:	0628      	lsls	r0, r5, #24
 80011de:	d501      	bpl.n	80011e4 <_printf_i+0xec>
 80011e0:	681d      	ldr	r5, [r3, #0]
 80011e2:	e002      	b.n	80011ea <_printf_i+0xf2>
 80011e4:	0669      	lsls	r1, r5, #25
 80011e6:	d5fb      	bpl.n	80011e0 <_printf_i+0xe8>
 80011e8:	881d      	ldrh	r5, [r3, #0]
 80011ea:	4854      	ldr	r0, [pc, #336]	; (800133c <_printf_i+0x244>)
 80011ec:	2f6f      	cmp	r7, #111	; 0x6f
 80011ee:	bf0c      	ite	eq
 80011f0:	2308      	moveq	r3, #8
 80011f2:	230a      	movne	r3, #10
 80011f4:	2100      	movs	r1, #0
 80011f6:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80011fa:	6866      	ldr	r6, [r4, #4]
 80011fc:	60a6      	str	r6, [r4, #8]
 80011fe:	2e00      	cmp	r6, #0
 8001200:	bfa2      	ittt	ge
 8001202:	6821      	ldrge	r1, [r4, #0]
 8001204:	f021 0104 	bicge.w	r1, r1, #4
 8001208:	6021      	strge	r1, [r4, #0]
 800120a:	b90d      	cbnz	r5, 8001210 <_printf_i+0x118>
 800120c:	2e00      	cmp	r6, #0
 800120e:	d04d      	beq.n	80012ac <_printf_i+0x1b4>
 8001210:	4616      	mov	r6, r2
 8001212:	fbb5 f1f3 	udiv	r1, r5, r3
 8001216:	fb03 5711 	mls	r7, r3, r1, r5
 800121a:	5dc7      	ldrb	r7, [r0, r7]
 800121c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001220:	462f      	mov	r7, r5
 8001222:	42bb      	cmp	r3, r7
 8001224:	460d      	mov	r5, r1
 8001226:	d9f4      	bls.n	8001212 <_printf_i+0x11a>
 8001228:	2b08      	cmp	r3, #8
 800122a:	d10b      	bne.n	8001244 <_printf_i+0x14c>
 800122c:	6823      	ldr	r3, [r4, #0]
 800122e:	07df      	lsls	r7, r3, #31
 8001230:	d508      	bpl.n	8001244 <_printf_i+0x14c>
 8001232:	6923      	ldr	r3, [r4, #16]
 8001234:	6861      	ldr	r1, [r4, #4]
 8001236:	4299      	cmp	r1, r3
 8001238:	bfde      	ittt	le
 800123a:	2330      	movle	r3, #48	; 0x30
 800123c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001240:	f106 36ff 	addle.w	r6, r6, #4294967295	; 0xffffffff
 8001244:	1b92      	subs	r2, r2, r6
 8001246:	6122      	str	r2, [r4, #16]
 8001248:	f8cd a000 	str.w	sl, [sp]
 800124c:	464b      	mov	r3, r9
 800124e:	aa03      	add	r2, sp, #12
 8001250:	4621      	mov	r1, r4
 8001252:	4640      	mov	r0, r8
 8001254:	f7ff fee2 	bl	800101c <_printf_common>
 8001258:	3001      	adds	r0, #1
 800125a:	d14c      	bne.n	80012f6 <_printf_i+0x1fe>
 800125c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001260:	b004      	add	sp, #16
 8001262:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001266:	4835      	ldr	r0, [pc, #212]	; (800133c <_printf_i+0x244>)
 8001268:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800126c:	6823      	ldr	r3, [r4, #0]
 800126e:	680e      	ldr	r6, [r1, #0]
 8001270:	061f      	lsls	r7, r3, #24
 8001272:	f856 5b04 	ldr.w	r5, [r6], #4
 8001276:	600e      	str	r6, [r1, #0]
 8001278:	d514      	bpl.n	80012a4 <_printf_i+0x1ac>
 800127a:	07d9      	lsls	r1, r3, #31
 800127c:	bf44      	itt	mi
 800127e:	f043 0320 	orrmi.w	r3, r3, #32
 8001282:	6023      	strmi	r3, [r4, #0]
 8001284:	b91d      	cbnz	r5, 800128e <_printf_i+0x196>
 8001286:	6823      	ldr	r3, [r4, #0]
 8001288:	f023 0320 	bic.w	r3, r3, #32
 800128c:	6023      	str	r3, [r4, #0]
 800128e:	2310      	movs	r3, #16
 8001290:	e7b0      	b.n	80011f4 <_printf_i+0xfc>
 8001292:	6823      	ldr	r3, [r4, #0]
 8001294:	f043 0320 	orr.w	r3, r3, #32
 8001298:	6023      	str	r3, [r4, #0]
 800129a:	2378      	movs	r3, #120	; 0x78
 800129c:	4828      	ldr	r0, [pc, #160]	; (8001340 <_printf_i+0x248>)
 800129e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80012a2:	e7e3      	b.n	800126c <_printf_i+0x174>
 80012a4:	065e      	lsls	r6, r3, #25
 80012a6:	bf48      	it	mi
 80012a8:	b2ad      	uxthmi	r5, r5
 80012aa:	e7e6      	b.n	800127a <_printf_i+0x182>
 80012ac:	4616      	mov	r6, r2
 80012ae:	e7bb      	b.n	8001228 <_printf_i+0x130>
 80012b0:	680b      	ldr	r3, [r1, #0]
 80012b2:	6826      	ldr	r6, [r4, #0]
 80012b4:	6960      	ldr	r0, [r4, #20]
 80012b6:	1d1d      	adds	r5, r3, #4
 80012b8:	600d      	str	r5, [r1, #0]
 80012ba:	0635      	lsls	r5, r6, #24
 80012bc:	681b      	ldr	r3, [r3, #0]
 80012be:	d501      	bpl.n	80012c4 <_printf_i+0x1cc>
 80012c0:	6018      	str	r0, [r3, #0]
 80012c2:	e002      	b.n	80012ca <_printf_i+0x1d2>
 80012c4:	0671      	lsls	r1, r6, #25
 80012c6:	d5fb      	bpl.n	80012c0 <_printf_i+0x1c8>
 80012c8:	8018      	strh	r0, [r3, #0]
 80012ca:	2300      	movs	r3, #0
 80012cc:	6123      	str	r3, [r4, #16]
 80012ce:	4616      	mov	r6, r2
 80012d0:	e7ba      	b.n	8001248 <_printf_i+0x150>
 80012d2:	680b      	ldr	r3, [r1, #0]
 80012d4:	1d1a      	adds	r2, r3, #4
 80012d6:	600a      	str	r2, [r1, #0]
 80012d8:	681e      	ldr	r6, [r3, #0]
 80012da:	6862      	ldr	r2, [r4, #4]
 80012dc:	2100      	movs	r1, #0
 80012de:	4630      	mov	r0, r6
 80012e0:	f7fe ff96 	bl	8000210 <memchr>
 80012e4:	b108      	cbz	r0, 80012ea <_printf_i+0x1f2>
 80012e6:	1b80      	subs	r0, r0, r6
 80012e8:	6060      	str	r0, [r4, #4]
 80012ea:	6863      	ldr	r3, [r4, #4]
 80012ec:	6123      	str	r3, [r4, #16]
 80012ee:	2300      	movs	r3, #0
 80012f0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80012f4:	e7a8      	b.n	8001248 <_printf_i+0x150>
 80012f6:	6923      	ldr	r3, [r4, #16]
 80012f8:	4632      	mov	r2, r6
 80012fa:	4649      	mov	r1, r9
 80012fc:	4640      	mov	r0, r8
 80012fe:	47d0      	blx	sl
 8001300:	3001      	adds	r0, #1
 8001302:	d0ab      	beq.n	800125c <_printf_i+0x164>
 8001304:	6823      	ldr	r3, [r4, #0]
 8001306:	079b      	lsls	r3, r3, #30
 8001308:	d413      	bmi.n	8001332 <_printf_i+0x23a>
 800130a:	68e0      	ldr	r0, [r4, #12]
 800130c:	9b03      	ldr	r3, [sp, #12]
 800130e:	4298      	cmp	r0, r3
 8001310:	bfb8      	it	lt
 8001312:	4618      	movlt	r0, r3
 8001314:	e7a4      	b.n	8001260 <_printf_i+0x168>
 8001316:	2301      	movs	r3, #1
 8001318:	4632      	mov	r2, r6
 800131a:	4649      	mov	r1, r9
 800131c:	4640      	mov	r0, r8
 800131e:	47d0      	blx	sl
 8001320:	3001      	adds	r0, #1
 8001322:	d09b      	beq.n	800125c <_printf_i+0x164>
 8001324:	3501      	adds	r5, #1
 8001326:	68e3      	ldr	r3, [r4, #12]
 8001328:	9903      	ldr	r1, [sp, #12]
 800132a:	1a5b      	subs	r3, r3, r1
 800132c:	42ab      	cmp	r3, r5
 800132e:	dcf2      	bgt.n	8001316 <_printf_i+0x21e>
 8001330:	e7eb      	b.n	800130a <_printf_i+0x212>
 8001332:	2500      	movs	r5, #0
 8001334:	f104 0619 	add.w	r6, r4, #25
 8001338:	e7f5      	b.n	8001326 <_printf_i+0x22e>
 800133a:	bf00      	nop
 800133c:	08001581 	.word	0x08001581
 8001340:	08001592 	.word	0x08001592

08001344 <_sbrk_r>:
 8001344:	b538      	push	{r3, r4, r5, lr}
 8001346:	4d06      	ldr	r5, [pc, #24]	; (8001360 <_sbrk_r+0x1c>)
 8001348:	2300      	movs	r3, #0
 800134a:	4604      	mov	r4, r0
 800134c:	4608      	mov	r0, r1
 800134e:	602b      	str	r3, [r5, #0]
 8001350:	f7ff f862 	bl	8000418 <_sbrk>
 8001354:	1c43      	adds	r3, r0, #1
 8001356:	d102      	bne.n	800135e <_sbrk_r+0x1a>
 8001358:	682b      	ldr	r3, [r5, #0]
 800135a:	b103      	cbz	r3, 800135e <_sbrk_r+0x1a>
 800135c:	6023      	str	r3, [r4, #0]
 800135e:	bd38      	pop	{r3, r4, r5, pc}
 8001360:	20000098 	.word	0x20000098

08001364 <__sread>:
 8001364:	b510      	push	{r4, lr}
 8001366:	460c      	mov	r4, r1
 8001368:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800136c:	f000 f8a0 	bl	80014b0 <_read_r>
 8001370:	2800      	cmp	r0, #0
 8001372:	bfab      	itete	ge
 8001374:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001376:	89a3      	ldrhlt	r3, [r4, #12]
 8001378:	181b      	addge	r3, r3, r0
 800137a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800137e:	bfac      	ite	ge
 8001380:	6563      	strge	r3, [r4, #84]	; 0x54
 8001382:	81a3      	strhlt	r3, [r4, #12]
 8001384:	bd10      	pop	{r4, pc}

08001386 <__swrite>:
 8001386:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800138a:	461f      	mov	r7, r3
 800138c:	898b      	ldrh	r3, [r1, #12]
 800138e:	05db      	lsls	r3, r3, #23
 8001390:	4605      	mov	r5, r0
 8001392:	460c      	mov	r4, r1
 8001394:	4616      	mov	r6, r2
 8001396:	d505      	bpl.n	80013a4 <__swrite+0x1e>
 8001398:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800139c:	2302      	movs	r3, #2
 800139e:	2200      	movs	r2, #0
 80013a0:	f000 f868 	bl	8001474 <_lseek_r>
 80013a4:	89a3      	ldrh	r3, [r4, #12]
 80013a6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013aa:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80013ae:	81a3      	strh	r3, [r4, #12]
 80013b0:	4632      	mov	r2, r6
 80013b2:	463b      	mov	r3, r7
 80013b4:	4628      	mov	r0, r5
 80013b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80013ba:	f000 b817 	b.w	80013ec <_write_r>

080013be <__sseek>:
 80013be:	b510      	push	{r4, lr}
 80013c0:	460c      	mov	r4, r1
 80013c2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013c6:	f000 f855 	bl	8001474 <_lseek_r>
 80013ca:	1c43      	adds	r3, r0, #1
 80013cc:	89a3      	ldrh	r3, [r4, #12]
 80013ce:	bf15      	itete	ne
 80013d0:	6560      	strne	r0, [r4, #84]	; 0x54
 80013d2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80013d6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80013da:	81a3      	strheq	r3, [r4, #12]
 80013dc:	bf18      	it	ne
 80013de:	81a3      	strhne	r3, [r4, #12]
 80013e0:	bd10      	pop	{r4, pc}

080013e2 <__sclose>:
 80013e2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013e6:	f000 b813 	b.w	8001410 <_close_r>
	...

080013ec <_write_r>:
 80013ec:	b538      	push	{r3, r4, r5, lr}
 80013ee:	4d07      	ldr	r5, [pc, #28]	; (800140c <_write_r+0x20>)
 80013f0:	4604      	mov	r4, r0
 80013f2:	4608      	mov	r0, r1
 80013f4:	4611      	mov	r1, r2
 80013f6:	2200      	movs	r2, #0
 80013f8:	602a      	str	r2, [r5, #0]
 80013fa:	461a      	mov	r2, r3
 80013fc:	f7fe ffbb 	bl	8000376 <_write>
 8001400:	1c43      	adds	r3, r0, #1
 8001402:	d102      	bne.n	800140a <_write_r+0x1e>
 8001404:	682b      	ldr	r3, [r5, #0]
 8001406:	b103      	cbz	r3, 800140a <_write_r+0x1e>
 8001408:	6023      	str	r3, [r4, #0]
 800140a:	bd38      	pop	{r3, r4, r5, pc}
 800140c:	20000098 	.word	0x20000098

08001410 <_close_r>:
 8001410:	b538      	push	{r3, r4, r5, lr}
 8001412:	4d06      	ldr	r5, [pc, #24]	; (800142c <_close_r+0x1c>)
 8001414:	2300      	movs	r3, #0
 8001416:	4604      	mov	r4, r0
 8001418:	4608      	mov	r0, r1
 800141a:	602b      	str	r3, [r5, #0]
 800141c:	f7fe ffc7 	bl	80003ae <_close>
 8001420:	1c43      	adds	r3, r0, #1
 8001422:	d102      	bne.n	800142a <_close_r+0x1a>
 8001424:	682b      	ldr	r3, [r5, #0]
 8001426:	b103      	cbz	r3, 800142a <_close_r+0x1a>
 8001428:	6023      	str	r3, [r4, #0]
 800142a:	bd38      	pop	{r3, r4, r5, pc}
 800142c:	20000098 	.word	0x20000098

08001430 <_fstat_r>:
 8001430:	b538      	push	{r3, r4, r5, lr}
 8001432:	4d07      	ldr	r5, [pc, #28]	; (8001450 <_fstat_r+0x20>)
 8001434:	2300      	movs	r3, #0
 8001436:	4604      	mov	r4, r0
 8001438:	4608      	mov	r0, r1
 800143a:	4611      	mov	r1, r2
 800143c:	602b      	str	r3, [r5, #0]
 800143e:	f7fe ffc2 	bl	80003c6 <_fstat>
 8001442:	1c43      	adds	r3, r0, #1
 8001444:	d102      	bne.n	800144c <_fstat_r+0x1c>
 8001446:	682b      	ldr	r3, [r5, #0]
 8001448:	b103      	cbz	r3, 800144c <_fstat_r+0x1c>
 800144a:	6023      	str	r3, [r4, #0]
 800144c:	bd38      	pop	{r3, r4, r5, pc}
 800144e:	bf00      	nop
 8001450:	20000098 	.word	0x20000098

08001454 <_isatty_r>:
 8001454:	b538      	push	{r3, r4, r5, lr}
 8001456:	4d06      	ldr	r5, [pc, #24]	; (8001470 <_isatty_r+0x1c>)
 8001458:	2300      	movs	r3, #0
 800145a:	4604      	mov	r4, r0
 800145c:	4608      	mov	r0, r1
 800145e:	602b      	str	r3, [r5, #0]
 8001460:	f7fe ffc1 	bl	80003e6 <_isatty>
 8001464:	1c43      	adds	r3, r0, #1
 8001466:	d102      	bne.n	800146e <_isatty_r+0x1a>
 8001468:	682b      	ldr	r3, [r5, #0]
 800146a:	b103      	cbz	r3, 800146e <_isatty_r+0x1a>
 800146c:	6023      	str	r3, [r4, #0]
 800146e:	bd38      	pop	{r3, r4, r5, pc}
 8001470:	20000098 	.word	0x20000098

08001474 <_lseek_r>:
 8001474:	b538      	push	{r3, r4, r5, lr}
 8001476:	4d07      	ldr	r5, [pc, #28]	; (8001494 <_lseek_r+0x20>)
 8001478:	4604      	mov	r4, r0
 800147a:	4608      	mov	r0, r1
 800147c:	4611      	mov	r1, r2
 800147e:	2200      	movs	r2, #0
 8001480:	602a      	str	r2, [r5, #0]
 8001482:	461a      	mov	r2, r3
 8001484:	f7fe ffba 	bl	80003fc <_lseek>
 8001488:	1c43      	adds	r3, r0, #1
 800148a:	d102      	bne.n	8001492 <_lseek_r+0x1e>
 800148c:	682b      	ldr	r3, [r5, #0]
 800148e:	b103      	cbz	r3, 8001492 <_lseek_r+0x1e>
 8001490:	6023      	str	r3, [r4, #0]
 8001492:	bd38      	pop	{r3, r4, r5, pc}
 8001494:	20000098 	.word	0x20000098

08001498 <__malloc_lock>:
 8001498:	4801      	ldr	r0, [pc, #4]	; (80014a0 <__malloc_lock+0x8>)
 800149a:	f7ff bb55 	b.w	8000b48 <__retarget_lock_acquire_recursive>
 800149e:	bf00      	nop
 80014a0:	20000090 	.word	0x20000090

080014a4 <__malloc_unlock>:
 80014a4:	4801      	ldr	r0, [pc, #4]	; (80014ac <__malloc_unlock+0x8>)
 80014a6:	f7ff bb50 	b.w	8000b4a <__retarget_lock_release_recursive>
 80014aa:	bf00      	nop
 80014ac:	20000090 	.word	0x20000090

080014b0 <_read_r>:
 80014b0:	b538      	push	{r3, r4, r5, lr}
 80014b2:	4d07      	ldr	r5, [pc, #28]	; (80014d0 <_read_r+0x20>)
 80014b4:	4604      	mov	r4, r0
 80014b6:	4608      	mov	r0, r1
 80014b8:	4611      	mov	r1, r2
 80014ba:	2200      	movs	r2, #0
 80014bc:	602a      	str	r2, [r5, #0]
 80014be:	461a      	mov	r2, r3
 80014c0:	f7fe ff3c 	bl	800033c <_read>
 80014c4:	1c43      	adds	r3, r0, #1
 80014c6:	d102      	bne.n	80014ce <_read_r+0x1e>
 80014c8:	682b      	ldr	r3, [r5, #0]
 80014ca:	b103      	cbz	r3, 80014ce <_read_r+0x1e>
 80014cc:	6023      	str	r3, [r4, #0]
 80014ce:	bd38      	pop	{r3, r4, r5, pc}
 80014d0:	20000098 	.word	0x20000098

080014d4 <_init>:
 80014d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014d6:	bf00      	nop
 80014d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014da:	bc08      	pop	{r3}
 80014dc:	469e      	mov	lr, r3
 80014de:	4770      	bx	lr

080014e0 <_fini>:
 80014e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014e2:	bf00      	nop
 80014e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014e6:	bc08      	pop	{r3}
 80014e8:	469e      	mov	lr, r3
 80014ea:	4770      	bx	lr
