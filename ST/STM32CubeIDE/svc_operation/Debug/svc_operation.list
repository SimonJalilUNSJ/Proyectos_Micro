
svc_operation.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000013c8  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000128  08001598  08001598  00011598  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080016c0  080016c0  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080016c0  080016c0  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080016c0  080016c0  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080016c0  080016c0  000116c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080016c4  080016c4  000116c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080016c8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000038  20000064  0800172c  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000009c  0800172c  0002009c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002515  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000690  00000000  00000000  000225a9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000140  00000000  00000000  00022c40  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000108  00000000  00000000  00022d80  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002bf0  00000000  00000000  00022e88  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000134e  00000000  00000000  00025a78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000973c  00000000  00000000  00026dc6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00030502  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c2c  00000000  00000000  00030558  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000064 	.word	0x20000064
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08001580 	.word	0x08001580

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000068 	.word	0x20000068
 800020c:	08001580 	.word	0x08001580

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <add_numbers>:
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

void SVC_Handler_c(uint32_t *pBaseStackFrame);

int32_t add_numbers(int32_t x, int32_t y){
 80002b0:	b480      	push	{r7}
 80002b2:	b085      	sub	sp, #20
 80002b4:	af00      	add	r7, sp, #0
 80002b6:	6078      	str	r0, [r7, #4]
 80002b8:	6039      	str	r1, [r7, #0]
	int32_t res;
	__asm volatile ("SVC #36");
 80002ba:	df24      	svc	36	; 0x24
	__asm volatile ("MOV %0,R0":"=r"(res)::);
 80002bc:	4603      	mov	r3, r0
 80002be:	60fb      	str	r3, [r7, #12]
	return res;
 80002c0:	68fb      	ldr	r3, [r7, #12]
}
 80002c2:	4618      	mov	r0, r3
 80002c4:	3714      	adds	r7, #20
 80002c6:	46bd      	mov	sp, r7
 80002c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002cc:	4770      	bx	lr
	...

080002d0 <main>:
	__asm volatile ("MOV %0,R0":"=r"(res)::);
	return res;
}

int main(void)
{
 80002d0:	b580      	push	{r7, lr}
 80002d2:	b082      	sub	sp, #8
 80002d4:	af00      	add	r7, sp, #0
	int32_t res;

	res = add_numbers(40,-90);
 80002d6:	f06f 0159 	mvn.w	r1, #89	; 0x59
 80002da:	2028      	movs	r0, #40	; 0x28
 80002dc:	f7ff ffe8 	bl	80002b0 <add_numbers>
 80002e0:	6078      	str	r0, [r7, #4]
	printf("Add result = %ld\n",res);
 80002e2:	6879      	ldr	r1, [r7, #4]
 80002e4:	4810      	ldr	r0, [pc, #64]	; (8000328 <main+0x58>)
 80002e6:	f000 f97f 	bl	80005e8 <iprintf>

	res = add_numbers(25,150);
 80002ea:	2196      	movs	r1, #150	; 0x96
 80002ec:	2019      	movs	r0, #25
 80002ee:	f7ff ffdf 	bl	80002b0 <add_numbers>
 80002f2:	6078      	str	r0, [r7, #4]
	printf("Sub result = %ld\n",res);
 80002f4:	6879      	ldr	r1, [r7, #4]
 80002f6:	480d      	ldr	r0, [pc, #52]	; (800032c <main+0x5c>)
 80002f8:	f000 f976 	bl	80005e8 <iprintf>

	res = add_numbers(374,890);
 80002fc:	f240 317a 	movw	r1, #890	; 0x37a
 8000300:	f44f 70bb 	mov.w	r0, #374	; 0x176
 8000304:	f7ff ffd4 	bl	80002b0 <add_numbers>
 8000308:	6078      	str	r0, [r7, #4]
	printf("Mul result = %ld\n",res);
 800030a:	6879      	ldr	r1, [r7, #4]
 800030c:	4808      	ldr	r0, [pc, #32]	; (8000330 <main+0x60>)
 800030e:	f000 f96b 	bl	80005e8 <iprintf>

	res = add_numbers(67,-3);
 8000312:	f06f 0102 	mvn.w	r1, #2
 8000316:	2043      	movs	r0, #67	; 0x43
 8000318:	f7ff ffca 	bl	80002b0 <add_numbers>
 800031c:	6078      	str	r0, [r7, #4]
	printf("Div result = %ld\n",res);
 800031e:	6879      	ldr	r1, [r7, #4]
 8000320:	4804      	ldr	r0, [pc, #16]	; (8000334 <main+0x64>)
 8000322:	f000 f961 	bl	80005e8 <iprintf>
    /* Loop forever */
	for(;;);
 8000326:	e7fe      	b.n	8000326 <main+0x56>
 8000328:	08001598 	.word	0x08001598
 800032c:	080015ac 	.word	0x080015ac
 8000330:	080015c0 	.word	0x080015c0
 8000334:	080015d4 	.word	0x080015d4

08000338 <SVC_Handler>:
}

__attribute((naked)) void SVC_Handler(void){
	//1. Obtener el valor del MSP.
	__asm("MRS R0,MSP");
 8000338:	f3ef 8008 	mrs	r0, MSP
	__asm("B SVC_Handler_c");
 800033c:	f000 b802 	b.w	8000344 <SVC_Handler_c>
}
 8000340:	bf00      	nop
	...

08000344 <SVC_Handler_c>:

void SVC_Handler_c(uint32_t *pBaseOfStackFrame){
 8000344:	b580      	push	{r7, lr}
 8000346:	b088      	sub	sp, #32
 8000348:	af00      	add	r7, sp, #0
 800034a:	6078      	str	r0, [r7, #4]
	printf("in SVC handler\n");
 800034c:	4823      	ldr	r0, [pc, #140]	; (80003dc <SVC_Handler_c+0x98>)
 800034e:	f000 f9d1 	bl	80006f4 <puts>

	int32_t arg0,arg1,res;

	uint8_t *pReturn_addr = (uint8_t*)pBaseOfStackFrame[6];
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	3318      	adds	r3, #24
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	61bb      	str	r3, [r7, #24]

	//2. Decrementar la dirección de retorno por 2 para apuntar
	//al opcode de la instrucción SVC en la memoria de programa.
	pReturn_addr -= 2;
 800035a:	69bb      	ldr	r3, [r7, #24]
 800035c:	3b02      	subs	r3, #2
 800035e:	61bb      	str	r3, [r7, #24]

	uint8_t svc_number = *pReturn_addr;
 8000360:	69bb      	ldr	r3, [r7, #24]
 8000362:	781b      	ldrb	r3, [r3, #0]
 8000364:	75fb      	strb	r3, [r7, #23]

	printf("El número SVC es :%d\n",svc_number);
 8000366:	7dfb      	ldrb	r3, [r7, #23]
 8000368:	4619      	mov	r1, r3
 800036a:	481d      	ldr	r0, [pc, #116]	; (80003e0 <SVC_Handler_c+0x9c>)
 800036c:	f000 f93c 	bl	80005e8 <iprintf>

	arg0 = pBaseOfStackFrame[0];
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	681b      	ldr	r3, [r3, #0]
 8000374:	613b      	str	r3, [r7, #16]
	arg1 = pBaseOfStackFrame[1];
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	3304      	adds	r3, #4
 800037a:	681b      	ldr	r3, [r3, #0]
 800037c:	60fb      	str	r3, [r7, #12]

	switch(svc_number){
 800037e:	7dfb      	ldrb	r3, [r7, #23]
 8000380:	3b24      	subs	r3, #36	; 0x24
 8000382:	2b03      	cmp	r3, #3
 8000384:	d820      	bhi.n	80003c8 <SVC_Handler_c+0x84>
 8000386:	a201      	add	r2, pc, #4	; (adr r2, 800038c <SVC_Handler_c+0x48>)
 8000388:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800038c:	0800039d 	.word	0x0800039d
 8000390:	080003a7 	.word	0x080003a7
 8000394:	080003b1 	.word	0x080003b1
 8000398:	080003bd 	.word	0x080003bd
		case 36:
			res = arg0 + arg1;
 800039c:	693a      	ldr	r2, [r7, #16]
 800039e:	68fb      	ldr	r3, [r7, #12]
 80003a0:	4413      	add	r3, r2
 80003a2:	61fb      	str	r3, [r7, #28]
			break;
 80003a4:	e013      	b.n	80003ce <SVC_Handler_c+0x8a>
		case 37:
			res = arg0 - arg1;
 80003a6:	693a      	ldr	r2, [r7, #16]
 80003a8:	68fb      	ldr	r3, [r7, #12]
 80003aa:	1ad3      	subs	r3, r2, r3
 80003ac:	61fb      	str	r3, [r7, #28]
			break;
 80003ae:	e00e      	b.n	80003ce <SVC_Handler_c+0x8a>
		case 38:
			res = arg0 * arg1;
 80003b0:	693b      	ldr	r3, [r7, #16]
 80003b2:	68fa      	ldr	r2, [r7, #12]
 80003b4:	fb02 f303 	mul.w	r3, r2, r3
 80003b8:	61fb      	str	r3, [r7, #28]
			break;
 80003ba:	e008      	b.n	80003ce <SVC_Handler_c+0x8a>
		case 39:
			res = arg0/arg1;
 80003bc:	693a      	ldr	r2, [r7, #16]
 80003be:	68fb      	ldr	r3, [r7, #12]
 80003c0:	fb92 f3f3 	sdiv	r3, r2, r3
 80003c4:	61fb      	str	r3, [r7, #28]
			break;
 80003c6:	e002      	b.n	80003ce <SVC_Handler_c+0x8a>
		default:
				printf("Código SVC invalido\n");
 80003c8:	4806      	ldr	r0, [pc, #24]	; (80003e4 <SVC_Handler_c+0xa0>)
 80003ca:	f000 f993 	bl	80006f4 <puts>
	}
	pBaseOfStackFrame[0] = res;
 80003ce:	69fa      	ldr	r2, [r7, #28]
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	601a      	str	r2, [r3, #0]
}
 80003d4:	bf00      	nop
 80003d6:	3720      	adds	r7, #32
 80003d8:	46bd      	mov	sp, r7
 80003da:	bd80      	pop	{r7, pc}
 80003dc:	080015e8 	.word	0x080015e8
 80003e0:	080015f8 	.word	0x080015f8
 80003e4:	08001610 	.word	0x08001610

080003e8 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003e8:	b580      	push	{r7, lr}
 80003ea:	b086      	sub	sp, #24
 80003ec:	af00      	add	r7, sp, #0
 80003ee:	60f8      	str	r0, [r7, #12]
 80003f0:	60b9      	str	r1, [r7, #8]
 80003f2:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003f4:	2300      	movs	r3, #0
 80003f6:	617b      	str	r3, [r7, #20]
 80003f8:	e00a      	b.n	8000410 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80003fa:	f3af 8000 	nop.w
 80003fe:	4601      	mov	r1, r0
 8000400:	68bb      	ldr	r3, [r7, #8]
 8000402:	1c5a      	adds	r2, r3, #1
 8000404:	60ba      	str	r2, [r7, #8]
 8000406:	b2ca      	uxtb	r2, r1
 8000408:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800040a:	697b      	ldr	r3, [r7, #20]
 800040c:	3301      	adds	r3, #1
 800040e:	617b      	str	r3, [r7, #20]
 8000410:	697a      	ldr	r2, [r7, #20]
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	429a      	cmp	r2, r3
 8000416:	dbf0      	blt.n	80003fa <_read+0x12>
	}

return len;
 8000418:	687b      	ldr	r3, [r7, #4]
}
 800041a:	4618      	mov	r0, r3
 800041c:	3718      	adds	r7, #24
 800041e:	46bd      	mov	sp, r7
 8000420:	bd80      	pop	{r7, pc}

08000422 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000422:	b580      	push	{r7, lr}
 8000424:	b086      	sub	sp, #24
 8000426:	af00      	add	r7, sp, #0
 8000428:	60f8      	str	r0, [r7, #12]
 800042a:	60b9      	str	r1, [r7, #8]
 800042c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800042e:	2300      	movs	r3, #0
 8000430:	617b      	str	r3, [r7, #20]
 8000432:	e009      	b.n	8000448 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000434:	68bb      	ldr	r3, [r7, #8]
 8000436:	1c5a      	adds	r2, r3, #1
 8000438:	60ba      	str	r2, [r7, #8]
 800043a:	781b      	ldrb	r3, [r3, #0]
 800043c:	4618      	mov	r0, r3
 800043e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000442:	697b      	ldr	r3, [r7, #20]
 8000444:	3301      	adds	r3, #1
 8000446:	617b      	str	r3, [r7, #20]
 8000448:	697a      	ldr	r2, [r7, #20]
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	429a      	cmp	r2, r3
 800044e:	dbf1      	blt.n	8000434 <_write+0x12>
	}
	return len;
 8000450:	687b      	ldr	r3, [r7, #4]
}
 8000452:	4618      	mov	r0, r3
 8000454:	3718      	adds	r7, #24
 8000456:	46bd      	mov	sp, r7
 8000458:	bd80      	pop	{r7, pc}

0800045a <_close>:

int _close(int file)
{
 800045a:	b480      	push	{r7}
 800045c:	b083      	sub	sp, #12
 800045e:	af00      	add	r7, sp, #0
 8000460:	6078      	str	r0, [r7, #4]
	return -1;
 8000462:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8000466:	4618      	mov	r0, r3
 8000468:	370c      	adds	r7, #12
 800046a:	46bd      	mov	sp, r7
 800046c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000470:	4770      	bx	lr

08000472 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000472:	b480      	push	{r7}
 8000474:	b083      	sub	sp, #12
 8000476:	af00      	add	r7, sp, #0
 8000478:	6078      	str	r0, [r7, #4]
 800047a:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 800047c:	683b      	ldr	r3, [r7, #0]
 800047e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000482:	605a      	str	r2, [r3, #4]
	return 0;
 8000484:	2300      	movs	r3, #0
}
 8000486:	4618      	mov	r0, r3
 8000488:	370c      	adds	r7, #12
 800048a:	46bd      	mov	sp, r7
 800048c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000490:	4770      	bx	lr

08000492 <_isatty>:

int _isatty(int file)
{
 8000492:	b480      	push	{r7}
 8000494:	b083      	sub	sp, #12
 8000496:	af00      	add	r7, sp, #0
 8000498:	6078      	str	r0, [r7, #4]
	return 1;
 800049a:	2301      	movs	r3, #1
}
 800049c:	4618      	mov	r0, r3
 800049e:	370c      	adds	r7, #12
 80004a0:	46bd      	mov	sp, r7
 80004a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004a6:	4770      	bx	lr

080004a8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004a8:	b480      	push	{r7}
 80004aa:	b085      	sub	sp, #20
 80004ac:	af00      	add	r7, sp, #0
 80004ae:	60f8      	str	r0, [r7, #12]
 80004b0:	60b9      	str	r1, [r7, #8]
 80004b2:	607a      	str	r2, [r7, #4]
	return 0;
 80004b4:	2300      	movs	r3, #0
}
 80004b6:	4618      	mov	r0, r3
 80004b8:	3714      	adds	r7, #20
 80004ba:	46bd      	mov	sp, r7
 80004bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004c0:	4770      	bx	lr
	...

080004c4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80004c4:	b580      	push	{r7, lr}
 80004c6:	b086      	sub	sp, #24
 80004c8:	af00      	add	r7, sp, #0
 80004ca:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80004cc:	4a14      	ldr	r2, [pc, #80]	; (8000520 <_sbrk+0x5c>)
 80004ce:	4b15      	ldr	r3, [pc, #84]	; (8000524 <_sbrk+0x60>)
 80004d0:	1ad3      	subs	r3, r2, r3
 80004d2:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004d4:	697b      	ldr	r3, [r7, #20]
 80004d6:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004d8:	4b13      	ldr	r3, [pc, #76]	; (8000528 <_sbrk+0x64>)
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	2b00      	cmp	r3, #0
 80004de:	d102      	bne.n	80004e6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004e0:	4b11      	ldr	r3, [pc, #68]	; (8000528 <_sbrk+0x64>)
 80004e2:	4a12      	ldr	r2, [pc, #72]	; (800052c <_sbrk+0x68>)
 80004e4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004e6:	4b10      	ldr	r3, [pc, #64]	; (8000528 <_sbrk+0x64>)
 80004e8:	681a      	ldr	r2, [r3, #0]
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	4413      	add	r3, r2
 80004ee:	693a      	ldr	r2, [r7, #16]
 80004f0:	429a      	cmp	r2, r3
 80004f2:	d207      	bcs.n	8000504 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004f4:	f000 f846 	bl	8000584 <__errno>
 80004f8:	4603      	mov	r3, r0
 80004fa:	220c      	movs	r2, #12
 80004fc:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004fe:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000502:	e009      	b.n	8000518 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000504:	4b08      	ldr	r3, [pc, #32]	; (8000528 <_sbrk+0x64>)
 8000506:	681b      	ldr	r3, [r3, #0]
 8000508:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800050a:	4b07      	ldr	r3, [pc, #28]	; (8000528 <_sbrk+0x64>)
 800050c:	681a      	ldr	r2, [r3, #0]
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	4413      	add	r3, r2
 8000512:	4a05      	ldr	r2, [pc, #20]	; (8000528 <_sbrk+0x64>)
 8000514:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000516:	68fb      	ldr	r3, [r7, #12]
}
 8000518:	4618      	mov	r0, r3
 800051a:	3718      	adds	r7, #24
 800051c:	46bd      	mov	sp, r7
 800051e:	bd80      	pop	{r7, pc}
 8000520:	20008000 	.word	0x20008000
 8000524:	00000400 	.word	0x00000400
 8000528:	20000080 	.word	0x20000080
 800052c:	200000a0 	.word	0x200000a0

08000530 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000530:	480d      	ldr	r0, [pc, #52]	; (8000568 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000532:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000534:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000538:	480c      	ldr	r0, [pc, #48]	; (800056c <LoopForever+0x6>)
  ldr r1, =_edata
 800053a:	490d      	ldr	r1, [pc, #52]	; (8000570 <LoopForever+0xa>)
  ldr r2, =_sidata
 800053c:	4a0d      	ldr	r2, [pc, #52]	; (8000574 <LoopForever+0xe>)
  movs r3, #0
 800053e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000540:	e002      	b.n	8000548 <LoopCopyDataInit>

08000542 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000542:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000544:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000546:	3304      	adds	r3, #4

08000548 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000548:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800054a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800054c:	d3f9      	bcc.n	8000542 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800054e:	4a0a      	ldr	r2, [pc, #40]	; (8000578 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000550:	4c0a      	ldr	r4, [pc, #40]	; (800057c <LoopForever+0x16>)
  movs r3, #0
 8000552:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000554:	e001      	b.n	800055a <LoopFillZerobss>

08000556 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000556:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000558:	3204      	adds	r2, #4

0800055a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800055a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800055c:	d3fb      	bcc.n	8000556 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800055e:	f000 f817 	bl	8000590 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000562:	f7ff feb5 	bl	80002d0 <main>

08000566 <LoopForever>:

LoopForever:
    b LoopForever
 8000566:	e7fe      	b.n	8000566 <LoopForever>
  ldr   r0, =_estack
 8000568:	20008000 	.word	0x20008000
  ldr r0, =_sdata
 800056c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000570:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000574:	080016c8 	.word	0x080016c8
  ldr r2, =_sbss
 8000578:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 800057c:	2000009c 	.word	0x2000009c

08000580 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000580:	e7fe      	b.n	8000580 <ADC_IRQHandler>
	...

08000584 <__errno>:
 8000584:	4b01      	ldr	r3, [pc, #4]	; (800058c <__errno+0x8>)
 8000586:	6818      	ldr	r0, [r3, #0]
 8000588:	4770      	bx	lr
 800058a:	bf00      	nop
 800058c:	20000000 	.word	0x20000000

08000590 <__libc_init_array>:
 8000590:	b570      	push	{r4, r5, r6, lr}
 8000592:	4d0d      	ldr	r5, [pc, #52]	; (80005c8 <__libc_init_array+0x38>)
 8000594:	4c0d      	ldr	r4, [pc, #52]	; (80005cc <__libc_init_array+0x3c>)
 8000596:	1b64      	subs	r4, r4, r5
 8000598:	10a4      	asrs	r4, r4, #2
 800059a:	2600      	movs	r6, #0
 800059c:	42a6      	cmp	r6, r4
 800059e:	d109      	bne.n	80005b4 <__libc_init_array+0x24>
 80005a0:	4d0b      	ldr	r5, [pc, #44]	; (80005d0 <__libc_init_array+0x40>)
 80005a2:	4c0c      	ldr	r4, [pc, #48]	; (80005d4 <__libc_init_array+0x44>)
 80005a4:	f000 ffec 	bl	8001580 <_init>
 80005a8:	1b64      	subs	r4, r4, r5
 80005aa:	10a4      	asrs	r4, r4, #2
 80005ac:	2600      	movs	r6, #0
 80005ae:	42a6      	cmp	r6, r4
 80005b0:	d105      	bne.n	80005be <__libc_init_array+0x2e>
 80005b2:	bd70      	pop	{r4, r5, r6, pc}
 80005b4:	f855 3b04 	ldr.w	r3, [r5], #4
 80005b8:	4798      	blx	r3
 80005ba:	3601      	adds	r6, #1
 80005bc:	e7ee      	b.n	800059c <__libc_init_array+0xc>
 80005be:	f855 3b04 	ldr.w	r3, [r5], #4
 80005c2:	4798      	blx	r3
 80005c4:	3601      	adds	r6, #1
 80005c6:	e7f2      	b.n	80005ae <__libc_init_array+0x1e>
 80005c8:	080016c0 	.word	0x080016c0
 80005cc:	080016c0 	.word	0x080016c0
 80005d0:	080016c0 	.word	0x080016c0
 80005d4:	080016c4 	.word	0x080016c4

080005d8 <memset>:
 80005d8:	4402      	add	r2, r0
 80005da:	4603      	mov	r3, r0
 80005dc:	4293      	cmp	r3, r2
 80005de:	d100      	bne.n	80005e2 <memset+0xa>
 80005e0:	4770      	bx	lr
 80005e2:	f803 1b01 	strb.w	r1, [r3], #1
 80005e6:	e7f9      	b.n	80005dc <memset+0x4>

080005e8 <iprintf>:
 80005e8:	b40f      	push	{r0, r1, r2, r3}
 80005ea:	4b0a      	ldr	r3, [pc, #40]	; (8000614 <iprintf+0x2c>)
 80005ec:	b513      	push	{r0, r1, r4, lr}
 80005ee:	681c      	ldr	r4, [r3, #0]
 80005f0:	b124      	cbz	r4, 80005fc <iprintf+0x14>
 80005f2:	69a3      	ldr	r3, [r4, #24]
 80005f4:	b913      	cbnz	r3, 80005fc <iprintf+0x14>
 80005f6:	4620      	mov	r0, r4
 80005f8:	f000 fa5e 	bl	8000ab8 <__sinit>
 80005fc:	ab05      	add	r3, sp, #20
 80005fe:	9a04      	ldr	r2, [sp, #16]
 8000600:	68a1      	ldr	r1, [r4, #8]
 8000602:	9301      	str	r3, [sp, #4]
 8000604:	4620      	mov	r0, r4
 8000606:	f000 fc2f 	bl	8000e68 <_vfiprintf_r>
 800060a:	b002      	add	sp, #8
 800060c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000610:	b004      	add	sp, #16
 8000612:	4770      	bx	lr
 8000614:	20000000 	.word	0x20000000

08000618 <_puts_r>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	460e      	mov	r6, r1
 800061c:	4605      	mov	r5, r0
 800061e:	b118      	cbz	r0, 8000628 <_puts_r+0x10>
 8000620:	6983      	ldr	r3, [r0, #24]
 8000622:	b90b      	cbnz	r3, 8000628 <_puts_r+0x10>
 8000624:	f000 fa48 	bl	8000ab8 <__sinit>
 8000628:	69ab      	ldr	r3, [r5, #24]
 800062a:	68ac      	ldr	r4, [r5, #8]
 800062c:	b913      	cbnz	r3, 8000634 <_puts_r+0x1c>
 800062e:	4628      	mov	r0, r5
 8000630:	f000 fa42 	bl	8000ab8 <__sinit>
 8000634:	4b2c      	ldr	r3, [pc, #176]	; (80006e8 <_puts_r+0xd0>)
 8000636:	429c      	cmp	r4, r3
 8000638:	d120      	bne.n	800067c <_puts_r+0x64>
 800063a:	686c      	ldr	r4, [r5, #4]
 800063c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800063e:	07db      	lsls	r3, r3, #31
 8000640:	d405      	bmi.n	800064e <_puts_r+0x36>
 8000642:	89a3      	ldrh	r3, [r4, #12]
 8000644:	0598      	lsls	r0, r3, #22
 8000646:	d402      	bmi.n	800064e <_puts_r+0x36>
 8000648:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800064a:	f000 fad3 	bl	8000bf4 <__retarget_lock_acquire_recursive>
 800064e:	89a3      	ldrh	r3, [r4, #12]
 8000650:	0719      	lsls	r1, r3, #28
 8000652:	d51d      	bpl.n	8000690 <_puts_r+0x78>
 8000654:	6923      	ldr	r3, [r4, #16]
 8000656:	b1db      	cbz	r3, 8000690 <_puts_r+0x78>
 8000658:	3e01      	subs	r6, #1
 800065a:	68a3      	ldr	r3, [r4, #8]
 800065c:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000660:	3b01      	subs	r3, #1
 8000662:	60a3      	str	r3, [r4, #8]
 8000664:	bb39      	cbnz	r1, 80006b6 <_puts_r+0x9e>
 8000666:	2b00      	cmp	r3, #0
 8000668:	da38      	bge.n	80006dc <_puts_r+0xc4>
 800066a:	4622      	mov	r2, r4
 800066c:	210a      	movs	r1, #10
 800066e:	4628      	mov	r0, r5
 8000670:	f000 f848 	bl	8000704 <__swbuf_r>
 8000674:	3001      	adds	r0, #1
 8000676:	d011      	beq.n	800069c <_puts_r+0x84>
 8000678:	250a      	movs	r5, #10
 800067a:	e011      	b.n	80006a0 <_puts_r+0x88>
 800067c:	4b1b      	ldr	r3, [pc, #108]	; (80006ec <_puts_r+0xd4>)
 800067e:	429c      	cmp	r4, r3
 8000680:	d101      	bne.n	8000686 <_puts_r+0x6e>
 8000682:	68ac      	ldr	r4, [r5, #8]
 8000684:	e7da      	b.n	800063c <_puts_r+0x24>
 8000686:	4b1a      	ldr	r3, [pc, #104]	; (80006f0 <_puts_r+0xd8>)
 8000688:	429c      	cmp	r4, r3
 800068a:	bf08      	it	eq
 800068c:	68ec      	ldreq	r4, [r5, #12]
 800068e:	e7d5      	b.n	800063c <_puts_r+0x24>
 8000690:	4621      	mov	r1, r4
 8000692:	4628      	mov	r0, r5
 8000694:	f000 f888 	bl	80007a8 <__swsetup_r>
 8000698:	2800      	cmp	r0, #0
 800069a:	d0dd      	beq.n	8000658 <_puts_r+0x40>
 800069c:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 80006a0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80006a2:	07da      	lsls	r2, r3, #31
 80006a4:	d405      	bmi.n	80006b2 <_puts_r+0x9a>
 80006a6:	89a3      	ldrh	r3, [r4, #12]
 80006a8:	059b      	lsls	r3, r3, #22
 80006aa:	d402      	bmi.n	80006b2 <_puts_r+0x9a>
 80006ac:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80006ae:	f000 faa2 	bl	8000bf6 <__retarget_lock_release_recursive>
 80006b2:	4628      	mov	r0, r5
 80006b4:	bd70      	pop	{r4, r5, r6, pc}
 80006b6:	2b00      	cmp	r3, #0
 80006b8:	da04      	bge.n	80006c4 <_puts_r+0xac>
 80006ba:	69a2      	ldr	r2, [r4, #24]
 80006bc:	429a      	cmp	r2, r3
 80006be:	dc06      	bgt.n	80006ce <_puts_r+0xb6>
 80006c0:	290a      	cmp	r1, #10
 80006c2:	d004      	beq.n	80006ce <_puts_r+0xb6>
 80006c4:	6823      	ldr	r3, [r4, #0]
 80006c6:	1c5a      	adds	r2, r3, #1
 80006c8:	6022      	str	r2, [r4, #0]
 80006ca:	7019      	strb	r1, [r3, #0]
 80006cc:	e7c5      	b.n	800065a <_puts_r+0x42>
 80006ce:	4622      	mov	r2, r4
 80006d0:	4628      	mov	r0, r5
 80006d2:	f000 f817 	bl	8000704 <__swbuf_r>
 80006d6:	3001      	adds	r0, #1
 80006d8:	d1bf      	bne.n	800065a <_puts_r+0x42>
 80006da:	e7df      	b.n	800069c <_puts_r+0x84>
 80006dc:	6823      	ldr	r3, [r4, #0]
 80006de:	250a      	movs	r5, #10
 80006e0:	1c5a      	adds	r2, r3, #1
 80006e2:	6022      	str	r2, [r4, #0]
 80006e4:	701d      	strb	r5, [r3, #0]
 80006e6:	e7db      	b.n	80006a0 <_puts_r+0x88>
 80006e8:	0800164c 	.word	0x0800164c
 80006ec:	0800166c 	.word	0x0800166c
 80006f0:	0800162c 	.word	0x0800162c

080006f4 <puts>:
 80006f4:	4b02      	ldr	r3, [pc, #8]	; (8000700 <puts+0xc>)
 80006f6:	4601      	mov	r1, r0
 80006f8:	6818      	ldr	r0, [r3, #0]
 80006fa:	f7ff bf8d 	b.w	8000618 <_puts_r>
 80006fe:	bf00      	nop
 8000700:	20000000 	.word	0x20000000

08000704 <__swbuf_r>:
 8000704:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000706:	460e      	mov	r6, r1
 8000708:	4614      	mov	r4, r2
 800070a:	4605      	mov	r5, r0
 800070c:	b118      	cbz	r0, 8000716 <__swbuf_r+0x12>
 800070e:	6983      	ldr	r3, [r0, #24]
 8000710:	b90b      	cbnz	r3, 8000716 <__swbuf_r+0x12>
 8000712:	f000 f9d1 	bl	8000ab8 <__sinit>
 8000716:	4b21      	ldr	r3, [pc, #132]	; (800079c <__swbuf_r+0x98>)
 8000718:	429c      	cmp	r4, r3
 800071a:	d12b      	bne.n	8000774 <__swbuf_r+0x70>
 800071c:	686c      	ldr	r4, [r5, #4]
 800071e:	69a3      	ldr	r3, [r4, #24]
 8000720:	60a3      	str	r3, [r4, #8]
 8000722:	89a3      	ldrh	r3, [r4, #12]
 8000724:	071a      	lsls	r2, r3, #28
 8000726:	d52f      	bpl.n	8000788 <__swbuf_r+0x84>
 8000728:	6923      	ldr	r3, [r4, #16]
 800072a:	b36b      	cbz	r3, 8000788 <__swbuf_r+0x84>
 800072c:	6923      	ldr	r3, [r4, #16]
 800072e:	6820      	ldr	r0, [r4, #0]
 8000730:	1ac0      	subs	r0, r0, r3
 8000732:	6963      	ldr	r3, [r4, #20]
 8000734:	b2f6      	uxtb	r6, r6
 8000736:	4283      	cmp	r3, r0
 8000738:	4637      	mov	r7, r6
 800073a:	dc04      	bgt.n	8000746 <__swbuf_r+0x42>
 800073c:	4621      	mov	r1, r4
 800073e:	4628      	mov	r0, r5
 8000740:	f000 f926 	bl	8000990 <_fflush_r>
 8000744:	bb30      	cbnz	r0, 8000794 <__swbuf_r+0x90>
 8000746:	68a3      	ldr	r3, [r4, #8]
 8000748:	3b01      	subs	r3, #1
 800074a:	60a3      	str	r3, [r4, #8]
 800074c:	6823      	ldr	r3, [r4, #0]
 800074e:	1c5a      	adds	r2, r3, #1
 8000750:	6022      	str	r2, [r4, #0]
 8000752:	701e      	strb	r6, [r3, #0]
 8000754:	6963      	ldr	r3, [r4, #20]
 8000756:	3001      	adds	r0, #1
 8000758:	4283      	cmp	r3, r0
 800075a:	d004      	beq.n	8000766 <__swbuf_r+0x62>
 800075c:	89a3      	ldrh	r3, [r4, #12]
 800075e:	07db      	lsls	r3, r3, #31
 8000760:	d506      	bpl.n	8000770 <__swbuf_r+0x6c>
 8000762:	2e0a      	cmp	r6, #10
 8000764:	d104      	bne.n	8000770 <__swbuf_r+0x6c>
 8000766:	4621      	mov	r1, r4
 8000768:	4628      	mov	r0, r5
 800076a:	f000 f911 	bl	8000990 <_fflush_r>
 800076e:	b988      	cbnz	r0, 8000794 <__swbuf_r+0x90>
 8000770:	4638      	mov	r0, r7
 8000772:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000774:	4b0a      	ldr	r3, [pc, #40]	; (80007a0 <__swbuf_r+0x9c>)
 8000776:	429c      	cmp	r4, r3
 8000778:	d101      	bne.n	800077e <__swbuf_r+0x7a>
 800077a:	68ac      	ldr	r4, [r5, #8]
 800077c:	e7cf      	b.n	800071e <__swbuf_r+0x1a>
 800077e:	4b09      	ldr	r3, [pc, #36]	; (80007a4 <__swbuf_r+0xa0>)
 8000780:	429c      	cmp	r4, r3
 8000782:	bf08      	it	eq
 8000784:	68ec      	ldreq	r4, [r5, #12]
 8000786:	e7ca      	b.n	800071e <__swbuf_r+0x1a>
 8000788:	4621      	mov	r1, r4
 800078a:	4628      	mov	r0, r5
 800078c:	f000 f80c 	bl	80007a8 <__swsetup_r>
 8000790:	2800      	cmp	r0, #0
 8000792:	d0cb      	beq.n	800072c <__swbuf_r+0x28>
 8000794:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8000798:	e7ea      	b.n	8000770 <__swbuf_r+0x6c>
 800079a:	bf00      	nop
 800079c:	0800164c 	.word	0x0800164c
 80007a0:	0800166c 	.word	0x0800166c
 80007a4:	0800162c 	.word	0x0800162c

080007a8 <__swsetup_r>:
 80007a8:	4b32      	ldr	r3, [pc, #200]	; (8000874 <__swsetup_r+0xcc>)
 80007aa:	b570      	push	{r4, r5, r6, lr}
 80007ac:	681d      	ldr	r5, [r3, #0]
 80007ae:	4606      	mov	r6, r0
 80007b0:	460c      	mov	r4, r1
 80007b2:	b125      	cbz	r5, 80007be <__swsetup_r+0x16>
 80007b4:	69ab      	ldr	r3, [r5, #24]
 80007b6:	b913      	cbnz	r3, 80007be <__swsetup_r+0x16>
 80007b8:	4628      	mov	r0, r5
 80007ba:	f000 f97d 	bl	8000ab8 <__sinit>
 80007be:	4b2e      	ldr	r3, [pc, #184]	; (8000878 <__swsetup_r+0xd0>)
 80007c0:	429c      	cmp	r4, r3
 80007c2:	d10f      	bne.n	80007e4 <__swsetup_r+0x3c>
 80007c4:	686c      	ldr	r4, [r5, #4]
 80007c6:	89a3      	ldrh	r3, [r4, #12]
 80007c8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80007cc:	0719      	lsls	r1, r3, #28
 80007ce:	d42c      	bmi.n	800082a <__swsetup_r+0x82>
 80007d0:	06dd      	lsls	r5, r3, #27
 80007d2:	d411      	bmi.n	80007f8 <__swsetup_r+0x50>
 80007d4:	2309      	movs	r3, #9
 80007d6:	6033      	str	r3, [r6, #0]
 80007d8:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80007dc:	81a3      	strh	r3, [r4, #12]
 80007de:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80007e2:	e03e      	b.n	8000862 <__swsetup_r+0xba>
 80007e4:	4b25      	ldr	r3, [pc, #148]	; (800087c <__swsetup_r+0xd4>)
 80007e6:	429c      	cmp	r4, r3
 80007e8:	d101      	bne.n	80007ee <__swsetup_r+0x46>
 80007ea:	68ac      	ldr	r4, [r5, #8]
 80007ec:	e7eb      	b.n	80007c6 <__swsetup_r+0x1e>
 80007ee:	4b24      	ldr	r3, [pc, #144]	; (8000880 <__swsetup_r+0xd8>)
 80007f0:	429c      	cmp	r4, r3
 80007f2:	bf08      	it	eq
 80007f4:	68ec      	ldreq	r4, [r5, #12]
 80007f6:	e7e6      	b.n	80007c6 <__swsetup_r+0x1e>
 80007f8:	0758      	lsls	r0, r3, #29
 80007fa:	d512      	bpl.n	8000822 <__swsetup_r+0x7a>
 80007fc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80007fe:	b141      	cbz	r1, 8000812 <__swsetup_r+0x6a>
 8000800:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000804:	4299      	cmp	r1, r3
 8000806:	d002      	beq.n	800080e <__swsetup_r+0x66>
 8000808:	4630      	mov	r0, r6
 800080a:	f000 fa59 	bl	8000cc0 <_free_r>
 800080e:	2300      	movs	r3, #0
 8000810:	6363      	str	r3, [r4, #52]	; 0x34
 8000812:	89a3      	ldrh	r3, [r4, #12]
 8000814:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000818:	81a3      	strh	r3, [r4, #12]
 800081a:	2300      	movs	r3, #0
 800081c:	6063      	str	r3, [r4, #4]
 800081e:	6923      	ldr	r3, [r4, #16]
 8000820:	6023      	str	r3, [r4, #0]
 8000822:	89a3      	ldrh	r3, [r4, #12]
 8000824:	f043 0308 	orr.w	r3, r3, #8
 8000828:	81a3      	strh	r3, [r4, #12]
 800082a:	6923      	ldr	r3, [r4, #16]
 800082c:	b94b      	cbnz	r3, 8000842 <__swsetup_r+0x9a>
 800082e:	89a3      	ldrh	r3, [r4, #12]
 8000830:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000834:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000838:	d003      	beq.n	8000842 <__swsetup_r+0x9a>
 800083a:	4621      	mov	r1, r4
 800083c:	4630      	mov	r0, r6
 800083e:	f000 f9ff 	bl	8000c40 <__smakebuf_r>
 8000842:	89a0      	ldrh	r0, [r4, #12]
 8000844:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000848:	f010 0301 	ands.w	r3, r0, #1
 800084c:	d00a      	beq.n	8000864 <__swsetup_r+0xbc>
 800084e:	2300      	movs	r3, #0
 8000850:	60a3      	str	r3, [r4, #8]
 8000852:	6963      	ldr	r3, [r4, #20]
 8000854:	425b      	negs	r3, r3
 8000856:	61a3      	str	r3, [r4, #24]
 8000858:	6923      	ldr	r3, [r4, #16]
 800085a:	b943      	cbnz	r3, 800086e <__swsetup_r+0xc6>
 800085c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000860:	d1ba      	bne.n	80007d8 <__swsetup_r+0x30>
 8000862:	bd70      	pop	{r4, r5, r6, pc}
 8000864:	0781      	lsls	r1, r0, #30
 8000866:	bf58      	it	pl
 8000868:	6963      	ldrpl	r3, [r4, #20]
 800086a:	60a3      	str	r3, [r4, #8]
 800086c:	e7f4      	b.n	8000858 <__swsetup_r+0xb0>
 800086e:	2000      	movs	r0, #0
 8000870:	e7f7      	b.n	8000862 <__swsetup_r+0xba>
 8000872:	bf00      	nop
 8000874:	20000000 	.word	0x20000000
 8000878:	0800164c 	.word	0x0800164c
 800087c:	0800166c 	.word	0x0800166c
 8000880:	0800162c 	.word	0x0800162c

08000884 <__sflush_r>:
 8000884:	898a      	ldrh	r2, [r1, #12]
 8000886:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800088a:	4605      	mov	r5, r0
 800088c:	0710      	lsls	r0, r2, #28
 800088e:	460c      	mov	r4, r1
 8000890:	d458      	bmi.n	8000944 <__sflush_r+0xc0>
 8000892:	684b      	ldr	r3, [r1, #4]
 8000894:	2b00      	cmp	r3, #0
 8000896:	dc05      	bgt.n	80008a4 <__sflush_r+0x20>
 8000898:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800089a:	2b00      	cmp	r3, #0
 800089c:	dc02      	bgt.n	80008a4 <__sflush_r+0x20>
 800089e:	2000      	movs	r0, #0
 80008a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80008a4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008a6:	2e00      	cmp	r6, #0
 80008a8:	d0f9      	beq.n	800089e <__sflush_r+0x1a>
 80008aa:	2300      	movs	r3, #0
 80008ac:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80008b0:	682f      	ldr	r7, [r5, #0]
 80008b2:	602b      	str	r3, [r5, #0]
 80008b4:	d032      	beq.n	800091c <__sflush_r+0x98>
 80008b6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80008b8:	89a3      	ldrh	r3, [r4, #12]
 80008ba:	075a      	lsls	r2, r3, #29
 80008bc:	d505      	bpl.n	80008ca <__sflush_r+0x46>
 80008be:	6863      	ldr	r3, [r4, #4]
 80008c0:	1ac0      	subs	r0, r0, r3
 80008c2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80008c4:	b10b      	cbz	r3, 80008ca <__sflush_r+0x46>
 80008c6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80008c8:	1ac0      	subs	r0, r0, r3
 80008ca:	2300      	movs	r3, #0
 80008cc:	4602      	mov	r2, r0
 80008ce:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008d0:	6a21      	ldr	r1, [r4, #32]
 80008d2:	4628      	mov	r0, r5
 80008d4:	47b0      	blx	r6
 80008d6:	1c43      	adds	r3, r0, #1
 80008d8:	89a3      	ldrh	r3, [r4, #12]
 80008da:	d106      	bne.n	80008ea <__sflush_r+0x66>
 80008dc:	6829      	ldr	r1, [r5, #0]
 80008de:	291d      	cmp	r1, #29
 80008e0:	d82c      	bhi.n	800093c <__sflush_r+0xb8>
 80008e2:	4a2a      	ldr	r2, [pc, #168]	; (800098c <__sflush_r+0x108>)
 80008e4:	40ca      	lsrs	r2, r1
 80008e6:	07d6      	lsls	r6, r2, #31
 80008e8:	d528      	bpl.n	800093c <__sflush_r+0xb8>
 80008ea:	2200      	movs	r2, #0
 80008ec:	6062      	str	r2, [r4, #4]
 80008ee:	04d9      	lsls	r1, r3, #19
 80008f0:	6922      	ldr	r2, [r4, #16]
 80008f2:	6022      	str	r2, [r4, #0]
 80008f4:	d504      	bpl.n	8000900 <__sflush_r+0x7c>
 80008f6:	1c42      	adds	r2, r0, #1
 80008f8:	d101      	bne.n	80008fe <__sflush_r+0x7a>
 80008fa:	682b      	ldr	r3, [r5, #0]
 80008fc:	b903      	cbnz	r3, 8000900 <__sflush_r+0x7c>
 80008fe:	6560      	str	r0, [r4, #84]	; 0x54
 8000900:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000902:	602f      	str	r7, [r5, #0]
 8000904:	2900      	cmp	r1, #0
 8000906:	d0ca      	beq.n	800089e <__sflush_r+0x1a>
 8000908:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800090c:	4299      	cmp	r1, r3
 800090e:	d002      	beq.n	8000916 <__sflush_r+0x92>
 8000910:	4628      	mov	r0, r5
 8000912:	f000 f9d5 	bl	8000cc0 <_free_r>
 8000916:	2000      	movs	r0, #0
 8000918:	6360      	str	r0, [r4, #52]	; 0x34
 800091a:	e7c1      	b.n	80008a0 <__sflush_r+0x1c>
 800091c:	6a21      	ldr	r1, [r4, #32]
 800091e:	2301      	movs	r3, #1
 8000920:	4628      	mov	r0, r5
 8000922:	47b0      	blx	r6
 8000924:	1c41      	adds	r1, r0, #1
 8000926:	d1c7      	bne.n	80008b8 <__sflush_r+0x34>
 8000928:	682b      	ldr	r3, [r5, #0]
 800092a:	2b00      	cmp	r3, #0
 800092c:	d0c4      	beq.n	80008b8 <__sflush_r+0x34>
 800092e:	2b1d      	cmp	r3, #29
 8000930:	d001      	beq.n	8000936 <__sflush_r+0xb2>
 8000932:	2b16      	cmp	r3, #22
 8000934:	d101      	bne.n	800093a <__sflush_r+0xb6>
 8000936:	602f      	str	r7, [r5, #0]
 8000938:	e7b1      	b.n	800089e <__sflush_r+0x1a>
 800093a:	89a3      	ldrh	r3, [r4, #12]
 800093c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000940:	81a3      	strh	r3, [r4, #12]
 8000942:	e7ad      	b.n	80008a0 <__sflush_r+0x1c>
 8000944:	690f      	ldr	r7, [r1, #16]
 8000946:	2f00      	cmp	r7, #0
 8000948:	d0a9      	beq.n	800089e <__sflush_r+0x1a>
 800094a:	0793      	lsls	r3, r2, #30
 800094c:	680e      	ldr	r6, [r1, #0]
 800094e:	bf08      	it	eq
 8000950:	694b      	ldreq	r3, [r1, #20]
 8000952:	600f      	str	r7, [r1, #0]
 8000954:	bf18      	it	ne
 8000956:	2300      	movne	r3, #0
 8000958:	eba6 0807 	sub.w	r8, r6, r7
 800095c:	608b      	str	r3, [r1, #8]
 800095e:	f1b8 0f00 	cmp.w	r8, #0
 8000962:	dd9c      	ble.n	800089e <__sflush_r+0x1a>
 8000964:	6a21      	ldr	r1, [r4, #32]
 8000966:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000968:	4643      	mov	r3, r8
 800096a:	463a      	mov	r2, r7
 800096c:	4628      	mov	r0, r5
 800096e:	47b0      	blx	r6
 8000970:	2800      	cmp	r0, #0
 8000972:	dc06      	bgt.n	8000982 <__sflush_r+0xfe>
 8000974:	89a3      	ldrh	r3, [r4, #12]
 8000976:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800097a:	81a3      	strh	r3, [r4, #12]
 800097c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000980:	e78e      	b.n	80008a0 <__sflush_r+0x1c>
 8000982:	4407      	add	r7, r0
 8000984:	eba8 0800 	sub.w	r8, r8, r0
 8000988:	e7e9      	b.n	800095e <__sflush_r+0xda>
 800098a:	bf00      	nop
 800098c:	20400001 	.word	0x20400001

08000990 <_fflush_r>:
 8000990:	b538      	push	{r3, r4, r5, lr}
 8000992:	690b      	ldr	r3, [r1, #16]
 8000994:	4605      	mov	r5, r0
 8000996:	460c      	mov	r4, r1
 8000998:	b913      	cbnz	r3, 80009a0 <_fflush_r+0x10>
 800099a:	2500      	movs	r5, #0
 800099c:	4628      	mov	r0, r5
 800099e:	bd38      	pop	{r3, r4, r5, pc}
 80009a0:	b118      	cbz	r0, 80009aa <_fflush_r+0x1a>
 80009a2:	6983      	ldr	r3, [r0, #24]
 80009a4:	b90b      	cbnz	r3, 80009aa <_fflush_r+0x1a>
 80009a6:	f000 f887 	bl	8000ab8 <__sinit>
 80009aa:	4b14      	ldr	r3, [pc, #80]	; (80009fc <_fflush_r+0x6c>)
 80009ac:	429c      	cmp	r4, r3
 80009ae:	d11b      	bne.n	80009e8 <_fflush_r+0x58>
 80009b0:	686c      	ldr	r4, [r5, #4]
 80009b2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80009b6:	2b00      	cmp	r3, #0
 80009b8:	d0ef      	beq.n	800099a <_fflush_r+0xa>
 80009ba:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80009bc:	07d0      	lsls	r0, r2, #31
 80009be:	d404      	bmi.n	80009ca <_fflush_r+0x3a>
 80009c0:	0599      	lsls	r1, r3, #22
 80009c2:	d402      	bmi.n	80009ca <_fflush_r+0x3a>
 80009c4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80009c6:	f000 f915 	bl	8000bf4 <__retarget_lock_acquire_recursive>
 80009ca:	4628      	mov	r0, r5
 80009cc:	4621      	mov	r1, r4
 80009ce:	f7ff ff59 	bl	8000884 <__sflush_r>
 80009d2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80009d4:	07da      	lsls	r2, r3, #31
 80009d6:	4605      	mov	r5, r0
 80009d8:	d4e0      	bmi.n	800099c <_fflush_r+0xc>
 80009da:	89a3      	ldrh	r3, [r4, #12]
 80009dc:	059b      	lsls	r3, r3, #22
 80009de:	d4dd      	bmi.n	800099c <_fflush_r+0xc>
 80009e0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80009e2:	f000 f908 	bl	8000bf6 <__retarget_lock_release_recursive>
 80009e6:	e7d9      	b.n	800099c <_fflush_r+0xc>
 80009e8:	4b05      	ldr	r3, [pc, #20]	; (8000a00 <_fflush_r+0x70>)
 80009ea:	429c      	cmp	r4, r3
 80009ec:	d101      	bne.n	80009f2 <_fflush_r+0x62>
 80009ee:	68ac      	ldr	r4, [r5, #8]
 80009f0:	e7df      	b.n	80009b2 <_fflush_r+0x22>
 80009f2:	4b04      	ldr	r3, [pc, #16]	; (8000a04 <_fflush_r+0x74>)
 80009f4:	429c      	cmp	r4, r3
 80009f6:	bf08      	it	eq
 80009f8:	68ec      	ldreq	r4, [r5, #12]
 80009fa:	e7da      	b.n	80009b2 <_fflush_r+0x22>
 80009fc:	0800164c 	.word	0x0800164c
 8000a00:	0800166c 	.word	0x0800166c
 8000a04:	0800162c 	.word	0x0800162c

08000a08 <std>:
 8000a08:	2300      	movs	r3, #0
 8000a0a:	b510      	push	{r4, lr}
 8000a0c:	4604      	mov	r4, r0
 8000a0e:	e9c0 3300 	strd	r3, r3, [r0]
 8000a12:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000a16:	6083      	str	r3, [r0, #8]
 8000a18:	8181      	strh	r1, [r0, #12]
 8000a1a:	6643      	str	r3, [r0, #100]	; 0x64
 8000a1c:	81c2      	strh	r2, [r0, #14]
 8000a1e:	6183      	str	r3, [r0, #24]
 8000a20:	4619      	mov	r1, r3
 8000a22:	2208      	movs	r2, #8
 8000a24:	305c      	adds	r0, #92	; 0x5c
 8000a26:	f7ff fdd7 	bl	80005d8 <memset>
 8000a2a:	4b05      	ldr	r3, [pc, #20]	; (8000a40 <std+0x38>)
 8000a2c:	6263      	str	r3, [r4, #36]	; 0x24
 8000a2e:	4b05      	ldr	r3, [pc, #20]	; (8000a44 <std+0x3c>)
 8000a30:	62a3      	str	r3, [r4, #40]	; 0x28
 8000a32:	4b05      	ldr	r3, [pc, #20]	; (8000a48 <std+0x40>)
 8000a34:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000a36:	4b05      	ldr	r3, [pc, #20]	; (8000a4c <std+0x44>)
 8000a38:	6224      	str	r4, [r4, #32]
 8000a3a:	6323      	str	r3, [r4, #48]	; 0x30
 8000a3c:	bd10      	pop	{r4, pc}
 8000a3e:	bf00      	nop
 8000a40:	08001411 	.word	0x08001411
 8000a44:	08001433 	.word	0x08001433
 8000a48:	0800146b 	.word	0x0800146b
 8000a4c:	0800148f 	.word	0x0800148f

08000a50 <_cleanup_r>:
 8000a50:	4901      	ldr	r1, [pc, #4]	; (8000a58 <_cleanup_r+0x8>)
 8000a52:	f000 b8af 	b.w	8000bb4 <_fwalk_reent>
 8000a56:	bf00      	nop
 8000a58:	08000991 	.word	0x08000991

08000a5c <__sfmoreglue>:
 8000a5c:	b570      	push	{r4, r5, r6, lr}
 8000a5e:	1e4a      	subs	r2, r1, #1
 8000a60:	2568      	movs	r5, #104	; 0x68
 8000a62:	4355      	muls	r5, r2
 8000a64:	460e      	mov	r6, r1
 8000a66:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000a6a:	f000 f979 	bl	8000d60 <_malloc_r>
 8000a6e:	4604      	mov	r4, r0
 8000a70:	b140      	cbz	r0, 8000a84 <__sfmoreglue+0x28>
 8000a72:	2100      	movs	r1, #0
 8000a74:	e9c0 1600 	strd	r1, r6, [r0]
 8000a78:	300c      	adds	r0, #12
 8000a7a:	60a0      	str	r0, [r4, #8]
 8000a7c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000a80:	f7ff fdaa 	bl	80005d8 <memset>
 8000a84:	4620      	mov	r0, r4
 8000a86:	bd70      	pop	{r4, r5, r6, pc}

08000a88 <__sfp_lock_acquire>:
 8000a88:	4801      	ldr	r0, [pc, #4]	; (8000a90 <__sfp_lock_acquire+0x8>)
 8000a8a:	f000 b8b3 	b.w	8000bf4 <__retarget_lock_acquire_recursive>
 8000a8e:	bf00      	nop
 8000a90:	20000094 	.word	0x20000094

08000a94 <__sfp_lock_release>:
 8000a94:	4801      	ldr	r0, [pc, #4]	; (8000a9c <__sfp_lock_release+0x8>)
 8000a96:	f000 b8ae 	b.w	8000bf6 <__retarget_lock_release_recursive>
 8000a9a:	bf00      	nop
 8000a9c:	20000094 	.word	0x20000094

08000aa0 <__sinit_lock_acquire>:
 8000aa0:	4801      	ldr	r0, [pc, #4]	; (8000aa8 <__sinit_lock_acquire+0x8>)
 8000aa2:	f000 b8a7 	b.w	8000bf4 <__retarget_lock_acquire_recursive>
 8000aa6:	bf00      	nop
 8000aa8:	2000008f 	.word	0x2000008f

08000aac <__sinit_lock_release>:
 8000aac:	4801      	ldr	r0, [pc, #4]	; (8000ab4 <__sinit_lock_release+0x8>)
 8000aae:	f000 b8a2 	b.w	8000bf6 <__retarget_lock_release_recursive>
 8000ab2:	bf00      	nop
 8000ab4:	2000008f 	.word	0x2000008f

08000ab8 <__sinit>:
 8000ab8:	b510      	push	{r4, lr}
 8000aba:	4604      	mov	r4, r0
 8000abc:	f7ff fff0 	bl	8000aa0 <__sinit_lock_acquire>
 8000ac0:	69a3      	ldr	r3, [r4, #24]
 8000ac2:	b11b      	cbz	r3, 8000acc <__sinit+0x14>
 8000ac4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000ac8:	f7ff bff0 	b.w	8000aac <__sinit_lock_release>
 8000acc:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000ad0:	6523      	str	r3, [r4, #80]	; 0x50
 8000ad2:	4b13      	ldr	r3, [pc, #76]	; (8000b20 <__sinit+0x68>)
 8000ad4:	4a13      	ldr	r2, [pc, #76]	; (8000b24 <__sinit+0x6c>)
 8000ad6:	681b      	ldr	r3, [r3, #0]
 8000ad8:	62a2      	str	r2, [r4, #40]	; 0x28
 8000ada:	42a3      	cmp	r3, r4
 8000adc:	bf04      	itt	eq
 8000ade:	2301      	moveq	r3, #1
 8000ae0:	61a3      	streq	r3, [r4, #24]
 8000ae2:	4620      	mov	r0, r4
 8000ae4:	f000 f820 	bl	8000b28 <__sfp>
 8000ae8:	6060      	str	r0, [r4, #4]
 8000aea:	4620      	mov	r0, r4
 8000aec:	f000 f81c 	bl	8000b28 <__sfp>
 8000af0:	60a0      	str	r0, [r4, #8]
 8000af2:	4620      	mov	r0, r4
 8000af4:	f000 f818 	bl	8000b28 <__sfp>
 8000af8:	2200      	movs	r2, #0
 8000afa:	60e0      	str	r0, [r4, #12]
 8000afc:	2104      	movs	r1, #4
 8000afe:	6860      	ldr	r0, [r4, #4]
 8000b00:	f7ff ff82 	bl	8000a08 <std>
 8000b04:	68a0      	ldr	r0, [r4, #8]
 8000b06:	2201      	movs	r2, #1
 8000b08:	2109      	movs	r1, #9
 8000b0a:	f7ff ff7d 	bl	8000a08 <std>
 8000b0e:	68e0      	ldr	r0, [r4, #12]
 8000b10:	2202      	movs	r2, #2
 8000b12:	2112      	movs	r1, #18
 8000b14:	f7ff ff78 	bl	8000a08 <std>
 8000b18:	2301      	movs	r3, #1
 8000b1a:	61a3      	str	r3, [r4, #24]
 8000b1c:	e7d2      	b.n	8000ac4 <__sinit+0xc>
 8000b1e:	bf00      	nop
 8000b20:	08001628 	.word	0x08001628
 8000b24:	08000a51 	.word	0x08000a51

08000b28 <__sfp>:
 8000b28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b2a:	4607      	mov	r7, r0
 8000b2c:	f7ff ffac 	bl	8000a88 <__sfp_lock_acquire>
 8000b30:	4b1e      	ldr	r3, [pc, #120]	; (8000bac <__sfp+0x84>)
 8000b32:	681e      	ldr	r6, [r3, #0]
 8000b34:	69b3      	ldr	r3, [r6, #24]
 8000b36:	b913      	cbnz	r3, 8000b3e <__sfp+0x16>
 8000b38:	4630      	mov	r0, r6
 8000b3a:	f7ff ffbd 	bl	8000ab8 <__sinit>
 8000b3e:	3648      	adds	r6, #72	; 0x48
 8000b40:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000b44:	3b01      	subs	r3, #1
 8000b46:	d503      	bpl.n	8000b50 <__sfp+0x28>
 8000b48:	6833      	ldr	r3, [r6, #0]
 8000b4a:	b30b      	cbz	r3, 8000b90 <__sfp+0x68>
 8000b4c:	6836      	ldr	r6, [r6, #0]
 8000b4e:	e7f7      	b.n	8000b40 <__sfp+0x18>
 8000b50:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000b54:	b9d5      	cbnz	r5, 8000b8c <__sfp+0x64>
 8000b56:	4b16      	ldr	r3, [pc, #88]	; (8000bb0 <__sfp+0x88>)
 8000b58:	60e3      	str	r3, [r4, #12]
 8000b5a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000b5e:	6665      	str	r5, [r4, #100]	; 0x64
 8000b60:	f000 f847 	bl	8000bf2 <__retarget_lock_init_recursive>
 8000b64:	f7ff ff96 	bl	8000a94 <__sfp_lock_release>
 8000b68:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000b6c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000b70:	6025      	str	r5, [r4, #0]
 8000b72:	61a5      	str	r5, [r4, #24]
 8000b74:	2208      	movs	r2, #8
 8000b76:	4629      	mov	r1, r5
 8000b78:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000b7c:	f7ff fd2c 	bl	80005d8 <memset>
 8000b80:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000b84:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000b88:	4620      	mov	r0, r4
 8000b8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b8c:	3468      	adds	r4, #104	; 0x68
 8000b8e:	e7d9      	b.n	8000b44 <__sfp+0x1c>
 8000b90:	2104      	movs	r1, #4
 8000b92:	4638      	mov	r0, r7
 8000b94:	f7ff ff62 	bl	8000a5c <__sfmoreglue>
 8000b98:	4604      	mov	r4, r0
 8000b9a:	6030      	str	r0, [r6, #0]
 8000b9c:	2800      	cmp	r0, #0
 8000b9e:	d1d5      	bne.n	8000b4c <__sfp+0x24>
 8000ba0:	f7ff ff78 	bl	8000a94 <__sfp_lock_release>
 8000ba4:	230c      	movs	r3, #12
 8000ba6:	603b      	str	r3, [r7, #0]
 8000ba8:	e7ee      	b.n	8000b88 <__sfp+0x60>
 8000baa:	bf00      	nop
 8000bac:	08001628 	.word	0x08001628
 8000bb0:	ffff0001 	.word	0xffff0001

08000bb4 <_fwalk_reent>:
 8000bb4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000bb8:	4606      	mov	r6, r0
 8000bba:	4688      	mov	r8, r1
 8000bbc:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000bc0:	2700      	movs	r7, #0
 8000bc2:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000bc6:	f1b9 0901 	subs.w	r9, r9, #1
 8000bca:	d505      	bpl.n	8000bd8 <_fwalk_reent+0x24>
 8000bcc:	6824      	ldr	r4, [r4, #0]
 8000bce:	2c00      	cmp	r4, #0
 8000bd0:	d1f7      	bne.n	8000bc2 <_fwalk_reent+0xe>
 8000bd2:	4638      	mov	r0, r7
 8000bd4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000bd8:	89ab      	ldrh	r3, [r5, #12]
 8000bda:	2b01      	cmp	r3, #1
 8000bdc:	d907      	bls.n	8000bee <_fwalk_reent+0x3a>
 8000bde:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000be2:	3301      	adds	r3, #1
 8000be4:	d003      	beq.n	8000bee <_fwalk_reent+0x3a>
 8000be6:	4629      	mov	r1, r5
 8000be8:	4630      	mov	r0, r6
 8000bea:	47c0      	blx	r8
 8000bec:	4307      	orrs	r7, r0
 8000bee:	3568      	adds	r5, #104	; 0x68
 8000bf0:	e7e9      	b.n	8000bc6 <_fwalk_reent+0x12>

08000bf2 <__retarget_lock_init_recursive>:
 8000bf2:	4770      	bx	lr

08000bf4 <__retarget_lock_acquire_recursive>:
 8000bf4:	4770      	bx	lr

08000bf6 <__retarget_lock_release_recursive>:
 8000bf6:	4770      	bx	lr

08000bf8 <__swhatbuf_r>:
 8000bf8:	b570      	push	{r4, r5, r6, lr}
 8000bfa:	460e      	mov	r6, r1
 8000bfc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c00:	2900      	cmp	r1, #0
 8000c02:	b096      	sub	sp, #88	; 0x58
 8000c04:	4614      	mov	r4, r2
 8000c06:	461d      	mov	r5, r3
 8000c08:	da07      	bge.n	8000c1a <__swhatbuf_r+0x22>
 8000c0a:	2300      	movs	r3, #0
 8000c0c:	602b      	str	r3, [r5, #0]
 8000c0e:	89b3      	ldrh	r3, [r6, #12]
 8000c10:	061a      	lsls	r2, r3, #24
 8000c12:	d410      	bmi.n	8000c36 <__swhatbuf_r+0x3e>
 8000c14:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000c18:	e00e      	b.n	8000c38 <__swhatbuf_r+0x40>
 8000c1a:	466a      	mov	r2, sp
 8000c1c:	f000 fc5e 	bl	80014dc <_fstat_r>
 8000c20:	2800      	cmp	r0, #0
 8000c22:	dbf2      	blt.n	8000c0a <__swhatbuf_r+0x12>
 8000c24:	9a01      	ldr	r2, [sp, #4]
 8000c26:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000c2a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000c2e:	425a      	negs	r2, r3
 8000c30:	415a      	adcs	r2, r3
 8000c32:	602a      	str	r2, [r5, #0]
 8000c34:	e7ee      	b.n	8000c14 <__swhatbuf_r+0x1c>
 8000c36:	2340      	movs	r3, #64	; 0x40
 8000c38:	2000      	movs	r0, #0
 8000c3a:	6023      	str	r3, [r4, #0]
 8000c3c:	b016      	add	sp, #88	; 0x58
 8000c3e:	bd70      	pop	{r4, r5, r6, pc}

08000c40 <__smakebuf_r>:
 8000c40:	898b      	ldrh	r3, [r1, #12]
 8000c42:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000c44:	079d      	lsls	r5, r3, #30
 8000c46:	4606      	mov	r6, r0
 8000c48:	460c      	mov	r4, r1
 8000c4a:	d507      	bpl.n	8000c5c <__smakebuf_r+0x1c>
 8000c4c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000c50:	6023      	str	r3, [r4, #0]
 8000c52:	6123      	str	r3, [r4, #16]
 8000c54:	2301      	movs	r3, #1
 8000c56:	6163      	str	r3, [r4, #20]
 8000c58:	b002      	add	sp, #8
 8000c5a:	bd70      	pop	{r4, r5, r6, pc}
 8000c5c:	ab01      	add	r3, sp, #4
 8000c5e:	466a      	mov	r2, sp
 8000c60:	f7ff ffca 	bl	8000bf8 <__swhatbuf_r>
 8000c64:	9900      	ldr	r1, [sp, #0]
 8000c66:	4605      	mov	r5, r0
 8000c68:	4630      	mov	r0, r6
 8000c6a:	f000 f879 	bl	8000d60 <_malloc_r>
 8000c6e:	b948      	cbnz	r0, 8000c84 <__smakebuf_r+0x44>
 8000c70:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c74:	059a      	lsls	r2, r3, #22
 8000c76:	d4ef      	bmi.n	8000c58 <__smakebuf_r+0x18>
 8000c78:	f023 0303 	bic.w	r3, r3, #3
 8000c7c:	f043 0302 	orr.w	r3, r3, #2
 8000c80:	81a3      	strh	r3, [r4, #12]
 8000c82:	e7e3      	b.n	8000c4c <__smakebuf_r+0xc>
 8000c84:	4b0d      	ldr	r3, [pc, #52]	; (8000cbc <__smakebuf_r+0x7c>)
 8000c86:	62b3      	str	r3, [r6, #40]	; 0x28
 8000c88:	89a3      	ldrh	r3, [r4, #12]
 8000c8a:	6020      	str	r0, [r4, #0]
 8000c8c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000c90:	81a3      	strh	r3, [r4, #12]
 8000c92:	9b00      	ldr	r3, [sp, #0]
 8000c94:	6163      	str	r3, [r4, #20]
 8000c96:	9b01      	ldr	r3, [sp, #4]
 8000c98:	6120      	str	r0, [r4, #16]
 8000c9a:	b15b      	cbz	r3, 8000cb4 <__smakebuf_r+0x74>
 8000c9c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000ca0:	4630      	mov	r0, r6
 8000ca2:	f000 fc2d 	bl	8001500 <_isatty_r>
 8000ca6:	b128      	cbz	r0, 8000cb4 <__smakebuf_r+0x74>
 8000ca8:	89a3      	ldrh	r3, [r4, #12]
 8000caa:	f023 0303 	bic.w	r3, r3, #3
 8000cae:	f043 0301 	orr.w	r3, r3, #1
 8000cb2:	81a3      	strh	r3, [r4, #12]
 8000cb4:	89a0      	ldrh	r0, [r4, #12]
 8000cb6:	4305      	orrs	r5, r0
 8000cb8:	81a5      	strh	r5, [r4, #12]
 8000cba:	e7cd      	b.n	8000c58 <__smakebuf_r+0x18>
 8000cbc:	08000a51 	.word	0x08000a51

08000cc0 <_free_r>:
 8000cc0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000cc2:	2900      	cmp	r1, #0
 8000cc4:	d048      	beq.n	8000d58 <_free_r+0x98>
 8000cc6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000cca:	9001      	str	r0, [sp, #4]
 8000ccc:	2b00      	cmp	r3, #0
 8000cce:	f1a1 0404 	sub.w	r4, r1, #4
 8000cd2:	bfb8      	it	lt
 8000cd4:	18e4      	addlt	r4, r4, r3
 8000cd6:	f000 fc35 	bl	8001544 <__malloc_lock>
 8000cda:	4a20      	ldr	r2, [pc, #128]	; (8000d5c <_free_r+0x9c>)
 8000cdc:	9801      	ldr	r0, [sp, #4]
 8000cde:	6813      	ldr	r3, [r2, #0]
 8000ce0:	4615      	mov	r5, r2
 8000ce2:	b933      	cbnz	r3, 8000cf2 <_free_r+0x32>
 8000ce4:	6063      	str	r3, [r4, #4]
 8000ce6:	6014      	str	r4, [r2, #0]
 8000ce8:	b003      	add	sp, #12
 8000cea:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000cee:	f000 bc2f 	b.w	8001550 <__malloc_unlock>
 8000cf2:	42a3      	cmp	r3, r4
 8000cf4:	d90b      	bls.n	8000d0e <_free_r+0x4e>
 8000cf6:	6821      	ldr	r1, [r4, #0]
 8000cf8:	1862      	adds	r2, r4, r1
 8000cfa:	4293      	cmp	r3, r2
 8000cfc:	bf04      	itt	eq
 8000cfe:	681a      	ldreq	r2, [r3, #0]
 8000d00:	685b      	ldreq	r3, [r3, #4]
 8000d02:	6063      	str	r3, [r4, #4]
 8000d04:	bf04      	itt	eq
 8000d06:	1852      	addeq	r2, r2, r1
 8000d08:	6022      	streq	r2, [r4, #0]
 8000d0a:	602c      	str	r4, [r5, #0]
 8000d0c:	e7ec      	b.n	8000ce8 <_free_r+0x28>
 8000d0e:	461a      	mov	r2, r3
 8000d10:	685b      	ldr	r3, [r3, #4]
 8000d12:	b10b      	cbz	r3, 8000d18 <_free_r+0x58>
 8000d14:	42a3      	cmp	r3, r4
 8000d16:	d9fa      	bls.n	8000d0e <_free_r+0x4e>
 8000d18:	6811      	ldr	r1, [r2, #0]
 8000d1a:	1855      	adds	r5, r2, r1
 8000d1c:	42a5      	cmp	r5, r4
 8000d1e:	d10b      	bne.n	8000d38 <_free_r+0x78>
 8000d20:	6824      	ldr	r4, [r4, #0]
 8000d22:	4421      	add	r1, r4
 8000d24:	1854      	adds	r4, r2, r1
 8000d26:	42a3      	cmp	r3, r4
 8000d28:	6011      	str	r1, [r2, #0]
 8000d2a:	d1dd      	bne.n	8000ce8 <_free_r+0x28>
 8000d2c:	681c      	ldr	r4, [r3, #0]
 8000d2e:	685b      	ldr	r3, [r3, #4]
 8000d30:	6053      	str	r3, [r2, #4]
 8000d32:	4421      	add	r1, r4
 8000d34:	6011      	str	r1, [r2, #0]
 8000d36:	e7d7      	b.n	8000ce8 <_free_r+0x28>
 8000d38:	d902      	bls.n	8000d40 <_free_r+0x80>
 8000d3a:	230c      	movs	r3, #12
 8000d3c:	6003      	str	r3, [r0, #0]
 8000d3e:	e7d3      	b.n	8000ce8 <_free_r+0x28>
 8000d40:	6825      	ldr	r5, [r4, #0]
 8000d42:	1961      	adds	r1, r4, r5
 8000d44:	428b      	cmp	r3, r1
 8000d46:	bf04      	itt	eq
 8000d48:	6819      	ldreq	r1, [r3, #0]
 8000d4a:	685b      	ldreq	r3, [r3, #4]
 8000d4c:	6063      	str	r3, [r4, #4]
 8000d4e:	bf04      	itt	eq
 8000d50:	1949      	addeq	r1, r1, r5
 8000d52:	6021      	streq	r1, [r4, #0]
 8000d54:	6054      	str	r4, [r2, #4]
 8000d56:	e7c7      	b.n	8000ce8 <_free_r+0x28>
 8000d58:	b003      	add	sp, #12
 8000d5a:	bd30      	pop	{r4, r5, pc}
 8000d5c:	20000084 	.word	0x20000084

08000d60 <_malloc_r>:
 8000d60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d62:	1ccd      	adds	r5, r1, #3
 8000d64:	f025 0503 	bic.w	r5, r5, #3
 8000d68:	3508      	adds	r5, #8
 8000d6a:	2d0c      	cmp	r5, #12
 8000d6c:	bf38      	it	cc
 8000d6e:	250c      	movcc	r5, #12
 8000d70:	2d00      	cmp	r5, #0
 8000d72:	4606      	mov	r6, r0
 8000d74:	db01      	blt.n	8000d7a <_malloc_r+0x1a>
 8000d76:	42a9      	cmp	r1, r5
 8000d78:	d903      	bls.n	8000d82 <_malloc_r+0x22>
 8000d7a:	230c      	movs	r3, #12
 8000d7c:	6033      	str	r3, [r6, #0]
 8000d7e:	2000      	movs	r0, #0
 8000d80:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d82:	f000 fbdf 	bl	8001544 <__malloc_lock>
 8000d86:	4921      	ldr	r1, [pc, #132]	; (8000e0c <_malloc_r+0xac>)
 8000d88:	680a      	ldr	r2, [r1, #0]
 8000d8a:	4614      	mov	r4, r2
 8000d8c:	b99c      	cbnz	r4, 8000db6 <_malloc_r+0x56>
 8000d8e:	4f20      	ldr	r7, [pc, #128]	; (8000e10 <_malloc_r+0xb0>)
 8000d90:	683b      	ldr	r3, [r7, #0]
 8000d92:	b923      	cbnz	r3, 8000d9e <_malloc_r+0x3e>
 8000d94:	4621      	mov	r1, r4
 8000d96:	4630      	mov	r0, r6
 8000d98:	f000 fb2a 	bl	80013f0 <_sbrk_r>
 8000d9c:	6038      	str	r0, [r7, #0]
 8000d9e:	4629      	mov	r1, r5
 8000da0:	4630      	mov	r0, r6
 8000da2:	f000 fb25 	bl	80013f0 <_sbrk_r>
 8000da6:	1c43      	adds	r3, r0, #1
 8000da8:	d123      	bne.n	8000df2 <_malloc_r+0x92>
 8000daa:	230c      	movs	r3, #12
 8000dac:	6033      	str	r3, [r6, #0]
 8000dae:	4630      	mov	r0, r6
 8000db0:	f000 fbce 	bl	8001550 <__malloc_unlock>
 8000db4:	e7e3      	b.n	8000d7e <_malloc_r+0x1e>
 8000db6:	6823      	ldr	r3, [r4, #0]
 8000db8:	1b5b      	subs	r3, r3, r5
 8000dba:	d417      	bmi.n	8000dec <_malloc_r+0x8c>
 8000dbc:	2b0b      	cmp	r3, #11
 8000dbe:	d903      	bls.n	8000dc8 <_malloc_r+0x68>
 8000dc0:	6023      	str	r3, [r4, #0]
 8000dc2:	441c      	add	r4, r3
 8000dc4:	6025      	str	r5, [r4, #0]
 8000dc6:	e004      	b.n	8000dd2 <_malloc_r+0x72>
 8000dc8:	6863      	ldr	r3, [r4, #4]
 8000dca:	42a2      	cmp	r2, r4
 8000dcc:	bf0c      	ite	eq
 8000dce:	600b      	streq	r3, [r1, #0]
 8000dd0:	6053      	strne	r3, [r2, #4]
 8000dd2:	4630      	mov	r0, r6
 8000dd4:	f000 fbbc 	bl	8001550 <__malloc_unlock>
 8000dd8:	f104 000b 	add.w	r0, r4, #11
 8000ddc:	1d23      	adds	r3, r4, #4
 8000dde:	f020 0007 	bic.w	r0, r0, #7
 8000de2:	1ac2      	subs	r2, r0, r3
 8000de4:	d0cc      	beq.n	8000d80 <_malloc_r+0x20>
 8000de6:	1a1b      	subs	r3, r3, r0
 8000de8:	50a3      	str	r3, [r4, r2]
 8000dea:	e7c9      	b.n	8000d80 <_malloc_r+0x20>
 8000dec:	4622      	mov	r2, r4
 8000dee:	6864      	ldr	r4, [r4, #4]
 8000df0:	e7cc      	b.n	8000d8c <_malloc_r+0x2c>
 8000df2:	1cc4      	adds	r4, r0, #3
 8000df4:	f024 0403 	bic.w	r4, r4, #3
 8000df8:	42a0      	cmp	r0, r4
 8000dfa:	d0e3      	beq.n	8000dc4 <_malloc_r+0x64>
 8000dfc:	1a21      	subs	r1, r4, r0
 8000dfe:	4630      	mov	r0, r6
 8000e00:	f000 faf6 	bl	80013f0 <_sbrk_r>
 8000e04:	3001      	adds	r0, #1
 8000e06:	d1dd      	bne.n	8000dc4 <_malloc_r+0x64>
 8000e08:	e7cf      	b.n	8000daa <_malloc_r+0x4a>
 8000e0a:	bf00      	nop
 8000e0c:	20000084 	.word	0x20000084
 8000e10:	20000088 	.word	0x20000088

08000e14 <__sfputc_r>:
 8000e14:	6893      	ldr	r3, [r2, #8]
 8000e16:	3b01      	subs	r3, #1
 8000e18:	2b00      	cmp	r3, #0
 8000e1a:	b410      	push	{r4}
 8000e1c:	6093      	str	r3, [r2, #8]
 8000e1e:	da08      	bge.n	8000e32 <__sfputc_r+0x1e>
 8000e20:	6994      	ldr	r4, [r2, #24]
 8000e22:	42a3      	cmp	r3, r4
 8000e24:	db01      	blt.n	8000e2a <__sfputc_r+0x16>
 8000e26:	290a      	cmp	r1, #10
 8000e28:	d103      	bne.n	8000e32 <__sfputc_r+0x1e>
 8000e2a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000e2e:	f7ff bc69 	b.w	8000704 <__swbuf_r>
 8000e32:	6813      	ldr	r3, [r2, #0]
 8000e34:	1c58      	adds	r0, r3, #1
 8000e36:	6010      	str	r0, [r2, #0]
 8000e38:	7019      	strb	r1, [r3, #0]
 8000e3a:	4608      	mov	r0, r1
 8000e3c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000e40:	4770      	bx	lr

08000e42 <__sfputs_r>:
 8000e42:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e44:	4606      	mov	r6, r0
 8000e46:	460f      	mov	r7, r1
 8000e48:	4614      	mov	r4, r2
 8000e4a:	18d5      	adds	r5, r2, r3
 8000e4c:	42ac      	cmp	r4, r5
 8000e4e:	d101      	bne.n	8000e54 <__sfputs_r+0x12>
 8000e50:	2000      	movs	r0, #0
 8000e52:	e007      	b.n	8000e64 <__sfputs_r+0x22>
 8000e54:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e58:	463a      	mov	r2, r7
 8000e5a:	4630      	mov	r0, r6
 8000e5c:	f7ff ffda 	bl	8000e14 <__sfputc_r>
 8000e60:	1c43      	adds	r3, r0, #1
 8000e62:	d1f3      	bne.n	8000e4c <__sfputs_r+0xa>
 8000e64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000e68 <_vfiprintf_r>:
 8000e68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000e6c:	460d      	mov	r5, r1
 8000e6e:	b09d      	sub	sp, #116	; 0x74
 8000e70:	4614      	mov	r4, r2
 8000e72:	4698      	mov	r8, r3
 8000e74:	4606      	mov	r6, r0
 8000e76:	b118      	cbz	r0, 8000e80 <_vfiprintf_r+0x18>
 8000e78:	6983      	ldr	r3, [r0, #24]
 8000e7a:	b90b      	cbnz	r3, 8000e80 <_vfiprintf_r+0x18>
 8000e7c:	f7ff fe1c 	bl	8000ab8 <__sinit>
 8000e80:	4b89      	ldr	r3, [pc, #548]	; (80010a8 <_vfiprintf_r+0x240>)
 8000e82:	429d      	cmp	r5, r3
 8000e84:	d11b      	bne.n	8000ebe <_vfiprintf_r+0x56>
 8000e86:	6875      	ldr	r5, [r6, #4]
 8000e88:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000e8a:	07d9      	lsls	r1, r3, #31
 8000e8c:	d405      	bmi.n	8000e9a <_vfiprintf_r+0x32>
 8000e8e:	89ab      	ldrh	r3, [r5, #12]
 8000e90:	059a      	lsls	r2, r3, #22
 8000e92:	d402      	bmi.n	8000e9a <_vfiprintf_r+0x32>
 8000e94:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000e96:	f7ff fead 	bl	8000bf4 <__retarget_lock_acquire_recursive>
 8000e9a:	89ab      	ldrh	r3, [r5, #12]
 8000e9c:	071b      	lsls	r3, r3, #28
 8000e9e:	d501      	bpl.n	8000ea4 <_vfiprintf_r+0x3c>
 8000ea0:	692b      	ldr	r3, [r5, #16]
 8000ea2:	b9eb      	cbnz	r3, 8000ee0 <_vfiprintf_r+0x78>
 8000ea4:	4629      	mov	r1, r5
 8000ea6:	4630      	mov	r0, r6
 8000ea8:	f7ff fc7e 	bl	80007a8 <__swsetup_r>
 8000eac:	b1c0      	cbz	r0, 8000ee0 <_vfiprintf_r+0x78>
 8000eae:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000eb0:	07dc      	lsls	r4, r3, #31
 8000eb2:	d50e      	bpl.n	8000ed2 <_vfiprintf_r+0x6a>
 8000eb4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000eb8:	b01d      	add	sp, #116	; 0x74
 8000eba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000ebe:	4b7b      	ldr	r3, [pc, #492]	; (80010ac <_vfiprintf_r+0x244>)
 8000ec0:	429d      	cmp	r5, r3
 8000ec2:	d101      	bne.n	8000ec8 <_vfiprintf_r+0x60>
 8000ec4:	68b5      	ldr	r5, [r6, #8]
 8000ec6:	e7df      	b.n	8000e88 <_vfiprintf_r+0x20>
 8000ec8:	4b79      	ldr	r3, [pc, #484]	; (80010b0 <_vfiprintf_r+0x248>)
 8000eca:	429d      	cmp	r5, r3
 8000ecc:	bf08      	it	eq
 8000ece:	68f5      	ldreq	r5, [r6, #12]
 8000ed0:	e7da      	b.n	8000e88 <_vfiprintf_r+0x20>
 8000ed2:	89ab      	ldrh	r3, [r5, #12]
 8000ed4:	0598      	lsls	r0, r3, #22
 8000ed6:	d4ed      	bmi.n	8000eb4 <_vfiprintf_r+0x4c>
 8000ed8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000eda:	f7ff fe8c 	bl	8000bf6 <__retarget_lock_release_recursive>
 8000ede:	e7e9      	b.n	8000eb4 <_vfiprintf_r+0x4c>
 8000ee0:	2300      	movs	r3, #0
 8000ee2:	9309      	str	r3, [sp, #36]	; 0x24
 8000ee4:	2320      	movs	r3, #32
 8000ee6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000eea:	f8cd 800c 	str.w	r8, [sp, #12]
 8000eee:	2330      	movs	r3, #48	; 0x30
 8000ef0:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80010b4 <_vfiprintf_r+0x24c>
 8000ef4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000ef8:	f04f 0901 	mov.w	r9, #1
 8000efc:	4623      	mov	r3, r4
 8000efe:	469a      	mov	sl, r3
 8000f00:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000f04:	b10a      	cbz	r2, 8000f0a <_vfiprintf_r+0xa2>
 8000f06:	2a25      	cmp	r2, #37	; 0x25
 8000f08:	d1f9      	bne.n	8000efe <_vfiprintf_r+0x96>
 8000f0a:	ebba 0b04 	subs.w	fp, sl, r4
 8000f0e:	d00b      	beq.n	8000f28 <_vfiprintf_r+0xc0>
 8000f10:	465b      	mov	r3, fp
 8000f12:	4622      	mov	r2, r4
 8000f14:	4629      	mov	r1, r5
 8000f16:	4630      	mov	r0, r6
 8000f18:	f7ff ff93 	bl	8000e42 <__sfputs_r>
 8000f1c:	3001      	adds	r0, #1
 8000f1e:	f000 80aa 	beq.w	8001076 <_vfiprintf_r+0x20e>
 8000f22:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000f24:	445a      	add	r2, fp
 8000f26:	9209      	str	r2, [sp, #36]	; 0x24
 8000f28:	f89a 3000 	ldrb.w	r3, [sl]
 8000f2c:	2b00      	cmp	r3, #0
 8000f2e:	f000 80a2 	beq.w	8001076 <_vfiprintf_r+0x20e>
 8000f32:	2300      	movs	r3, #0
 8000f34:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8000f38:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000f3c:	f10a 0a01 	add.w	sl, sl, #1
 8000f40:	9304      	str	r3, [sp, #16]
 8000f42:	9307      	str	r3, [sp, #28]
 8000f44:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000f48:	931a      	str	r3, [sp, #104]	; 0x68
 8000f4a:	4654      	mov	r4, sl
 8000f4c:	2205      	movs	r2, #5
 8000f4e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000f52:	4858      	ldr	r0, [pc, #352]	; (80010b4 <_vfiprintf_r+0x24c>)
 8000f54:	f7ff f95c 	bl	8000210 <memchr>
 8000f58:	9a04      	ldr	r2, [sp, #16]
 8000f5a:	b9d8      	cbnz	r0, 8000f94 <_vfiprintf_r+0x12c>
 8000f5c:	06d1      	lsls	r1, r2, #27
 8000f5e:	bf44      	itt	mi
 8000f60:	2320      	movmi	r3, #32
 8000f62:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000f66:	0713      	lsls	r3, r2, #28
 8000f68:	bf44      	itt	mi
 8000f6a:	232b      	movmi	r3, #43	; 0x2b
 8000f6c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000f70:	f89a 3000 	ldrb.w	r3, [sl]
 8000f74:	2b2a      	cmp	r3, #42	; 0x2a
 8000f76:	d015      	beq.n	8000fa4 <_vfiprintf_r+0x13c>
 8000f78:	9a07      	ldr	r2, [sp, #28]
 8000f7a:	4654      	mov	r4, sl
 8000f7c:	2000      	movs	r0, #0
 8000f7e:	f04f 0c0a 	mov.w	ip, #10
 8000f82:	4621      	mov	r1, r4
 8000f84:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000f88:	3b30      	subs	r3, #48	; 0x30
 8000f8a:	2b09      	cmp	r3, #9
 8000f8c:	d94e      	bls.n	800102c <_vfiprintf_r+0x1c4>
 8000f8e:	b1b0      	cbz	r0, 8000fbe <_vfiprintf_r+0x156>
 8000f90:	9207      	str	r2, [sp, #28]
 8000f92:	e014      	b.n	8000fbe <_vfiprintf_r+0x156>
 8000f94:	eba0 0308 	sub.w	r3, r0, r8
 8000f98:	fa09 f303 	lsl.w	r3, r9, r3
 8000f9c:	4313      	orrs	r3, r2
 8000f9e:	9304      	str	r3, [sp, #16]
 8000fa0:	46a2      	mov	sl, r4
 8000fa2:	e7d2      	b.n	8000f4a <_vfiprintf_r+0xe2>
 8000fa4:	9b03      	ldr	r3, [sp, #12]
 8000fa6:	1d19      	adds	r1, r3, #4
 8000fa8:	681b      	ldr	r3, [r3, #0]
 8000faa:	9103      	str	r1, [sp, #12]
 8000fac:	2b00      	cmp	r3, #0
 8000fae:	bfbb      	ittet	lt
 8000fb0:	425b      	neglt	r3, r3
 8000fb2:	f042 0202 	orrlt.w	r2, r2, #2
 8000fb6:	9307      	strge	r3, [sp, #28]
 8000fb8:	9307      	strlt	r3, [sp, #28]
 8000fba:	bfb8      	it	lt
 8000fbc:	9204      	strlt	r2, [sp, #16]
 8000fbe:	7823      	ldrb	r3, [r4, #0]
 8000fc0:	2b2e      	cmp	r3, #46	; 0x2e
 8000fc2:	d10c      	bne.n	8000fde <_vfiprintf_r+0x176>
 8000fc4:	7863      	ldrb	r3, [r4, #1]
 8000fc6:	2b2a      	cmp	r3, #42	; 0x2a
 8000fc8:	d135      	bne.n	8001036 <_vfiprintf_r+0x1ce>
 8000fca:	9b03      	ldr	r3, [sp, #12]
 8000fcc:	1d1a      	adds	r2, r3, #4
 8000fce:	681b      	ldr	r3, [r3, #0]
 8000fd0:	9203      	str	r2, [sp, #12]
 8000fd2:	2b00      	cmp	r3, #0
 8000fd4:	bfb8      	it	lt
 8000fd6:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8000fda:	3402      	adds	r4, #2
 8000fdc:	9305      	str	r3, [sp, #20]
 8000fde:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 80010c4 <_vfiprintf_r+0x25c>
 8000fe2:	7821      	ldrb	r1, [r4, #0]
 8000fe4:	2203      	movs	r2, #3
 8000fe6:	4650      	mov	r0, sl
 8000fe8:	f7ff f912 	bl	8000210 <memchr>
 8000fec:	b140      	cbz	r0, 8001000 <_vfiprintf_r+0x198>
 8000fee:	2340      	movs	r3, #64	; 0x40
 8000ff0:	eba0 000a 	sub.w	r0, r0, sl
 8000ff4:	fa03 f000 	lsl.w	r0, r3, r0
 8000ff8:	9b04      	ldr	r3, [sp, #16]
 8000ffa:	4303      	orrs	r3, r0
 8000ffc:	3401      	adds	r4, #1
 8000ffe:	9304      	str	r3, [sp, #16]
 8001000:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001004:	482c      	ldr	r0, [pc, #176]	; (80010b8 <_vfiprintf_r+0x250>)
 8001006:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800100a:	2206      	movs	r2, #6
 800100c:	f7ff f900 	bl	8000210 <memchr>
 8001010:	2800      	cmp	r0, #0
 8001012:	d03f      	beq.n	8001094 <_vfiprintf_r+0x22c>
 8001014:	4b29      	ldr	r3, [pc, #164]	; (80010bc <_vfiprintf_r+0x254>)
 8001016:	bb1b      	cbnz	r3, 8001060 <_vfiprintf_r+0x1f8>
 8001018:	9b03      	ldr	r3, [sp, #12]
 800101a:	3307      	adds	r3, #7
 800101c:	f023 0307 	bic.w	r3, r3, #7
 8001020:	3308      	adds	r3, #8
 8001022:	9303      	str	r3, [sp, #12]
 8001024:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001026:	443b      	add	r3, r7
 8001028:	9309      	str	r3, [sp, #36]	; 0x24
 800102a:	e767      	b.n	8000efc <_vfiprintf_r+0x94>
 800102c:	fb0c 3202 	mla	r2, ip, r2, r3
 8001030:	460c      	mov	r4, r1
 8001032:	2001      	movs	r0, #1
 8001034:	e7a5      	b.n	8000f82 <_vfiprintf_r+0x11a>
 8001036:	2300      	movs	r3, #0
 8001038:	3401      	adds	r4, #1
 800103a:	9305      	str	r3, [sp, #20]
 800103c:	4619      	mov	r1, r3
 800103e:	f04f 0c0a 	mov.w	ip, #10
 8001042:	4620      	mov	r0, r4
 8001044:	f810 2b01 	ldrb.w	r2, [r0], #1
 8001048:	3a30      	subs	r2, #48	; 0x30
 800104a:	2a09      	cmp	r2, #9
 800104c:	d903      	bls.n	8001056 <_vfiprintf_r+0x1ee>
 800104e:	2b00      	cmp	r3, #0
 8001050:	d0c5      	beq.n	8000fde <_vfiprintf_r+0x176>
 8001052:	9105      	str	r1, [sp, #20]
 8001054:	e7c3      	b.n	8000fde <_vfiprintf_r+0x176>
 8001056:	fb0c 2101 	mla	r1, ip, r1, r2
 800105a:	4604      	mov	r4, r0
 800105c:	2301      	movs	r3, #1
 800105e:	e7f0      	b.n	8001042 <_vfiprintf_r+0x1da>
 8001060:	ab03      	add	r3, sp, #12
 8001062:	9300      	str	r3, [sp, #0]
 8001064:	462a      	mov	r2, r5
 8001066:	4b16      	ldr	r3, [pc, #88]	; (80010c0 <_vfiprintf_r+0x258>)
 8001068:	a904      	add	r1, sp, #16
 800106a:	4630      	mov	r0, r6
 800106c:	f3af 8000 	nop.w
 8001070:	4607      	mov	r7, r0
 8001072:	1c78      	adds	r0, r7, #1
 8001074:	d1d6      	bne.n	8001024 <_vfiprintf_r+0x1bc>
 8001076:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001078:	07d9      	lsls	r1, r3, #31
 800107a:	d405      	bmi.n	8001088 <_vfiprintf_r+0x220>
 800107c:	89ab      	ldrh	r3, [r5, #12]
 800107e:	059a      	lsls	r2, r3, #22
 8001080:	d402      	bmi.n	8001088 <_vfiprintf_r+0x220>
 8001082:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001084:	f7ff fdb7 	bl	8000bf6 <__retarget_lock_release_recursive>
 8001088:	89ab      	ldrh	r3, [r5, #12]
 800108a:	065b      	lsls	r3, r3, #25
 800108c:	f53f af12 	bmi.w	8000eb4 <_vfiprintf_r+0x4c>
 8001090:	9809      	ldr	r0, [sp, #36]	; 0x24
 8001092:	e711      	b.n	8000eb8 <_vfiprintf_r+0x50>
 8001094:	ab03      	add	r3, sp, #12
 8001096:	9300      	str	r3, [sp, #0]
 8001098:	462a      	mov	r2, r5
 800109a:	4b09      	ldr	r3, [pc, #36]	; (80010c0 <_vfiprintf_r+0x258>)
 800109c:	a904      	add	r1, sp, #16
 800109e:	4630      	mov	r0, r6
 80010a0:	f000 f880 	bl	80011a4 <_printf_i>
 80010a4:	e7e4      	b.n	8001070 <_vfiprintf_r+0x208>
 80010a6:	bf00      	nop
 80010a8:	0800164c 	.word	0x0800164c
 80010ac:	0800166c 	.word	0x0800166c
 80010b0:	0800162c 	.word	0x0800162c
 80010b4:	0800168c 	.word	0x0800168c
 80010b8:	08001696 	.word	0x08001696
 80010bc:	00000000 	.word	0x00000000
 80010c0:	08000e43 	.word	0x08000e43
 80010c4:	08001692 	.word	0x08001692

080010c8 <_printf_common>:
 80010c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80010cc:	4616      	mov	r6, r2
 80010ce:	4699      	mov	r9, r3
 80010d0:	688a      	ldr	r2, [r1, #8]
 80010d2:	690b      	ldr	r3, [r1, #16]
 80010d4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80010d8:	4293      	cmp	r3, r2
 80010da:	bfb8      	it	lt
 80010dc:	4613      	movlt	r3, r2
 80010de:	6033      	str	r3, [r6, #0]
 80010e0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80010e4:	4607      	mov	r7, r0
 80010e6:	460c      	mov	r4, r1
 80010e8:	b10a      	cbz	r2, 80010ee <_printf_common+0x26>
 80010ea:	3301      	adds	r3, #1
 80010ec:	6033      	str	r3, [r6, #0]
 80010ee:	6823      	ldr	r3, [r4, #0]
 80010f0:	0699      	lsls	r1, r3, #26
 80010f2:	bf42      	ittt	mi
 80010f4:	6833      	ldrmi	r3, [r6, #0]
 80010f6:	3302      	addmi	r3, #2
 80010f8:	6033      	strmi	r3, [r6, #0]
 80010fa:	6825      	ldr	r5, [r4, #0]
 80010fc:	f015 0506 	ands.w	r5, r5, #6
 8001100:	d106      	bne.n	8001110 <_printf_common+0x48>
 8001102:	f104 0a19 	add.w	sl, r4, #25
 8001106:	68e3      	ldr	r3, [r4, #12]
 8001108:	6832      	ldr	r2, [r6, #0]
 800110a:	1a9b      	subs	r3, r3, r2
 800110c:	42ab      	cmp	r3, r5
 800110e:	dc26      	bgt.n	800115e <_printf_common+0x96>
 8001110:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001114:	1e13      	subs	r3, r2, #0
 8001116:	6822      	ldr	r2, [r4, #0]
 8001118:	bf18      	it	ne
 800111a:	2301      	movne	r3, #1
 800111c:	0692      	lsls	r2, r2, #26
 800111e:	d42b      	bmi.n	8001178 <_printf_common+0xb0>
 8001120:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001124:	4649      	mov	r1, r9
 8001126:	4638      	mov	r0, r7
 8001128:	47c0      	blx	r8
 800112a:	3001      	adds	r0, #1
 800112c:	d01e      	beq.n	800116c <_printf_common+0xa4>
 800112e:	6823      	ldr	r3, [r4, #0]
 8001130:	68e5      	ldr	r5, [r4, #12]
 8001132:	6832      	ldr	r2, [r6, #0]
 8001134:	f003 0306 	and.w	r3, r3, #6
 8001138:	2b04      	cmp	r3, #4
 800113a:	bf08      	it	eq
 800113c:	1aad      	subeq	r5, r5, r2
 800113e:	68a3      	ldr	r3, [r4, #8]
 8001140:	6922      	ldr	r2, [r4, #16]
 8001142:	bf0c      	ite	eq
 8001144:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001148:	2500      	movne	r5, #0
 800114a:	4293      	cmp	r3, r2
 800114c:	bfc4      	itt	gt
 800114e:	1a9b      	subgt	r3, r3, r2
 8001150:	18ed      	addgt	r5, r5, r3
 8001152:	2600      	movs	r6, #0
 8001154:	341a      	adds	r4, #26
 8001156:	42b5      	cmp	r5, r6
 8001158:	d11a      	bne.n	8001190 <_printf_common+0xc8>
 800115a:	2000      	movs	r0, #0
 800115c:	e008      	b.n	8001170 <_printf_common+0xa8>
 800115e:	2301      	movs	r3, #1
 8001160:	4652      	mov	r2, sl
 8001162:	4649      	mov	r1, r9
 8001164:	4638      	mov	r0, r7
 8001166:	47c0      	blx	r8
 8001168:	3001      	adds	r0, #1
 800116a:	d103      	bne.n	8001174 <_printf_common+0xac>
 800116c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001170:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001174:	3501      	adds	r5, #1
 8001176:	e7c6      	b.n	8001106 <_printf_common+0x3e>
 8001178:	18e1      	adds	r1, r4, r3
 800117a:	1c5a      	adds	r2, r3, #1
 800117c:	2030      	movs	r0, #48	; 0x30
 800117e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001182:	4422      	add	r2, r4
 8001184:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001188:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800118c:	3302      	adds	r3, #2
 800118e:	e7c7      	b.n	8001120 <_printf_common+0x58>
 8001190:	2301      	movs	r3, #1
 8001192:	4622      	mov	r2, r4
 8001194:	4649      	mov	r1, r9
 8001196:	4638      	mov	r0, r7
 8001198:	47c0      	blx	r8
 800119a:	3001      	adds	r0, #1
 800119c:	d0e6      	beq.n	800116c <_printf_common+0xa4>
 800119e:	3601      	adds	r6, #1
 80011a0:	e7d9      	b.n	8001156 <_printf_common+0x8e>
	...

080011a4 <_printf_i>:
 80011a4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80011a8:	460c      	mov	r4, r1
 80011aa:	4691      	mov	r9, r2
 80011ac:	7e27      	ldrb	r7, [r4, #24]
 80011ae:	990c      	ldr	r1, [sp, #48]	; 0x30
 80011b0:	2f78      	cmp	r7, #120	; 0x78
 80011b2:	4680      	mov	r8, r0
 80011b4:	469a      	mov	sl, r3
 80011b6:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80011ba:	d807      	bhi.n	80011cc <_printf_i+0x28>
 80011bc:	2f62      	cmp	r7, #98	; 0x62
 80011be:	d80a      	bhi.n	80011d6 <_printf_i+0x32>
 80011c0:	2f00      	cmp	r7, #0
 80011c2:	f000 80d8 	beq.w	8001376 <_printf_i+0x1d2>
 80011c6:	2f58      	cmp	r7, #88	; 0x58
 80011c8:	f000 80a3 	beq.w	8001312 <_printf_i+0x16e>
 80011cc:	f104 0642 	add.w	r6, r4, #66	; 0x42
 80011d0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80011d4:	e03a      	b.n	800124c <_printf_i+0xa8>
 80011d6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80011da:	2b15      	cmp	r3, #21
 80011dc:	d8f6      	bhi.n	80011cc <_printf_i+0x28>
 80011de:	a001      	add	r0, pc, #4	; (adr r0, 80011e4 <_printf_i+0x40>)
 80011e0:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 80011e4:	0800123d 	.word	0x0800123d
 80011e8:	08001251 	.word	0x08001251
 80011ec:	080011cd 	.word	0x080011cd
 80011f0:	080011cd 	.word	0x080011cd
 80011f4:	080011cd 	.word	0x080011cd
 80011f8:	080011cd 	.word	0x080011cd
 80011fc:	08001251 	.word	0x08001251
 8001200:	080011cd 	.word	0x080011cd
 8001204:	080011cd 	.word	0x080011cd
 8001208:	080011cd 	.word	0x080011cd
 800120c:	080011cd 	.word	0x080011cd
 8001210:	0800135d 	.word	0x0800135d
 8001214:	08001281 	.word	0x08001281
 8001218:	0800133f 	.word	0x0800133f
 800121c:	080011cd 	.word	0x080011cd
 8001220:	080011cd 	.word	0x080011cd
 8001224:	0800137f 	.word	0x0800137f
 8001228:	080011cd 	.word	0x080011cd
 800122c:	08001281 	.word	0x08001281
 8001230:	080011cd 	.word	0x080011cd
 8001234:	080011cd 	.word	0x080011cd
 8001238:	08001347 	.word	0x08001347
 800123c:	680b      	ldr	r3, [r1, #0]
 800123e:	1d1a      	adds	r2, r3, #4
 8001240:	681b      	ldr	r3, [r3, #0]
 8001242:	600a      	str	r2, [r1, #0]
 8001244:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8001248:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800124c:	2301      	movs	r3, #1
 800124e:	e0a3      	b.n	8001398 <_printf_i+0x1f4>
 8001250:	6825      	ldr	r5, [r4, #0]
 8001252:	6808      	ldr	r0, [r1, #0]
 8001254:	062e      	lsls	r6, r5, #24
 8001256:	f100 0304 	add.w	r3, r0, #4
 800125a:	d50a      	bpl.n	8001272 <_printf_i+0xce>
 800125c:	6805      	ldr	r5, [r0, #0]
 800125e:	600b      	str	r3, [r1, #0]
 8001260:	2d00      	cmp	r5, #0
 8001262:	da03      	bge.n	800126c <_printf_i+0xc8>
 8001264:	232d      	movs	r3, #45	; 0x2d
 8001266:	426d      	negs	r5, r5
 8001268:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800126c:	485e      	ldr	r0, [pc, #376]	; (80013e8 <_printf_i+0x244>)
 800126e:	230a      	movs	r3, #10
 8001270:	e019      	b.n	80012a6 <_printf_i+0x102>
 8001272:	f015 0f40 	tst.w	r5, #64	; 0x40
 8001276:	6805      	ldr	r5, [r0, #0]
 8001278:	600b      	str	r3, [r1, #0]
 800127a:	bf18      	it	ne
 800127c:	b22d      	sxthne	r5, r5
 800127e:	e7ef      	b.n	8001260 <_printf_i+0xbc>
 8001280:	680b      	ldr	r3, [r1, #0]
 8001282:	6825      	ldr	r5, [r4, #0]
 8001284:	1d18      	adds	r0, r3, #4
 8001286:	6008      	str	r0, [r1, #0]
 8001288:	0628      	lsls	r0, r5, #24
 800128a:	d501      	bpl.n	8001290 <_printf_i+0xec>
 800128c:	681d      	ldr	r5, [r3, #0]
 800128e:	e002      	b.n	8001296 <_printf_i+0xf2>
 8001290:	0669      	lsls	r1, r5, #25
 8001292:	d5fb      	bpl.n	800128c <_printf_i+0xe8>
 8001294:	881d      	ldrh	r5, [r3, #0]
 8001296:	4854      	ldr	r0, [pc, #336]	; (80013e8 <_printf_i+0x244>)
 8001298:	2f6f      	cmp	r7, #111	; 0x6f
 800129a:	bf0c      	ite	eq
 800129c:	2308      	moveq	r3, #8
 800129e:	230a      	movne	r3, #10
 80012a0:	2100      	movs	r1, #0
 80012a2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80012a6:	6866      	ldr	r6, [r4, #4]
 80012a8:	60a6      	str	r6, [r4, #8]
 80012aa:	2e00      	cmp	r6, #0
 80012ac:	bfa2      	ittt	ge
 80012ae:	6821      	ldrge	r1, [r4, #0]
 80012b0:	f021 0104 	bicge.w	r1, r1, #4
 80012b4:	6021      	strge	r1, [r4, #0]
 80012b6:	b90d      	cbnz	r5, 80012bc <_printf_i+0x118>
 80012b8:	2e00      	cmp	r6, #0
 80012ba:	d04d      	beq.n	8001358 <_printf_i+0x1b4>
 80012bc:	4616      	mov	r6, r2
 80012be:	fbb5 f1f3 	udiv	r1, r5, r3
 80012c2:	fb03 5711 	mls	r7, r3, r1, r5
 80012c6:	5dc7      	ldrb	r7, [r0, r7]
 80012c8:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80012cc:	462f      	mov	r7, r5
 80012ce:	42bb      	cmp	r3, r7
 80012d0:	460d      	mov	r5, r1
 80012d2:	d9f4      	bls.n	80012be <_printf_i+0x11a>
 80012d4:	2b08      	cmp	r3, #8
 80012d6:	d10b      	bne.n	80012f0 <_printf_i+0x14c>
 80012d8:	6823      	ldr	r3, [r4, #0]
 80012da:	07df      	lsls	r7, r3, #31
 80012dc:	d508      	bpl.n	80012f0 <_printf_i+0x14c>
 80012de:	6923      	ldr	r3, [r4, #16]
 80012e0:	6861      	ldr	r1, [r4, #4]
 80012e2:	4299      	cmp	r1, r3
 80012e4:	bfde      	ittt	le
 80012e6:	2330      	movle	r3, #48	; 0x30
 80012e8:	f806 3c01 	strble.w	r3, [r6, #-1]
 80012ec:	f106 36ff 	addle.w	r6, r6, #4294967295	; 0xffffffff
 80012f0:	1b92      	subs	r2, r2, r6
 80012f2:	6122      	str	r2, [r4, #16]
 80012f4:	f8cd a000 	str.w	sl, [sp]
 80012f8:	464b      	mov	r3, r9
 80012fa:	aa03      	add	r2, sp, #12
 80012fc:	4621      	mov	r1, r4
 80012fe:	4640      	mov	r0, r8
 8001300:	f7ff fee2 	bl	80010c8 <_printf_common>
 8001304:	3001      	adds	r0, #1
 8001306:	d14c      	bne.n	80013a2 <_printf_i+0x1fe>
 8001308:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800130c:	b004      	add	sp, #16
 800130e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001312:	4835      	ldr	r0, [pc, #212]	; (80013e8 <_printf_i+0x244>)
 8001314:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8001318:	6823      	ldr	r3, [r4, #0]
 800131a:	680e      	ldr	r6, [r1, #0]
 800131c:	061f      	lsls	r7, r3, #24
 800131e:	f856 5b04 	ldr.w	r5, [r6], #4
 8001322:	600e      	str	r6, [r1, #0]
 8001324:	d514      	bpl.n	8001350 <_printf_i+0x1ac>
 8001326:	07d9      	lsls	r1, r3, #31
 8001328:	bf44      	itt	mi
 800132a:	f043 0320 	orrmi.w	r3, r3, #32
 800132e:	6023      	strmi	r3, [r4, #0]
 8001330:	b91d      	cbnz	r5, 800133a <_printf_i+0x196>
 8001332:	6823      	ldr	r3, [r4, #0]
 8001334:	f023 0320 	bic.w	r3, r3, #32
 8001338:	6023      	str	r3, [r4, #0]
 800133a:	2310      	movs	r3, #16
 800133c:	e7b0      	b.n	80012a0 <_printf_i+0xfc>
 800133e:	6823      	ldr	r3, [r4, #0]
 8001340:	f043 0320 	orr.w	r3, r3, #32
 8001344:	6023      	str	r3, [r4, #0]
 8001346:	2378      	movs	r3, #120	; 0x78
 8001348:	4828      	ldr	r0, [pc, #160]	; (80013ec <_printf_i+0x248>)
 800134a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800134e:	e7e3      	b.n	8001318 <_printf_i+0x174>
 8001350:	065e      	lsls	r6, r3, #25
 8001352:	bf48      	it	mi
 8001354:	b2ad      	uxthmi	r5, r5
 8001356:	e7e6      	b.n	8001326 <_printf_i+0x182>
 8001358:	4616      	mov	r6, r2
 800135a:	e7bb      	b.n	80012d4 <_printf_i+0x130>
 800135c:	680b      	ldr	r3, [r1, #0]
 800135e:	6826      	ldr	r6, [r4, #0]
 8001360:	6960      	ldr	r0, [r4, #20]
 8001362:	1d1d      	adds	r5, r3, #4
 8001364:	600d      	str	r5, [r1, #0]
 8001366:	0635      	lsls	r5, r6, #24
 8001368:	681b      	ldr	r3, [r3, #0]
 800136a:	d501      	bpl.n	8001370 <_printf_i+0x1cc>
 800136c:	6018      	str	r0, [r3, #0]
 800136e:	e002      	b.n	8001376 <_printf_i+0x1d2>
 8001370:	0671      	lsls	r1, r6, #25
 8001372:	d5fb      	bpl.n	800136c <_printf_i+0x1c8>
 8001374:	8018      	strh	r0, [r3, #0]
 8001376:	2300      	movs	r3, #0
 8001378:	6123      	str	r3, [r4, #16]
 800137a:	4616      	mov	r6, r2
 800137c:	e7ba      	b.n	80012f4 <_printf_i+0x150>
 800137e:	680b      	ldr	r3, [r1, #0]
 8001380:	1d1a      	adds	r2, r3, #4
 8001382:	600a      	str	r2, [r1, #0]
 8001384:	681e      	ldr	r6, [r3, #0]
 8001386:	6862      	ldr	r2, [r4, #4]
 8001388:	2100      	movs	r1, #0
 800138a:	4630      	mov	r0, r6
 800138c:	f7fe ff40 	bl	8000210 <memchr>
 8001390:	b108      	cbz	r0, 8001396 <_printf_i+0x1f2>
 8001392:	1b80      	subs	r0, r0, r6
 8001394:	6060      	str	r0, [r4, #4]
 8001396:	6863      	ldr	r3, [r4, #4]
 8001398:	6123      	str	r3, [r4, #16]
 800139a:	2300      	movs	r3, #0
 800139c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80013a0:	e7a8      	b.n	80012f4 <_printf_i+0x150>
 80013a2:	6923      	ldr	r3, [r4, #16]
 80013a4:	4632      	mov	r2, r6
 80013a6:	4649      	mov	r1, r9
 80013a8:	4640      	mov	r0, r8
 80013aa:	47d0      	blx	sl
 80013ac:	3001      	adds	r0, #1
 80013ae:	d0ab      	beq.n	8001308 <_printf_i+0x164>
 80013b0:	6823      	ldr	r3, [r4, #0]
 80013b2:	079b      	lsls	r3, r3, #30
 80013b4:	d413      	bmi.n	80013de <_printf_i+0x23a>
 80013b6:	68e0      	ldr	r0, [r4, #12]
 80013b8:	9b03      	ldr	r3, [sp, #12]
 80013ba:	4298      	cmp	r0, r3
 80013bc:	bfb8      	it	lt
 80013be:	4618      	movlt	r0, r3
 80013c0:	e7a4      	b.n	800130c <_printf_i+0x168>
 80013c2:	2301      	movs	r3, #1
 80013c4:	4632      	mov	r2, r6
 80013c6:	4649      	mov	r1, r9
 80013c8:	4640      	mov	r0, r8
 80013ca:	47d0      	blx	sl
 80013cc:	3001      	adds	r0, #1
 80013ce:	d09b      	beq.n	8001308 <_printf_i+0x164>
 80013d0:	3501      	adds	r5, #1
 80013d2:	68e3      	ldr	r3, [r4, #12]
 80013d4:	9903      	ldr	r1, [sp, #12]
 80013d6:	1a5b      	subs	r3, r3, r1
 80013d8:	42ab      	cmp	r3, r5
 80013da:	dcf2      	bgt.n	80013c2 <_printf_i+0x21e>
 80013dc:	e7eb      	b.n	80013b6 <_printf_i+0x212>
 80013de:	2500      	movs	r5, #0
 80013e0:	f104 0619 	add.w	r6, r4, #25
 80013e4:	e7f5      	b.n	80013d2 <_printf_i+0x22e>
 80013e6:	bf00      	nop
 80013e8:	0800169d 	.word	0x0800169d
 80013ec:	080016ae 	.word	0x080016ae

080013f0 <_sbrk_r>:
 80013f0:	b538      	push	{r3, r4, r5, lr}
 80013f2:	4d06      	ldr	r5, [pc, #24]	; (800140c <_sbrk_r+0x1c>)
 80013f4:	2300      	movs	r3, #0
 80013f6:	4604      	mov	r4, r0
 80013f8:	4608      	mov	r0, r1
 80013fa:	602b      	str	r3, [r5, #0]
 80013fc:	f7ff f862 	bl	80004c4 <_sbrk>
 8001400:	1c43      	adds	r3, r0, #1
 8001402:	d102      	bne.n	800140a <_sbrk_r+0x1a>
 8001404:	682b      	ldr	r3, [r5, #0]
 8001406:	b103      	cbz	r3, 800140a <_sbrk_r+0x1a>
 8001408:	6023      	str	r3, [r4, #0]
 800140a:	bd38      	pop	{r3, r4, r5, pc}
 800140c:	20000098 	.word	0x20000098

08001410 <__sread>:
 8001410:	b510      	push	{r4, lr}
 8001412:	460c      	mov	r4, r1
 8001414:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001418:	f000 f8a0 	bl	800155c <_read_r>
 800141c:	2800      	cmp	r0, #0
 800141e:	bfab      	itete	ge
 8001420:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001422:	89a3      	ldrhlt	r3, [r4, #12]
 8001424:	181b      	addge	r3, r3, r0
 8001426:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800142a:	bfac      	ite	ge
 800142c:	6563      	strge	r3, [r4, #84]	; 0x54
 800142e:	81a3      	strhlt	r3, [r4, #12]
 8001430:	bd10      	pop	{r4, pc}

08001432 <__swrite>:
 8001432:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001436:	461f      	mov	r7, r3
 8001438:	898b      	ldrh	r3, [r1, #12]
 800143a:	05db      	lsls	r3, r3, #23
 800143c:	4605      	mov	r5, r0
 800143e:	460c      	mov	r4, r1
 8001440:	4616      	mov	r6, r2
 8001442:	d505      	bpl.n	8001450 <__swrite+0x1e>
 8001444:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001448:	2302      	movs	r3, #2
 800144a:	2200      	movs	r2, #0
 800144c:	f000 f868 	bl	8001520 <_lseek_r>
 8001450:	89a3      	ldrh	r3, [r4, #12]
 8001452:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001456:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800145a:	81a3      	strh	r3, [r4, #12]
 800145c:	4632      	mov	r2, r6
 800145e:	463b      	mov	r3, r7
 8001460:	4628      	mov	r0, r5
 8001462:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001466:	f000 b817 	b.w	8001498 <_write_r>

0800146a <__sseek>:
 800146a:	b510      	push	{r4, lr}
 800146c:	460c      	mov	r4, r1
 800146e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001472:	f000 f855 	bl	8001520 <_lseek_r>
 8001476:	1c43      	adds	r3, r0, #1
 8001478:	89a3      	ldrh	r3, [r4, #12]
 800147a:	bf15      	itete	ne
 800147c:	6560      	strne	r0, [r4, #84]	; 0x54
 800147e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001482:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001486:	81a3      	strheq	r3, [r4, #12]
 8001488:	bf18      	it	ne
 800148a:	81a3      	strhne	r3, [r4, #12]
 800148c:	bd10      	pop	{r4, pc}

0800148e <__sclose>:
 800148e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001492:	f000 b813 	b.w	80014bc <_close_r>
	...

08001498 <_write_r>:
 8001498:	b538      	push	{r3, r4, r5, lr}
 800149a:	4d07      	ldr	r5, [pc, #28]	; (80014b8 <_write_r+0x20>)
 800149c:	4604      	mov	r4, r0
 800149e:	4608      	mov	r0, r1
 80014a0:	4611      	mov	r1, r2
 80014a2:	2200      	movs	r2, #0
 80014a4:	602a      	str	r2, [r5, #0]
 80014a6:	461a      	mov	r2, r3
 80014a8:	f7fe ffbb 	bl	8000422 <_write>
 80014ac:	1c43      	adds	r3, r0, #1
 80014ae:	d102      	bne.n	80014b6 <_write_r+0x1e>
 80014b0:	682b      	ldr	r3, [r5, #0]
 80014b2:	b103      	cbz	r3, 80014b6 <_write_r+0x1e>
 80014b4:	6023      	str	r3, [r4, #0]
 80014b6:	bd38      	pop	{r3, r4, r5, pc}
 80014b8:	20000098 	.word	0x20000098

080014bc <_close_r>:
 80014bc:	b538      	push	{r3, r4, r5, lr}
 80014be:	4d06      	ldr	r5, [pc, #24]	; (80014d8 <_close_r+0x1c>)
 80014c0:	2300      	movs	r3, #0
 80014c2:	4604      	mov	r4, r0
 80014c4:	4608      	mov	r0, r1
 80014c6:	602b      	str	r3, [r5, #0]
 80014c8:	f7fe ffc7 	bl	800045a <_close>
 80014cc:	1c43      	adds	r3, r0, #1
 80014ce:	d102      	bne.n	80014d6 <_close_r+0x1a>
 80014d0:	682b      	ldr	r3, [r5, #0]
 80014d2:	b103      	cbz	r3, 80014d6 <_close_r+0x1a>
 80014d4:	6023      	str	r3, [r4, #0]
 80014d6:	bd38      	pop	{r3, r4, r5, pc}
 80014d8:	20000098 	.word	0x20000098

080014dc <_fstat_r>:
 80014dc:	b538      	push	{r3, r4, r5, lr}
 80014de:	4d07      	ldr	r5, [pc, #28]	; (80014fc <_fstat_r+0x20>)
 80014e0:	2300      	movs	r3, #0
 80014e2:	4604      	mov	r4, r0
 80014e4:	4608      	mov	r0, r1
 80014e6:	4611      	mov	r1, r2
 80014e8:	602b      	str	r3, [r5, #0]
 80014ea:	f7fe ffc2 	bl	8000472 <_fstat>
 80014ee:	1c43      	adds	r3, r0, #1
 80014f0:	d102      	bne.n	80014f8 <_fstat_r+0x1c>
 80014f2:	682b      	ldr	r3, [r5, #0]
 80014f4:	b103      	cbz	r3, 80014f8 <_fstat_r+0x1c>
 80014f6:	6023      	str	r3, [r4, #0]
 80014f8:	bd38      	pop	{r3, r4, r5, pc}
 80014fa:	bf00      	nop
 80014fc:	20000098 	.word	0x20000098

08001500 <_isatty_r>:
 8001500:	b538      	push	{r3, r4, r5, lr}
 8001502:	4d06      	ldr	r5, [pc, #24]	; (800151c <_isatty_r+0x1c>)
 8001504:	2300      	movs	r3, #0
 8001506:	4604      	mov	r4, r0
 8001508:	4608      	mov	r0, r1
 800150a:	602b      	str	r3, [r5, #0]
 800150c:	f7fe ffc1 	bl	8000492 <_isatty>
 8001510:	1c43      	adds	r3, r0, #1
 8001512:	d102      	bne.n	800151a <_isatty_r+0x1a>
 8001514:	682b      	ldr	r3, [r5, #0]
 8001516:	b103      	cbz	r3, 800151a <_isatty_r+0x1a>
 8001518:	6023      	str	r3, [r4, #0]
 800151a:	bd38      	pop	{r3, r4, r5, pc}
 800151c:	20000098 	.word	0x20000098

08001520 <_lseek_r>:
 8001520:	b538      	push	{r3, r4, r5, lr}
 8001522:	4d07      	ldr	r5, [pc, #28]	; (8001540 <_lseek_r+0x20>)
 8001524:	4604      	mov	r4, r0
 8001526:	4608      	mov	r0, r1
 8001528:	4611      	mov	r1, r2
 800152a:	2200      	movs	r2, #0
 800152c:	602a      	str	r2, [r5, #0]
 800152e:	461a      	mov	r2, r3
 8001530:	f7fe ffba 	bl	80004a8 <_lseek>
 8001534:	1c43      	adds	r3, r0, #1
 8001536:	d102      	bne.n	800153e <_lseek_r+0x1e>
 8001538:	682b      	ldr	r3, [r5, #0]
 800153a:	b103      	cbz	r3, 800153e <_lseek_r+0x1e>
 800153c:	6023      	str	r3, [r4, #0]
 800153e:	bd38      	pop	{r3, r4, r5, pc}
 8001540:	20000098 	.word	0x20000098

08001544 <__malloc_lock>:
 8001544:	4801      	ldr	r0, [pc, #4]	; (800154c <__malloc_lock+0x8>)
 8001546:	f7ff bb55 	b.w	8000bf4 <__retarget_lock_acquire_recursive>
 800154a:	bf00      	nop
 800154c:	20000090 	.word	0x20000090

08001550 <__malloc_unlock>:
 8001550:	4801      	ldr	r0, [pc, #4]	; (8001558 <__malloc_unlock+0x8>)
 8001552:	f7ff bb50 	b.w	8000bf6 <__retarget_lock_release_recursive>
 8001556:	bf00      	nop
 8001558:	20000090 	.word	0x20000090

0800155c <_read_r>:
 800155c:	b538      	push	{r3, r4, r5, lr}
 800155e:	4d07      	ldr	r5, [pc, #28]	; (800157c <_read_r+0x20>)
 8001560:	4604      	mov	r4, r0
 8001562:	4608      	mov	r0, r1
 8001564:	4611      	mov	r1, r2
 8001566:	2200      	movs	r2, #0
 8001568:	602a      	str	r2, [r5, #0]
 800156a:	461a      	mov	r2, r3
 800156c:	f7fe ff3c 	bl	80003e8 <_read>
 8001570:	1c43      	adds	r3, r0, #1
 8001572:	d102      	bne.n	800157a <_read_r+0x1e>
 8001574:	682b      	ldr	r3, [r5, #0]
 8001576:	b103      	cbz	r3, 800157a <_read_r+0x1e>
 8001578:	6023      	str	r3, [r4, #0]
 800157a:	bd38      	pop	{r3, r4, r5, pc}
 800157c:	20000098 	.word	0x20000098

08001580 <_init>:
 8001580:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001582:	bf00      	nop
 8001584:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001586:	bc08      	pop	{r3}
 8001588:	469e      	mov	lr, r3
 800158a:	4770      	bx	lr

0800158c <_fini>:
 800158c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800158e:	bf00      	nop
 8001590:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001592:	bc08      	pop	{r3}
 8001594:	469e      	mov	lr, r3
 8001596:	4770      	bx	lr
